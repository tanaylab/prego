% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression-2phase.R
\name{regress_pwm.two_phase}
\alias{regress_pwm.two_phase}
\title{Run a 2-phase PWM regression}
\usage{
regress_pwm.two_phase(
  sequences,
  response,
  motif_length = 15,
  score_metric = "r2",
  bidirect = TRUE,
  spat_min = 0,
  spat_max = NULL,
  spat_bin = 50,
  improve_epsilon = 0.0001,
  min_nuc_prob = 0.001,
  unif_prior = 0.05,
  is_train = NULL,
  include_response = TRUE,
  seed = 60427,
  verbose = FALSE,
  kmer_length = 6:8,
  min_gap = 0,
  max_gap = 1,
  min_kmer_cor = 0.1,
  consensus_single_thresh = 0.6,
  consensus_double_thresh = 0.85,
  two_phase_sample_frac = 0.1,
  first_phase_idxs = NULL,
  first_phase_metric = "r2",
  parallel = getOption("prego.parallel", FALSE),
  ...
)
}
\arguments{
\item{sequences}{A vector of DNA sequences ('A', 'T', 'C' or 'G'. Will go through \code{toupper})}

\item{response}{A matrix of response variables - number of rows should equal the number of sequences}

\item{is_train}{a boolean vector that determine which subset of sequences to use when screening}

\item{seed}{random seed}

\item{verbose}{verbosity of the second phase of the optimization.}

\item{kmer_length}{a vector of kmer lengths to screen in order to find the best seed motif.}

\item{min_gap, max_gap}{the length of a gap to be considered in the pattern. Only one gap, of length min_gap:max_gap, is being used, and is located anywhere in the motif. Note that this greatly expand the search space (and increase multiple tesing severly).}

\item{two_phase_sample_frac}{fraction of the dataset to sample for the first phase of the optimization (default: 0.1). When \code{response} is categorical (0 and 1), the sampling would be stratified by the category,
i.e. \code{two_phase_sample_frac} can be a vector of length 2 with the fraction of 0 and 1 responses to sample
respectively.}

\item{first_phase_idxs}{indices of the sequences to use in the first phase of the optimization. If NULL, the indices would be sampled using \code{two_phase_sample_frac}.}

\item{first_phase_metric}{metric to use in order to choose the best motif in the first phase of the optimization. One of 'ks' or 'r2'. Note that unlike \code{score_metric} which is used in the regression itself, this metric is used only for choosing the best motif in the first phase of the optimization out of all the runs on the sampled dataset.}

\item{parallel}{whether to run the first phase of the optimization in parallel. use \code{set_parallel}
to set the number of cores to use.}
}
\value{
a list with the following elements:
\itemize{
\item{pssm: }{data frame with the pssm matrix with the inferred motif, where rows are positions and columns are nucleotides.}
\item{spat: }{a data frame with the inferred spatial model, with the spatial factor for each bin.}
\item{pred: }{a vector with the predicted pwm for each sequence.}
\item{consensus: }{Consensus sequence based on the PSSM.}
\item{response: }{The response matrix. If \code{include_response} is FALSE, the response matrix is not included in the list.}
\item{r2: }{\eqn{r^2} of the prediction with respect to the each response variable.}
\item{ks: }{If response is binary, Kolmogorov-Smirnov test results of the predictions where the response was 1 vs the predictions where the response was 0.}
\item{seed_motif: }{The seed motif that started the regression.}
\item{kmers: }{The k-mers that were screened in order to find the best seed motif (if motif was NULL).}
}
}
\description{
The first phase of the optimization would be performed with a sampled dataset of size \code{two_phase_sample_frac} where different candidates of kmers would be regressed in order to find the best seed. Thenm the optimization would be performed on the full dataset while initializing the motif from the sampled dataset. You can also give explicit indices of the sequences to use in the first phase using \code{first_phase_idxs}.
}
\examples{
res <- regress_pwm.two_phase(cluster_sequences_example, cluster_mat_example[, 1], two_phase_sample_frac = c(0.1, 1), first_phase_metric = "ks")
res$pssm
res$spat
head(res$pred)

plot_regression_qc(res)

}
