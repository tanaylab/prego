% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression-cv.R
\name{regress_pwm.cv}
\alias{regress_pwm.cv}
\title{Cross-validate a PWM regression model}
\usage{
regress_pwm.cv(
  sequences,
  response,
  nfolds = NULL,
  metric = NULL,
  folds = NULL,
  categories = NULL,
  use_sample = TRUE,
  seed = 60427,
  parallel = getOption("prego.parallel", FALSE),
  add_full_model = TRUE,
  ...
)
}
\arguments{
\item{sequences}{A vector of DNA sequences ('A', 'T', 'C' or 'G'. Will go through \code{toupper})}

\item{response}{A matrix of response variables - number of rows should equal the number of sequences}

\item{nfolds}{number of folds for cross-validation. Can be NULL if \code{folds} are provided.}

\item{metric}{metric to use for cross-validation. One of 'ks' or 'r2'. If NULL - 'ks' would be set for binary response and 'r2' for continuous response.}

\item{folds}{vector of fold numbers for each sequence (optional)}

\item{categories}{vector of categories for each sequence (optional)}

\item{use_sample}{whether to use sampled optimization or not.}

\item{seed}{random seed}

\item{parallel}{whether to run the cross-validation in parallel.}

\item{add_full_model}{whether to add the full model (without cross-validation) to the results.}
}
\value{
a list with the following elements:
\itemize{
\item{cv_models: }{a list of models, one for each fold.}
\item{cv_pred: }{a vector of predictions for each sequence.}
\item{score: }{score of the model on the cross-validated predictions.}
\item{cv_scores: }{a vector of scores for each fold.}
\item{folds: }{a vector with the fold number for each sequence.}
\item{full_model: }{The full model (without cross-validation), if \code{add_full_model} is TRUE.}
}
}
\description{
Perform cross-validation on a PWM regression model. You can either provide explicit folds, or use the \code{nfolds} argument to set the number of folds. If the response is binary (0 and 1) or a \code{categories} vector is given, the folds would be stratified by the response/categories.
}
\examples{
res <- regress_pwm.cv(cluster_sequences_example, cluster_mat_example[, 1], nfolds = 5, use_sample = TRUE, sample_frac = c(0.1, 1))
res$score
res$cv_scores

plot(res$cv_pred, res$full_model$pred, xlab = "CV predictions", ylab = "Full model predictions", cex = 0.1)
plot_regression_prediction_binary(res$cv_pred, cluster_mat_example[, 1])
plot_regression_prediction_binary(res$full_model$pred, cluster_mat_example[, 1])

# without sampling
res <- regress_pwm.cv(cluster_sequences_example, cluster_mat_example[, 1], nfolds = 5, use_sample = FALSE)
res$score
res$cv_scores
plot(res$cv_pred, res$full_model$pred, xlab = "CV predictions", ylab = "Full model predictions", cex = 0.1)

}
