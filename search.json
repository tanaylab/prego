[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Amos Tanay. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Tanay (2023). prego: PWM Regression Optimizer. R package version 0.0.0.9000.","code":"@Manual{,   title = {prego: PWM Regression Optimizer},   author = {Aviezer Lifshitz and Amos Tanay},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"prego","dir":"","previous_headings":"","what":"PWM Regression Optimizer","title":"PWM Regression Optimizer","text":"prego package implements simple regression algorithms finding motifs DNA. can either use find motif discriminating two clusters DNA sequences, generating motifs one continuous variables. PREGO algorithm described .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PWM Regression Optimizer","text":"can install development version prego like :","code":"remotes::install_github(\"tanaylab/prego\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PWM Regression Optimizer","text":"set continuous variables:  binary response:  clusters sequences:","code":"library(prego) res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases res$stats #> # A tibble: 5 x 7 #>   cluster consensus      ks_D        r2      seed_motif              db_match db_match_dist #> 1    c100   AT***TC 0.7024075 0.3852463 ***ATCCATCA**** JASPAR.MEIS1.MA1639.1      0.244724 #> 2    c111   Y*RTAAA 0.8479663 0.4978355 ***CAATTAAC****   JOLMA.CDX1_mono_DBD      0.152716 #> 3     c29 T*A***W*T 0.8507039 0.5581745 ***TAATCATT****            HOMER.Hnf1      0.340463 #> 4      c5      GATA 0.5887910 0.2227806 ***CTGATAAG****      JASPAR.GATA1/2/3      0.198050 #> 5      c6      TATC 0.6160721 0.2783910 ***TCTTATCT****          JASPAR.GATAd      0.219126"},{"path":"/reference/HOMER_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the HOMER motif database — HOMER_motifs","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"PSSMs HOMER motif database","code":""},{"path":"/reference/HOMER_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"","code":"HOMER_motifs"},{"path":"/reference/HOMER_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/HOMER_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"http://homer.ucsd.edu/homer/motif/","code":""},{"path":"/reference/HOMER_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432","code":""},{"path":"/reference/JASPAR_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the JASPAR motif database — JASPAR_motifs","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"PSSMs JASPAR motif database","code":""},{"path":"/reference/JASPAR_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"","code":"JASPAR_motifs"},{"path":"/reference/JASPAR_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/JASPAR_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"https://jaspar.genereg.net/downloads/","code":""},{"path":"/reference/JASPAR_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113","code":""},{"path":"/reference/JOLMA_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"PSSMs Jolma et al. motif database","code":""},{"path":"/reference/JOLMA_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"","code":"JOLMA_motifs"},{"path":"/reference/JOLMA_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/JOLMA_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/JOLMA_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/all_motif_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame contain PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. Individual datasets available within package HOMER_motifs, JASPAR_motifs, JOLMA_motifs.","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets()"},{"path":"/reference/all_motif_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame concatenates motifs \"HOMER\", \"JASPAR\" \"JOLMA\". Motif names prefixed dataset name, e.g. \"JASPAR.GATA4\".","code":""},{"path":"/reference/all_motif_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"HOMER:  Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432 JASPAR: Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113 JOLMA: Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets() #> # A tibble: 38,758 x 8 #>        motif pos     A     C     G     T dataset motif_orig #> 1 HOMER.AP_1   0 0.419 0.275 0.277 0.028   HOMER       AP_1 #> 2 HOMER.AP_1   1 0.001 0.001 0.001 0.997   HOMER       AP_1 #> 3 HOMER.AP_1   2 0.010 0.002 0.965 0.023   HOMER       AP_1 #> 4 HOMER.AP_1   3 0.984 0.003 0.001 0.012   HOMER       AP_1 #> 5 HOMER.AP_1   4 0.062 0.579 0.305 0.054   HOMER       AP_1 #> 6 HOMER.AP_1   5 0.026 0.001 0.001 0.972   HOMER       AP_1 #> # ... with 38,752 more rows"},{"path":"/reference/cluster_mat_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset examples — cluster_mat_example","title":"Dataset examples — cluster_mat_example","text":"Dataset examples","code":""},{"path":"/reference/cluster_mat_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset examples — cluster_mat_example","text":"","code":"cluster_mat_example  cluster_sequences_example  clusters_example  response_mat_example  sequences_example"},{"path":"/reference/cluster_mat_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset examples — cluster_mat_example","text":"sequences response variables various formats function examples object class character length 2359. object class character length 2359. object class matrix (inherits array) 1000 rows 5 columns. object class character length 1000.","code":""},{"path":"/reference/compute_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"Compute PWMs set sequences given PSSM matrix","code":""},{"path":"/reference/compute_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"compute_pwm(   sequences,   pssm,   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0 )"},{"path":"/reference/compute_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"sequences vector sequences pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide.","code":""},{"path":"/reference/compute_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"vector predicted pwm sequence.","code":""},{"path":"/reference/compute_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"if (FALSE) { res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1])  pwm <- compute_pwm(cluster_sequences_example, res$pssm, res$spat) head(pwm)  # this is similar to the prediction in the regression head(res$pred) }"},{"path":"/reference/consensus_from_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert PSSM to consensus sequence — consensus_from_pssm","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"Convert PSSM consensus sequence","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"consensus_from_pssm(pssm, single_thresh = 0.6, double_thresh = 0.85)"},{"path":"/reference/consensus_from_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"pssm PSSM matrix single_thresh, double_thresh thresholds consensus sequence calculation (single double nucleotides)","code":""},{"path":"/reference/consensus_from_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"consensus sequence PSSM. consensus sequence can found, function returns NA.","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"if (FALSE) { res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) consensus_from_pssm(res$pssm) }"},{"path":"/reference/extract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of sequences from a motif database — extract_pwm","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"Extracts pwm motif motif database. Note large number motifs, function can slow consume lot memory.","code":""},{"path":"/reference/extract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"extract_pwm(   sequences,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/extract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"sequences vector sequences motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide. parallel logical, whether use parallel processing","code":""},{"path":"/reference/extract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"matrix size # sequences x # motifs pwm sequence motif","code":""},{"path":"/reference/extract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"if (FALSE) { pwms <- extract_pwm(     cluster_sequences_example,     motifs = c(\"JASPAR.CDX1\", \"HOMER.Hnf1\", \"HOMER.GATA3_2\") ) head(pwms)  # all motifs all_pwms <- extract_pwm(cluster_sequences_example, prior = 0.01) dim(all_pwms) all_pwms[1:5, 1:5]  # for a specific dataset pwms_jaspar <- extract_pwm(cluster_sequences_example, dataset = JASPAR_motifs, prior = 0.01) head(pwms_jaspar)  # for specific motifs pwms_jaspar <- extract_pwm(     cluster_sequences_example,     motifs = c(\"JASPAR.CDX1\", \"JASPAR.CDX2\"),     prior = 0.01 ) }"},{"path":"/reference/get_motif_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pssm of sequences from a motif database — get_motif_pssm","title":"Extract pssm of sequences from a motif database — get_motif_pssm","text":"Extract pssm sequences motif database","code":""},{"path":"/reference/get_motif_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pssm of sequences from a motif database — get_motif_pssm","text":"","code":"get_motif_pssm(motif, dataset = all_motif_datasets())"},{"path":"/reference/get_motif_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pssm of sequences from a motif database — get_motif_pssm","text":"motif name motif extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets().","code":""},{"path":"/reference/get_motif_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pssm of sequences from a motif database — get_motif_pssm","text":"data frame pssm motif","code":""},{"path":"/reference/get_motif_pssm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pssm of sequences from a motif database — get_motif_pssm","text":"","code":"get_motif_pssm(\"JASPAR.HNF1A\") #> # A tibble: 15 x 5 #>   pos          A            C            G            T #> 1   0 0.36815323 0.1725210262 0.2466605414 0.2126652060 #> 2   1 0.45927632 0.0273026316 0.4715789474 0.0418421053 #> 3   2 0.02280446 0.0642891800 0.0547671033 0.8581392528 #> 4   3 0.14734287 0.1097234161 0.0275066997 0.7154270112 #> 5   4 0.98175132 0.0002081599 0.0170691091 0.0009714127 #> 6   5 0.93368088 0.0417711495 0.0005279134 0.0240200607 #> # ... with 9 more rows"},{"path":"/reference/gextract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of intervals from a motif database — gextract_pwm","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"Extract pwm intervals motif database","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"gextract_pwm(   intervals,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/gextract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals misha intervals set motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide. parallel logical, whether use parallel processing","code":""},{"path":"/reference/gextract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals set additional columns per motif, containing pwm interval motif","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"if (FALSE) { library(misha) gdb.init_examples() pwms <- gextract_pwm(\"annotations\") pwms[, 1:20] }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_pssm_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"Plot LOGO pssm result regression","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"plot_pssm_logo(pssm, title = \"Sequence model\", subtitle = ggplot2::waiver())"},{"path":"/reference/plot_pssm_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"pssm 'pssm' field regression result title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"if (FALSE) { res <- regress_pwm(sequences_example, response_mat_example) plot_pssm_logo(res$pssm) }"},{"path":"/reference/plot_pssm_logo_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of pssm from dataset (e.g. ","title":"Plot LOGO of pssm from dataset (e.g. ","text":"Plot LOGO pssm dataset (e.g. \"HOMER\" \"JASPAR\")","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(   motif,   dataset = all_motif_datasets(),   title = motif,   subtitle = ggplot2::waiver() )"},{"path":"/reference/plot_pssm_logo_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of pssm from dataset (e.g. ","text":"motif motif name (e.g. \"GATA4\") dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets() title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of pssm from dataset (e.g. ","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(\"JASPAR.Brachyury\") #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as of ggplot2 3.3.4. #> ℹ The deprecated feature was likely used in the ggseqlogo package. #>   Please report the issue at <https://github.com/omarwagih/ggseqlogo/issues>.   plot_pssm_logo_dataset(\"GATA5\", JASPAR_motifs)"},{"path":"/reference/plot_regression_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"return scatter plot response variable averages vs regression model's prediction","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"plot_regression_prediction(pred, response, point_size = 0.5)"},{"path":"/reference/plot_regression_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"pred 'pred' field regression result response 'response' field regression result (response variable) point_size size points plot (default: 0.5)","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"if (FALSE) { res <- regress_pwm(sequences_example, response_mat_example) plot_regression_prediction(res$pred, res$response) }"},{"path":"/reference/plot_regression_prediction_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"Plot cumulative regression model's prediction stratified response variable","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"plot_regression_prediction_binary(pred, response)"},{"path":"/reference/plot_regression_prediction_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"pred 'pred' field regression result response 'response' field regression result (response variable). binary (0/1).","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"if (FALSE) { res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], score_metric = \"ks\") plot_regression_prediction_binary(res_binary$pred, res_binary$response) }"},{"path":"/reference/plot_regression_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the regression results — plot_regression_qc","title":"Plot the regression results — plot_regression_qc","text":"Plot QC regression results","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the regression results — plot_regression_qc","text":"","code":"plot_regression_qc(   reg,   response = NULL,   title = glue(\"Motif regression results (consensus: {reg$consensus})\"),   subtitle = NULL,   caption = NULL )"},{"path":"/reference/plot_regression_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the regression results — plot_regression_qc","text":"reg output regress_pwm response response variable title title plot (optional) subtitle subtitle plot (optional) caption caption plot (optional). caption NULL default caption plotted.","code":""},{"path":"/reference/plot_regression_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the regression results — plot_regression_qc","text":"patchwork object","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the regression results — plot_regression_qc","text":"","code":"if (FALSE) { res <- regress_pwm(sequences_example, response_mat_example) plot_regression_qc(res)  res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], screen_db = TRUE) plot_regression_qc(res_binary) }"},{"path":"/reference/plot_regression_qc_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the regression results for multiple motifs — plot_regression_qc_multi","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"plot regression results motif_num > 1","code":""},{"path":"/reference/plot_regression_qc_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"","code":"plot_regression_qc_multi(   reg,   title = glue(\"Motif regression results (consensus: {reg$consensus})\"),   subtitle = NULL,   caption = NULL )"},{"path":"/reference/plot_regression_qc_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"reg output regress_pwm title title plot (optional) subtitle subtitle plot (optional) caption caption plot (optional). caption NULL default caption plotted.","code":""},{"path":"/reference/plot_regression_qc_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"","code":"if (FALSE) { res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 3], motif_num = 3) plot_regression_qc_multi(res_binary) }"},{"path":"/reference/plot_spat_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial model of the regression result — plot_spat_model","title":"Plot spatial model of the regression result — plot_spat_model","text":"Plot spatial model regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"plot_spat_model(spat)"},{"path":"/reference/plot_spat_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial model of the regression result — plot_spat_model","text":"spat 'spat' field regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"if (FALSE) { res <- regress_pwm(sequences_example, response_mat_example) plot_spat_model(res$spat) }"},{"path":"/reference/prego-package.html","id":null,"dir":"Reference","previous_headings":"","what":"prego: PWM Regression Optimizer — prego-package","title":"prego: PWM Regression Optimizer — prego-package","text":"PREGO implements regression algorithms finding motifs DNA. contains algorithms described : \"Extensive low-affinity transcriptional interactions yeast genome\" doi:10.1101/gr.5113606 .","code":""},{"path":"/reference/prego-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prego: PWM Regression Optimizer — prego-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Amos Tanay amos.tanay@weizmann.ac.il","code":""},{"path":"/reference/pssm_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the correlation between two given PSSMs — pssm_cor","title":"Compute the correlation between two given PSSMs — pssm_cor","text":"correlation computed shifting shorter PSSM along longer one computing correlation position. maximum correlation returned.","code":""},{"path":"/reference/pssm_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the correlation between two given PSSMs — pssm_cor","text":"","code":"pssm_cor(pssm1, pssm2, method = \"spearman\")"},{"path":"/reference/pssm_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the correlation between two given PSSMs — pssm_cor","text":"pssm1 first PSSM matrix data frame pssm2 second PSSM matrix data frame method method use computing correlation. See cor details.","code":""},{"path":"/reference/pssm_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the correlation between two given PSSMs — pssm_cor","text":"Correlation two PSSMs","code":""},{"path":"/reference/pssm_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the correlation between two given PSSMs — pssm_cor","text":"","code":"if (FALSE) { res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) pssm_cor(res1$pssm, JASPAR_motifs[JASPAR_motifs$motif == \"HNF1A\", ]) }"},{"path":"/reference/pssm_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute KL divergence between two PSSMs — pssm_diff","title":"Compute KL divergence between two PSSMs — pssm_diff","text":"Compute KL divergence two PSSMs","code":""},{"path":"/reference/pssm_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute KL divergence between two PSSMs — pssm_diff","text":"","code":"pssm_diff(pssm1, pssm2)"},{"path":"/reference/pssm_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute KL divergence between two PSSMs — pssm_diff","text":"pssm1 first PSSM matrix data frame pssm2 second PSSM matrix data frame","code":""},{"path":"/reference/pssm_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute KL divergence between two PSSMs — pssm_diff","text":"KL divergence two PSSMs","code":""},{"path":"/reference/pssm_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute KL divergence between two PSSMs — pssm_diff","text":"","code":"if (FALSE) { res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) pssm_diff(res1$pssm, JASPAR_motifs[JASPAR_motifs$motif == \"HNF1A\", ]) }"},{"path":"/reference/pssm_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match PSSM to a directory of motifs — pssm_match","title":"Match PSSM to a directory of motifs — pssm_match","text":"Match PSSM directory motifs. PSSM matched motif directory computing correlation two PSSMs.","code":""},{"path":"/reference/pssm_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"pssm_match(   pssm,   motifs,   best = FALSE,   method = \"spearman\",   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/pssm_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match PSSM to a directory of motifs — pssm_match","text":"pssm PSSM matrix data frame motifs data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name best return best match method method use computing correlation. See cor details. parallel use parallel processing. Set number cores using set_parallel.","code":""},{"path":"/reference/pssm_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match PSSM to a directory of motifs — pssm_match","text":"best TRUE, string best match. Otherwise, data frame row per motif column named 'cor' correlation pssm. data frame sorted descreasing correlation.","code":""},{"path":"/reference/pssm_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"if (FALSE) { res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) head(pssm_match(res1$pssm, JASPAR_motifs)) pssm_match(res1$pssm, JASPAR_motifs, best = TRUE) }"},{"path":"/reference/regress_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on clusters — regress_pwm.clusters","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"Run PWM regression clusters","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"regress_pwm.clusters(   sequences,   clusters,   use_sample = TRUE,   match_with_db = TRUE,   screen_db = FALSE,   sample_frac = NULL,   sample_ratio = 1,   final_metric = \"ks\",   parallel = getOption(\"prego.parallel\", TRUE),   use_sge = FALSE,   dataset = all_motif_datasets(),   motifs = NULL,   min_D = 0,   prior = 0.01,   alternative = \"two.sided\",   ... )"},{"path":"/reference/regress_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) clusters vector cluster assignments sequence use_sample whether use sampled optimization (default: FALSE). match_with_db match resulting PWMs motif databases using pssm_match. add column named 'db_match' stats data frame, together 'pred_mat_db' database motif predictions, 'db_dataset' similar 'motif_dataset' database motifs. Note closest match returned, even similar enough absolute terms. Also, match done resulting regression pssm pssms database - order find best motif database set screen_db=TRUE. screen_db screen best motif database explains clusters. See screen_pwm.clusters. sample_frac vector two numbers, specifying fraction sequences use sampling sequences cluster (first number) cluster (second number). NULL - sample_ratio sample_frac NULL, number sequences cluster equal sample_ratio times number sequences cluster. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. NULL - 'ks' used binary response 'r2' continuous response. parallel whether run optimization parallel. use set_parallel set number cores use. use_sge use function gcluster.run2 misha.ext package run optimization SGE cluster. relevant misha.ext package installed. Note gcluster.run2 writes current environment starting parallelization, better run function clean environment. Also, Note 'prego' needs installed order work, .e. use devtools::load_all() pkgload::load_all() load package. dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). motifs names specific motifs extract dataset min_D minimum distance consider match prior prior probability nucleotide. alternative alternative hypothesis KS test. Can \"two.sided\", \"less\" \"greater\" ... Arguments passed regress_pwm, regress_pwm.sample response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. init_from_dataset TRUE, regression initialized PSSM best motif dataset. init_from_dataset initialize regression PSSM best motif motif_dataset, using final_metric metric. TRUE, motif parameter ignored. See screen_pwm details. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities include_response include response resulting list (default: TRUE) verbose show verbose messages. seed random seed consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. internal_num_folds number folds use internal cross-validation. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). sample_idxs indices sequences use. NULL, indices sampled using sample_frac.","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"list following elements: models: list models cluster cluster_mat: indicator matrix cluster assignments pred_mat: matrix energies predicted motifs per cluster (columns) sequence (rows) motif_dataset: data frame PSSMs cluster spat_dataset: data frame spatial model cluster stats: data frame statistics cluster","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"if (FALSE) { res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) head(res$pred_mat) res$stats  plot_regression_qc(res$models[[1]], title = names(res$models)[1])  # multiple motifs per cluster res_multi <- regress_pwm.clusters(cluster_sequences_example, clusters_example, motif_num = 3) res_multi$multi_stats plot_regression_qc_multi(res_multi$models[[1]], title = names(res_multi$models)[1]) }  # screen also for the best motif in the database res_screen <- regress_pwm.clusters(cluster_sequences_example, clusters_example, screen_db = TRUE) #> ℹ Using sampled optimization #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases #> Warning: Automatic coercion from double to character was deprecated in purrr 1.0.0. #> ℹ Please use an explicit call to `as.character()` within `map_chr()` instead. #> ℹ The deprecated feature was likely used in the prego package. #>   Please report the issue to the authors. #> ℹ Screening motif databases for 5 clusters res_screen$stats #> # A tibble: 5 x 9 #>   cluster consensus      ks_D        r2      seed_motif            db_match #> 1    c100   AT***TC 0.6761136 0.3393595 ***ATCCATCA****       JASPAR.WRKY43 #> 2    c111    Y*RTAA 0.8448837 0.4916430 ***CCATAAAA**** JOLMA.CDX1_mono_DBD #> 3     c29 T*A***W*Y 0.8344155 0.5294243 ***TAATCATT****       JASPAR.Lhx3/4 #> 4      c5      GATA 0.6025883 0.2055520 ***CTGATAAG****    JASPAR.GATA1/2/3 #> 5      c6       ATC 0.6026546 0.2715390 ***ATCTTATC****         JASPAR.NID1 #>   db_match_dist   ks_D_db     db_motif #> 1      0.288080 0.6337245  HOMER.HOXA2 #> 2      0.186615 0.7803839  JASPAR.CDX1 #> 3      0.351993 0.8510730 JASPAR.HNF1A #> 4      0.185342 0.5793942  HOMER.Gata2 #> 5      0.239715 0.5790557 JASPAR.GATA5  plot_regression_qc(res_screen$models[[1]], title = names(res_screen$models)[1])"},{"path":"/reference/regress_pwm.cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validate a PWM regression model — regress_pwm.cv","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"Perform cross-validation PWM regression model. can either provide explicit folds, use nfolds argument set number folds. response binary (0 1) categories vector given, folds stratified response/categories.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"","code":"regress_pwm.cv(   sequences,   response,   nfolds = NULL,   metric = NULL,   folds = NULL,   categories = NULL,   use_sample = FALSE,   seed = 60427,   parallel = getOption(\"prego.parallel\", FALSE),   fold_parallel = !parallel && getOption(\"prego.parallel\", FALSE),   add_full_model = TRUE,   alternative = \"less\",   ... )"},{"path":"/reference/regress_pwm.cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences nfolds number folds cross-validation. Can NULL folds provided. metric metric use cross-validation. One 'ks' 'r2'. NULL - 'ks' set binary response 'r2' continuous response. folds vector fold numbers sequence (optional) categories vector categories sequence (optional) use_sample whether use sampled optimization . seed random seed parallel whether run cross-validation parallel. fold_parallel whether run optimization fold parallel. recommended set FALSE parallel TRUE. add_full_model whether add full model (without cross-validation) results. alternative alternative hypothesis p-value calculation using ks.test. One \"two.sided\", \"less\" \"greater\". ... Arguments passed regress_pwm, regress_pwm.sample motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. init_from_dataset TRUE, regression initialized PSSM best motif dataset. init_from_dataset initialize regression PSSM best motif motif_dataset, using final_metric metric. TRUE, motif parameter ignored. See screen_pwm details. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities include_response include response resulting list (default: TRUE) verbose show verbose messages. consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. screen_db Screen motif_dataset using screen_pwm use best motif initial motif. TRUE, following fields added return value: \"db_motif\", \"db_motif_pred\", \"db_motif_pssm\" \"db_motif_score\". motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. NULL - 'ks' used binary response 'r2' continuous response. kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. internal_num_folds number folds use internal cross-validation. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). sample_frac fraction dataset sample. response categorical (0 1), sampling stratified category, .e. sample_frac can vector length 2 fraction 0 1 responses sample respectively. NULL - default 0.1 continuous variables, binary variables - number 0 responses equal sample_ratio times number 1 responses. sample_idxs indices sequences use. NULL, indices sampled using sample_frac. sample_ratio ratio '1' category '0' category sampled dataset. Relevant sample_frac NULL.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"list following elements: cv_models: list models, one fold. cv_pred: vector predictions sequence. score: score model cross-validated predictions. cv_scores: vector scores fold. folds: vector fold number sequence. full_model: full model (without cross-validation), add_full_model TRUE.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"","code":"if (FALSE) { res <- regress_pwm.cv(     cluster_sequences_example, cluster_mat_example[, 1],     nfolds = 5, use_sample = TRUE, sample_frac = c(0.1, 1) ) res$score res$cv_scores  plot(     res$cv_pred,     res$full_model$pred,     xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1 ) plot_regression_prediction_binary(res$cv_pred, cluster_mat_example[, 1]) plot_regression_prediction_binary(res$full_model$pred, cluster_mat_example[, 1])  # without sampling res <- regress_pwm.cv(     cluster_sequences_example, cluster_mat_example[, 1],     nfolds = 5, use_sample = FALSE ) res$score res$cv_scores plot(res$cv_pred,     res$full_model$pred,     xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1 ) }"},{"path":"/reference/regress_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a PWM regression — regress_multiple_motifs","title":"Perform a PWM regression — regress_multiple_motifs","text":"Perform PWM regression","code":""},{"path":"/reference/regress_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a PWM regression — regress_multiple_motifs","text":"","code":"regress_multiple_motifs(   sequences,   response,   motif = NULL,   motif_length = 15,   score_metric = \"r2\",   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   spat_bin = 50,   spat_model = NULL,   improve_epsilon = 0.0001,   min_nuc_prob = 0.001,   unif_prior = 0.05,   is_train = NULL,   include_response = TRUE,   seed = 60427,   verbose = FALSE,   kmer_length = 8,   multi_kmers = FALSE,   final_metric = NULL,   max_cands = 10,   min_gap = 0,   max_gap = 1,   min_kmer_cor = 0.1,   motif_num = 2,   smooth_k = 100,   consensus_single_thresh = 0.6,   consensus_double_thresh = 0.85,   internal_num_folds = 1,   match_with_db = FALSE,   motif_dataset = all_motif_datasets(),   parallel = getOption(\"prego.parallel\", FALSE),   alternative = \"less\",   ... )  regress_pwm(   sequences,   response,   motif = NULL,   motif_length = 15,   init_from_dataset = FALSE,   score_metric = \"r2\",   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   spat_bin = 50,   spat_model = NULL,   improve_epsilon = 0.0001,   min_nuc_prob = 0.001,   unif_prior = 0.05,   is_train = NULL,   include_response = TRUE,   seed = 60427,   verbose = FALSE,   kmer_length = 8,   multi_kmers = TRUE,   final_metric = NULL,   max_cands = 10,   min_gap = 0,   max_gap = 1,   min_kmer_cor = 0.1,   motif_num = 1,   smooth_k = 100,   consensus_single_thresh = 0.6,   consensus_double_thresh = 0.85,   internal_num_folds = 1,   match_with_db = FALSE,   screen_db = FALSE,   motif_dataset = all_motif_datasets(),   parallel = getOption(\"prego.parallel\", FALSE),   alternative = \"less\",   ... )"},{"path":"/reference/regress_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a PWM regression — regress_multiple_motifs","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. init_from_dataset TRUE, regression initialized PSSM best motif dataset. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities is_train boolean vector determine subset sequences use screening include_response include response resulting list (default: TRUE) seed random seed verbose show verbose messages. kmer_length vector kmer lengths screen order find best seed motif. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. NULL - 'ks' used binary response 'r2' continuous response. max_cands maximum number kmer candidates try. min_gap, max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). min_kmer_cor minimal correlation kmer response order use seed. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. consensus_single_thresh, consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) internal_num_folds number folds use internal cross-validation. match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. parallel whether run optimization parallel. use set_parallel set number cores use. alternative alternative hypothesis p-value calculation using ks.test. One \"two.sided\", \"less\" \"greater\". ... Arguments passed screen_kmers min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE) init_from_dataset initialize regression PSSM best motif motif_dataset, using final_metric metric. TRUE, motif parameter ignored. See screen_pwm details. screen_db Screen motif_dataset using screen_pwm use best motif initial motif. TRUE, following fields added return value: \"db_motif\", \"db_motif_pred\", \"db_motif_pssm\" \"db_motif_score\".","code":""},{"path":"/reference/regress_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a PWM regression — regress_multiple_motifs","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. bins defined first bin starts spat_min last bin ends spat_max, bin size spat_bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample). predict: function can used predict PWM new sequence. match_with_db TRUE, following additional elements returned: motif_db: motif database similar resulting PSSM. db_match_cor: correlation resulting PSSM closest match motif database. db_match_pssm: PSSM closest match motif database. db_match_pred: predicted PWM closest match motif database. db_match_r2: \\(r^2\\) predicted PWM closest match motif database response db_match_ks: response binary, Kolmogorov-Smirnov test results predicted PWM closest match motif database response 1 vs predictions response 0. screen_db TRUE, following additional elements returned: db_motif: best motif motif database. db_motif_pred: predicted PWM best motif motif database. db_motif_pssm: PSSM best motif motif database. db_motif_score: score best motif motif database. n_motifs greater 1, list following elements returned: models: list () inferred model multi_stats: data frame following columns: model, score (KS binary, r^2 otherwise), comb_score (score combined linear model models 1:) additional statistics per model pred: vector predicted pwm using linear model combined scores. comb_modle: linear model combined scores. predict: function can used predict PWM new sequence.","code":""},{"path":"/reference/regress_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a PWM regression — regress_multiple_motifs","text":"","code":"if (FALSE) { res <- regress_pwm(sequences_example, response_mat_example) res$pssm res$spat head(res$pred)  plot_regression_qc(res)  # intialize with a pre-computed PSSM res1 <- regress_pwm(sequences_example, response_mat_example, motif = res$pssm)  # intialize with a pre-computed PSSM and spatial model res2 <- regress_pwm(     sequences_example,     response_mat_example,     motif = res$pssm,     spat_model = res$spat )  # binary response res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) plot_regression_qc(res_binary)  # match with db res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], match_with_db = TRUE) plot_regression_qc(res_binary)  # Screen for best db motif res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], screen_db = TRUE) plot_regression_qc(res_binary)  # initialize with a motif from the database res_binary <- regress_pwm(     cluster_sequences_example,     cluster_mat_example[, 1],     init_from_dataset = TRUE )  # use multiple kmer seeds res_multi <- regress_pwm(     cluster_sequences_example,     cluster_mat_example[, 1],     multi_kmers = TRUE,     kmer_length = 6:8,     final_metric = \"ks\" ) plot_regression_qc(res_multi)  # Screen for multiple motifs res_multi <- regress_pwm(     cluster_sequences_example,     cluster_mat_example[, 1],     motif_num = 3,     match_with_db = TRUE ) res_multi$multi_stats plot_regression_qc_multi(res_multi) }  # regress_multiple_motifs is an alias for regress_pwm with motif_num > 1 res_multi2 <- regress_multiple_motifs(     cluster_sequences_example,     cluster_mat_example[, 1],     motif_num = 5,     match_with_db = TRUE ) #> ℹ Running regression for 5 motifs #>  #> ── Running first regression ── #>  #> ℹ Using \"ks\" as the final metric #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.1, minimal number of occurrences: 50 #> ✔ Found 431 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*Y\" #> ℹ Best match in the database: \"JASPAR.Hox1\", KL: 0.331 #> ✔ \"JASPAR.Hox1\" KS test D: 0.3463, p-value: 0 #> ✔ KS test D: 0.8471, p-value: 0 #>  #> ── Running regression #2 ── #>  #> ℹ Using \"r2\" as the final metric #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.1, minimal number of occurrences: 50 #> ✔ Found 589 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATGC*TA***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTAATGC*TA*T\" #> ℹ Best match in the database: \"JOLMA.PITX1_mono_DBD\", KL: 0.45 #> ✔ R^2: 0.0106 #> ℹ KS statistic: 0.435191233272804 #> ℹ KS test statistic for models 1 and 2: 0.851665207867933 #> ℹ Improvement in KS test statistic: 0.00458650676490702 #>  #> ── Running regression #3 ── #>  #> ℹ Using \"r2\" as the final metric #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.1, minimal number of occurrences: 50 #> ✔ Found 851 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***GTTAATTG****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*GTTGATTG***Y\" #> ℹ Best match in the database: \"JASPAR.Hox5\", KL: 0.577 #> ✔ R^2: 0.0195 #> ℹ KS statistic: 0.0632236839240379 #> ℹ KS test statistic for models 1, 2, and 3: 0.86335301622968 #> ℹ Improvement in KS test statistic: 0.0116878083617472 #>  #> ── Running regression #4 ── #>  #> ℹ Using \"r2\" as the final metric #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.1, minimal number of occurrences: 50 #> ✔ Found 621 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAGCG*TTT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"ATMTAGCGCKAT*SA\" #> ℹ Best match in the database: \"JASPAR.DOF2.4\", KL: 0.762 #> ✔ R^2: 0.0097 #> ℹ KS statistic: 0.0455025452771935 #> ℹ KS test statistic for models 1, 2, 3, and 4: 0.865644636628477 #> ℹ Improvement in KS test statistic: 0.00229162039879638 #>  #> ── Running regression #5 ── #>  #> ℹ Using \"r2\" as the final metric #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.1, minimal number of occurrences: 50 #> ✔ Found 616 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAGCG*TTT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"MTAGCG*T*TW*R\" #> ℹ Best match in the database: \"HOMER.DPL_1\", KL: 0.747 #> ✔ R^2: 0.001 #> ℹ KS statistic: 0.0368978100600501 #> ℹ KS test statistic for models 1, 2, 3, 4, and 5: 0.866442621308913 #> ℹ Improvement in KS test statistic: 0.000797984680436015 #> ✔ Best model: model #1 (score of 0.847078701103026)"},{"path":"/reference/regress_pwm.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on a sample of the data — regress_pwm.sample","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"optimization performed sampled dataset size sample_frac, explicit sampled indices sample_idxs. Note multi_kmers TRUE default.","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"regress_pwm.sample(   sequences,   response,   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   include_response = TRUE,   motif_num = 1,   multi_kmers = TRUE,   sample_frac = NULL,   sample_idxs = NULL,   sample_ratio = 1,   parallel = getOption(\"prego.parallel\", TRUE),   match_with_db = FALSE,   screen_db = FALSE,   motif_dataset = all_motif_datasets(),   seed = 60427,   final_metric = NULL,   unif_prior = 0.05,   alternative = \"two.sided\",   ... )"},{"path":"/reference/regress_pwm.sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. include_response include response resulting list (default: TRUE) motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. sample_frac fraction dataset sample. response categorical (0 1), sampling stratified category, .e. sample_frac can vector length 2 fraction 0 1 responses sample respectively. NULL - default 0.1 continuous variables, binary variables - number 0 responses equal sample_ratio times number 1 responses. sample_idxs indices sequences use. NULL, indices sampled using sample_frac. sample_ratio ratio '1' category '0' category sampled dataset. Relevant sample_frac NULL. parallel whether run optimization parallel. use set_parallel set number cores use. match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. screen_db Screen motif_dataset using screen_pwm use best motif initial motif. TRUE, following fields added return value: \"db_motif\", \"db_motif_pred\", \"db_motif_pssm\" \"db_motif_score\". motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. seed random seed final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. NULL - 'ks' used binary response 'r2' continuous response. unif_prior uniform prior nucleotide probabilities alternative alternative hypothesis p-value calculation using ks.test. One \"two.sided\", \"less\" \"greater\". ... Arguments passed regress_pwm, screen_kmers motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. init_from_dataset TRUE, regression initialized PSSM best motif dataset. init_from_dataset initialize regression PSSM best motif motif_dataset, using final_metric metric. TRUE, motif parameter ignored. See screen_pwm details. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration verbose show verbose messages. consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. internal_num_folds number folds use internal cross-validation. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE)","code":""},{"path":"/reference/regress_pwm.sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. bins defined first bin starts spat_min last bin ends spat_max, bin size spat_bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample). predict: function can used predict PWM new sequence. match_with_db TRUE, following additional elements returned: motif_db: motif database similar resulting PSSM. db_match_cor: correlation resulting PSSM closest match motif database. db_match_pssm: PSSM closest match motif database. db_match_pred: predicted PWM closest match motif database. db_match_r2: \\(r^2\\) predicted PWM closest match motif database response db_match_ks: response binary, Kolmogorov-Smirnov test results predicted PWM closest match motif database response 1 vs predictions response 0. screen_db TRUE, following additional elements returned: db_motif: best motif motif database. db_motif_pred: predicted PWM best motif motif database. db_motif_pssm: PSSM best motif motif database. db_motif_score: score best motif motif database. n_motifs greater 1, list following elements returned: models: list () inferred model multi_stats: data frame following columns: model, score (KS binary, r^2 otherwise), comb_score (score combined linear model models 1:) additional statistics per model pred: vector predicted pwm using linear model combined scores. comb_modle: linear model combined scores. predict: function can used predict PWM new sequence.","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"if (FALSE) { res <- regress_pwm.sample(     cluster_sequences_example,     cluster_mat_example[, 1],     final_metric = \"ks\",     screen_db = TRUE )  res$pssm res$spat head(res$pred)  plot_regression_qc(res) }"},{"path":"/reference/screen_kmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for kmers — screen_kmers","title":"Screen for kmers — screen_kmers","text":"Screen kmers","code":""},{"path":"/reference/screen_kmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for kmers — screen_kmers","text":"","code":"screen_kmers(   sequences,   response,   kmer_length = 6,   min_cor = 0.08,   min_n = 50,   is_train = NULL,   min_gap = 0,   max_gap = 0,   from_range = 0,   to_range = NULL,   return_mat = FALSE,   seed = 60427,   verbose = FALSE )"},{"path":"/reference/screen_kmers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for kmers — screen_kmers","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences kmer_length number non-gap characters motifs screened min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported is_train boolean vector determine subset sequences use screening min_gap, max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE) seed random seed verbose show verbose messages","code":""},{"path":"/reference/screen_kmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for kmers — screen_kmers","text":"data frame following columns, together column response variable correlation kmers response variable: kmer: kmer pattern, \"*\" indicates wildcard, max_r2: maximum R^2 one response variables, avg_n: average number times kmer appears sequences, avg_var: variance number times kmer appears sequences, return_mat TRUE, matrix correlations response variables (rows kmers) returned instead data frame. kmer found, empty data frame returned.","code":""},{"path":"/reference/screen_kmers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for kmers — screen_kmers","text":"","code":"kmers <- screen_kmers(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>     kmer     max_r2 avg_n    avg_var          c1          c2         c3 #> 1 AGATAA 0.04998882 0.140 0.15240000 -0.01025383 -0.03046725 -0.2235818 #> 2 TTATCT 0.02975253 0.128 0.13761599  0.03136108  0.04927359 -0.1724892 #> 3 CTTATC 0.02680831 0.080 0.07960001  0.02861430  0.01967959 -0.1637324 #> 4 GGGGAG 0.02300140 0.243 0.28195098  0.04611732  0.02960520  0.1516621 #> 5 GGGCGG 0.02280306 0.062 0.06015600  0.06576437  0.02662074  0.1510068 #> 6 TAACTG 0.02215597 0.071 0.06995900 -0.01145993 -0.02249238 -0.1488488 #>             c4          c5 #> 1  0.004382457 -0.03498838 #> 2  0.035843253  0.02917432 #> 3  0.059437271  0.03772539 #> 4  0.044013925  0.03089626 #> 5  0.104473867  0.12732512 #> 6 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, return_mat = TRUE) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>                 c1          c2         c3           c4          c5 #> AGATAA -0.01025383 -0.03046725 -0.2235818  0.004382457 -0.03498838 #> TTATCT  0.03136108  0.04927359 -0.1724892  0.035843253  0.02917432 #> CTTATC  0.02861430  0.01967959 -0.1637324  0.059437271  0.03772539 #> GGGGAG  0.04611732  0.02960520  0.1516621  0.044013925  0.03089626 #> GGGCGG  0.06576437  0.02662074  0.1510068  0.104473867  0.12732512 #> TAACTG -0.01145993 -0.02249238 -0.1488488 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, max_gap = 3) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ Gaps of length 0:3 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 4884 kmers in 1000 sequences. head(kmers) #>       kmer     max_r2 avg_n    avg_var           c1           c2         c3 #> 1   AGATAA 0.05012437 0.139 0.15167901 -0.011159671 -0.033565160 -0.2238847 #> 2  AGA*AAG 0.03404951 0.220 0.23760001  0.062884174  0.063842162 -0.1845251 #> 3   TTATCT 0.02915060 0.127 0.13487099  0.036021627  0.051995803 -0.1707355 #> 4 ACAT**CT 0.02848161 0.090 0.09190000 -0.002383306 -0.023468828 -0.1687650 #> 5  AG*TAAG 0.02829135 0.118 0.12007600  0.034630746 -0.005794165 -0.1682003 #> 6   CTTATC 0.02680831 0.080 0.07960001  0.028614303  0.019679585 -0.1637324 #>            c4          c5 #> 1 0.001539792 -0.03616555 #> 2 0.025056362  0.02373981 #> 3 0.032191906  0.02568413 #> 4 0.019714575 -0.02059141 #> 5 0.046150818  0.02593128 #> 6 0.059437271  0.03772539"},{"path":"/reference/screen_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for motifs in a database for every cluster — screen_pwm.clusters","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"Screen motifs database every cluster","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"","code":"screen_pwm.clusters(   sequences,   clusters,   dataset = all_motif_datasets(),   motifs = NULL,   parallel = getOption(\"prego.parallel\", TRUE),   min_D = 0.4,   only_best = FALSE,   prior = 0.01,   alternative = \"two.sided\",   ... )"},{"path":"/reference/screen_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"sequences vector sequences clusters vector cluster assignments dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). motifs names specific motifs extract dataset parallel logical, whether use parallel processing min_D minimum distance consider match only_best TRUE, return best match cluster prior prior probability nucleotide. alternative alternative hypothesis KS test. Can \"two.sided\", \"less\" \"greater\" ... Arguments passed compute_pwm pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence.","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"matrix KS D statistics cluster (columns) every motif (rows) least one cluster D >= min_D. only_best TRUE, named vector name best motif match cluster returned (regardless min_D).","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"","code":"if (FALSE) { D_mat <- screen_pwm.clusters(cluster_sequences_example, clusters_example) dim(D_mat) D_mat[1:5, 1:5]  # return only the best match screen_pwm.clusters(cluster_sequences_example, clusters_example, only_best = TRUE) }"},{"path":"/reference/screen_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for motifs in a database given a response variable — screen_pwm","title":"Screen for motifs in a database given a response variable — screen_pwm","text":"Screen motifs database given response variable","code":""},{"path":"/reference/screen_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for motifs in a database given a response variable — screen_pwm","text":"","code":"screen_pwm(   sequences,   response,   metric = NULL,   dataset = all_motif_datasets(),   motifs = NULL,   parallel = getOption(\"prego.parallel\", TRUE),   only_best = FALSE,   prior = 0.01,   alternative = \"two.sided\",   ... )"},{"path":"/reference/screen_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for motifs in a database given a response variable — screen_pwm","text":"sequences vector sequences response vector response variable sequence. response matrix, average used. metric metric use order choose best motif. One 'ks' 'r2'. NULL - default 'ks' binary variables, 'r2' continuous variables. dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). motifs names specific motifs extract dataset parallel logical, whether use parallel processing only_best return best motif (one highest score). FALSE, motifs returned. prior prior probability nucleotide. alternative alternative hypothesis KS test. One 'two.sided', 'less' 'greater'. ... Arguments passed compute_pwm pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence.","code":""},{"path":"/reference/screen_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for motifs in a database given a response variable — screen_pwm","text":"data frame following columns: motif: motif name. score: score motif (depending metric). only_best TRUE, best motif returned (data framw single row).","code":""},{"path":"/reference/screen_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for motifs in a database given a response variable — screen_pwm","text":"","code":"res_screen <- screen_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Performing PWM screening head(res_screen) #> # A tibble: 6 x 2 #>                   motif     score #> 1          JASPAR.HNF1A 0.8510730 #> 2   JOLMA.HNF1A_di_full 0.8505374 #> 3 JOLMA.HNF1B_di_full_1 0.8484232 #> 4 JOLMA.HNF1B_di_full_2 0.8484090 #> 5          JASPAR.HNF1B 0.8479834 #> 6            HOMER.Hnf1 0.8127850  # only best match screen_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Performing PWM screening #> # A tibble: 3,110 x 2 #>                   motif     score #> 1          JASPAR.HNF1A 0.8510730 #> 2   JOLMA.HNF1A_di_full 0.8505374 #> 3 JOLMA.HNF1B_di_full_1 0.8484232 #> 4 JOLMA.HNF1B_di_full_2 0.8484090 #> 5          JASPAR.HNF1B 0.8479834 #> 6            HOMER.Hnf1 0.8127850 #> # ... with 3,104 more rows  # with r^2 metric res_screen <- screen_pwm(sequences_example, response_mat_example[, 1], metric = \"r2\") #> ℹ Performing PWM screening head(res_screen) #> # A tibble: 6 x 2 #>               motif      score #> 1       JASPAR.SOX2 0.04355104 #> 2       JASPAR.SUT1 0.04011910 #> 3      JASPAR.SOX13 0.03979196 #> 4 JOLMA.IRX3_di_DBD 0.03947626 #> 5        JASPAR.dsx 0.03903626 #> 6       JASPAR.Sox3 0.03876807"},{"path":"/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parallel threads — set_parallel","title":"Set parallel threads — set_parallel","text":"Set number parallel threads use. prego uses R function doMC::registerDoMC register parallelization. default, prego uses 80% number available cores. options saved 'prego.parallel' (use parallelization, logical) 'prego.parallel.nc' (number cores use, integer).","code":""},{"path":"/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parallel threads — set_parallel","text":"","code":"set_parallel(thread_num = max(1, round(parallel::detectCores() * 0.8)))"},{"path":"/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parallel threads — set_parallel","text":"thread_num number threads. use '1' non parallel behavior","code":""},{"path":"/reference/set_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parallel threads — set_parallel","text":"None","code":""},{"path":"/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parallel threads — set_parallel","text":"","code":"# \\donttest{ set_parallel(8) #> ℹ Parallelization enabled. Using 8 threads. # }"},{"path":"/news/index.html","id":"prego-0009000","dir":"Changelog","previous_headings":"","what":"prego 0.0.0.9000","title":"prego 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
