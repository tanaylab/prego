[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Amos Tanay. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Tanay (2022). prego: PWM Regression Optimizer. R package version 0.0.0.9000.","code":"@Manual{,   title = {prego: PWM Regression Optimizer},   author = {Aviezer Lifshitz and Amos Tanay},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"prego","dir":"","previous_headings":"","what":"PWM Regression Optimizer","title":"PWM Regression Optimizer","text":"prego package implements simple regression algorithms finding motifs DNA. can either use find motif discriminating two clusters DNA sequences, generating motifs one continuous variables. PREGO algorithm described .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PWM Regression Optimizer","text":"can install development version prego like :","code":"remotes::install_github(\"tanaylab/prego\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PWM Regression Optimizer","text":"set continuous variables:  binary response:  clusters sequences:","code":"library(prego) res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases res$stats #> # A tibble: 5 x 7 #>   cluster consensus      ks_D        r2      seed_motif              db_match db_match_dist #> 1    c100   AT***TC 0.7024075 0.3852463 ***ATCCATCA**** JASPAR.MEIS1.MA1639.1      0.244724 #> 2    c111   Y*RTAAA 0.8479663 0.4978355 ***CAATTAAC****   JOLMA.CDX1_mono_DBD      0.152716 #> 3     c29 T*A***W*T 0.8507039 0.5581745 ***TAATCATT****            HOMER.Hnf1      0.340463 #> 4      c5      GATA 0.5887910 0.2227806 ***CTGATAAG****      JASPAR.GATA1/2/3      0.198050 #> 5      c6      TATC 0.6160721 0.2783910 ***TCTTATCT****          JASPAR.GATAd      0.219126"},{"path":"/reference/HOMER_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the HOMER motif database — HOMER_motifs","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"PSSMs HOMER motif database","code":""},{"path":"/reference/HOMER_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"","code":"HOMER_motifs"},{"path":"/reference/HOMER_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/HOMER_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"http://homer.ucsd.edu/homer/motif/","code":""},{"path":"/reference/HOMER_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the HOMER motif database — HOMER_motifs","text":"Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432","code":""},{"path":"/reference/JASPAR_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the JASPAR motif database — JASPAR_motifs","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"PSSMs JASPAR motif database","code":""},{"path":"/reference/JASPAR_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"","code":"JASPAR_motifs"},{"path":"/reference/JASPAR_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/JASPAR_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"https://jaspar.genereg.net/downloads/","code":""},{"path":"/reference/JASPAR_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the JASPAR motif database — JASPAR_motifs","text":"Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113","code":""},{"path":"/reference/JOLMA_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"PSSMs Jolma et al. motif database","code":""},{"path":"/reference/JOLMA_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"","code":"JOLMA_motifs"},{"path":"/reference/JOLMA_motifs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"data frame containing PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name.","code":""},{"path":"/reference/JOLMA_motifs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/JOLMA_motifs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PSSMs from the Jolma et al. motif database — JOLMA_motifs","text":"Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/all_motif_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame contain PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. Individual datasets available within package HOMER_motifs, JASPAR_motifs, JOLMA_motifs.","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets()"},{"path":"/reference/all_motif_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame concatenates motifs \"HOMER\", \"JASPAR\" \"JOLMA\". Motif names prefixed dataset name, e.g. \"JASPAR.GATA4\".","code":""},{"path":"/reference/all_motif_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"HOMER:  Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432 JASPAR: Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113 JOLMA: Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets() #> # A tibble: 38,758 x 8 #>        motif pos     A     C     G     T dataset motif_orig #> 1 HOMER.AP_1   0 0.419 0.275 0.277 0.028   HOMER       AP_1 #> 2 HOMER.AP_1   1 0.001 0.001 0.001 0.997   HOMER       AP_1 #> 3 HOMER.AP_1   2 0.010 0.002 0.965 0.023   HOMER       AP_1 #> 4 HOMER.AP_1   3 0.984 0.003 0.001 0.012   HOMER       AP_1 #> 5 HOMER.AP_1   4 0.062 0.579 0.305 0.054   HOMER       AP_1 #> 6 HOMER.AP_1   5 0.026 0.001 0.001 0.972   HOMER       AP_1 #> # ... with 38,752 more rows"},{"path":"/reference/cluster_mat_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset examples — cluster_mat_example","title":"Dataset examples — cluster_mat_example","text":"Dataset examples","code":""},{"path":"/reference/cluster_mat_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset examples — cluster_mat_example","text":"","code":"cluster_mat_example  cluster_sequences_example  clusters_example  response_mat_example  sequences_example"},{"path":"/reference/cluster_mat_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset examples — cluster_mat_example","text":"sequences response variables various formats function examples object class character length 2359. object class character length 2359. object class matrix (inherits array) 1000 rows 5 columns. object class character length 1000.","code":""},{"path":"/reference/compute_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"Compute PWMs set sequences given PSSM matrix","code":""},{"path":"/reference/compute_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"compute_pwm(   sequences,   pssm,   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0 )"},{"path":"/reference/compute_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"sequences vector sequences pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide.","code":""},{"path":"/reference/compute_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"vector predicted pwm sequence.","code":""},{"path":"/reference/compute_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"# \\dontrun{ res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1  pwm <- compute_pwm(cluster_sequences_example, res$pssm, res$spat) head(pwm) #> [1] -16.54865 -16.55741 -16.90154 -15.26242 -15.20133 -14.42843  # this is similar to the prediction in the regression head(res$pred) #> [1] -16.54865 -16.55741 -16.90154 -15.26242 -15.20133 -14.42843 # }"},{"path":"/reference/consensus_from_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert PSSM to consensus sequence — consensus_from_pssm","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"Convert PSSM consensus sequence","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"consensus_from_pssm(pssm, single_thresh = 0.6, double_thresh = 0.85)"},{"path":"/reference/consensus_from_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"pssm PSSM matrix single_thresh, double_thresh thresholds consensus sequence calculation (single double nucleotides)","code":""},{"path":"/reference/consensus_from_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"consensus sequence PSSM. consensus sequence can found, function returns NA.","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"# \\dontrun{ res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 consensus_from_pssm(res$pssm) #> [1] \"T*AM**W*T\" # }"},{"path":"/reference/extract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of sequences from a motif database — extract_pwm","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"Extracts pwm motif motif database. Note large number motifs, function can slow consume lot memory.","code":""},{"path":"/reference/extract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"extract_pwm(   sequences,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/extract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"sequences vector sequences motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide. parallel logical, whether use parallel processing","code":""},{"path":"/reference/extract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"matrix size # sequences x # motifs pwm sequence motif","code":""},{"path":"/reference/extract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"# \\dontrun{ pwms <- extract_pwm(     cluster_sequences_example,     motifs = c(\"JASPAR.CDX1\", \"HOMER.Hnf1\", \"HOMER.GATA3_2\") ) head(pwms) #>    motif #>     HOMER.GATA3_2 HOMER.Hnf1 JASPAR.CDX1 #>   1     -6.731433 -12.719121   -8.140721 #>   2     -5.273907 -12.997530  -12.325053 #>   3     -7.085959 -14.832400   -4.029678 #>   4     -2.871881 -10.334058   -5.989816 #>   5     -5.089060  -9.383463  -12.949087 #>   6     -3.387886  -7.175642  -12.434833  # all motifs all_pwms <- extract_pwm(cluster_sequences_example, prior = 0.01) dim(all_pwms) #> [1] 2359 3110 all_pwms[1:5, 1:5] #>    motif #>     HOMER.AARE HOMER.ABF1 HOMER.AMYB HOMER.AP_1 HOMER.AP_2alpha #>   1  -9.566072  -11.85890  -9.968434 -11.367290      -11.787250 #>   2  -7.384280  -13.74829  -9.459547  -8.961136      -13.399783 #>   3 -11.629676  -12.79850  -9.740843  -7.423562       -9.786919 #>   4 -11.951996  -13.15680  -7.944615  -9.050082      -14.694887 #>   5 -12.973919  -12.26226  -7.545182  -7.427249      -12.070391  # for a specific dataset pwms_jaspar <- extract_pwm(cluster_sequences_example, dataset = JASPAR_motifs, prior = 0.01) head(pwms_jaspar) #>    motif #>     ABF1.MA0265.2 ABF1.MA0570.2 ABF2.MA0266.1 ABF2.MA0941.1       ABF3 #>   1     -26.73837     -10.20146     -5.386743     -11.42229  -6.024584 #>    motif #>           ABF4      ABI3       ABI5      ABR1      ACE2      ADR1      AFT1 #>   1  -9.214046 -7.348183  -6.162449 -18.09898 -5.029874 -3.041862 -25.68082 #>    motif #>          AFT2        AG      AGL1     AGL13     AGL15     AGL16     AGL27 #>   1 -6.564463 -19.10741 -17.85184 -22.04511 -21.28914 -16.12293 -15.13225 #>    motif #>          AGL3     AGL42      AGL55      AGL6     AGL63     AHL12     AHL20 #>   1 -16.55063 -3.108504 -2.6675560 -23.08261 -16.28745 -6.744496 -6.406512 #>    motif #>         AHL25       AIB      AIL6       AIL7      ALX3       ANL2       ANT #>   1 -6.913009 -2.284570 -16.53526 -10.330546 -8.089084  -9.882913 -26.50048 #>    motif #>            AP1       AP3       AP4 ARALYDRAFT_484486 ARALYDRAFT_493022 #>   1  -9.661336 -14.95468 -21.14762         -8.218543         -8.253609 #>    motif #>     ARALYDRAFT_495258 ARALYDRAFT_496250 ARALYDRAFT_897773      ARF1     ARF10 #>   1         -8.218543         -8.835704         -9.594734 -6.833055 -16.75738 #>    motif #>         ARF13     ARF14     ARF16     ARF18      ARF2     ARF25      ARF27 #>   1 -14.77765 -16.15648 -13.30153 -14.34455 -7.967239 -15.39447 -11.506107 #>    motif #>         ARF29      ARF3      ARF34     ARF35     ARF36     ARF39      ARF4 #>   1 -15.72370 -6.022248 -12.300606 -14.78655 -12.20363 -10.99604 -11.41810 #>    motif #>          ARF5      ARF7      ARF8     ARG80     ARG81     ARGFX      ARNT2 #>   1 -6.357054 -14.88987 -6.913104 -1.179544 -8.711467 -8.197562  -8.846848 #>    motif #>     ARNT::HIF1A     ARO80 ARR1.MA0274.1 ARR1.MA0945.1     ARR10     ARR11 #>   1   -4.512463 -25.13046     -6.045911     -8.621182 -6.800484 -7.472422 #>    motif #>         ARR14     ARR18       ARR2 ASCL1.MA1100.2 ASCL1.MA1631.1      ASG1 #>   1 -6.399013 -13.40564 -10.018541      -6.899935      -12.52759 -3.991779 #>    motif #>           ASH1     ASIL2      ASR1      ASR3 AT1G14600 AT1G19000 AT1G19040 #>   1  -8.360263 -13.72698 -17.52314 -14.27658 -8.971649 -15.73650 -20.23316 #>    motif #>     AT1G72740 AT1G74840 AT1G76870 AT2G38090  AT2G38300 AT2G40260 AT3G10030 #>   1 -19.65941 -9.986008 -14.84854 -26.56900 -11.310408 -17.39707 -13.86595 #>    motif #>     AT3G10580 AT3G46070 AT4G12670 AT5G04390  AT5G04760 AT5G05090 AT5G05550 #>   1 -17.85128 -15.96161 -48.70343 -9.803560 -11.776040 -11.31156 -13.43820 #>    motif #>     AT5G05790  AT5G47660 AT5G56840 AT5G61620      ATF2      ATF3      ATF4 #>   1 -16.69558 -10.326427 -17.44537 -17.79889 -12.34001 -13.88145 -16.03093 #>    motif #>          ATF6      ATF7   ATHB-12    ATHB-13   ATHB-15   ATHB-16    ATHB-20 #>   1 -16.66593 -17.98811 -5.455591 -12.362728 -18.18839 -8.708713 -13.202516 #>    motif #>        ATHB-23     ATHB-4   ATHB-40     ATHB-5   ATHB-51    ATHB-53    ATHB-6 #>   1 -10.450099 -10.009344 -27.42924 -12.754789 -7.870659 -13.367857 -6.549962 #>    motif #>         ATHB-7    ATHB-9     ATHB-X   ATMYB31     ATOH7      AZF1     Abd-B #>   1 -12.149133 -23.96382 -12.239607 -18.62309 -7.749995 -5.615112 -2.346809 #>    motif #>     Ahr::Arnt      Alx1      Alx4       Antp        Ar     Arid3a     Arid3b #>   1 -4.222470 -17.75164 -18.43848 -5.0935760 -21.09016 -0.7550666 -10.888139 #>    motif #>        Arid5a      Arnt      Arntl       Arx     Ascl2 At3g11280      Atbf #>   1 -15.89276 -2.898993  -7.582379 -18.29372 -8.242393 -16.01145 -21.82912 #>    motif #>          Atf1       Atf3 Atoh1.MA0461.2 Atoh1.MA1467.2     Atoh7       Awh #>   1 -5.948373 -11.742454      -8.247229      -8.503872 -22.44890 -3.748401 #>    motif #>           B-H1       B-H2     BACH1 BACH2.MA1101.2 BACH2.MA1470.1      BAM8 #>   1 -4.7325177 -3.8512456 -7.834742      -25.03134      -28.62388 -15.33670 #>    motif #>        BARHL1    BARHL2     BARX1      BARX2      BAS1       BATF      BATF3 #>   1 -5.908794 -8.198444 -4.255355 -11.355978 -27.02311 -11.898664 -12.054807 #>    motif #>      BATF::JUN      BCL6     BCL6B   BEAF-32      BEE2      BEH2      BEH3 #>   1 -11.968540 -19.58074 -25.26772 -13.88379 -6.569064 -11.58806 -11.01995 #>    motif #>          BEH4    BHLH104    BHLH112   BHLH122    BHLH13     BHLH3    BHLH34 #>   1 -10.82697  -7.988433  -8.472655 -14.44678 -3.594991 -3.613336 -4.345088 #>    motif #>         BHLH49    BHLH72    BHLH74     BHLH78    BHLHA15 BHLHE22.MA0818.2 #>   1  -7.833694 -14.47223 -13.57315  -3.651130  -8.399241        -9.050258 #>    motif #>     BHLHE22.MA1635.1   BHLHE23    BHLHE40   BHLHE41      BIM1      BIM2 #>   1       -10.822495 -13.14463  -8.453642 -11.44739 -12.36328 -16.42345 #>    motif #>           BIM3       BNC2      BPC1      BPC5      BPC6       BPE      BRN2 #>   1  -6.670248 -13.339179 -38.48786 -69.52959 -27.89728 -13.04599 -17.12619 #>    motif #>           BSX    BZIP11    BZIP16     BZIP18     BZIP2    BZIP28     BZIP3 #>   1 -4.376910 -17.63428 -15.82205 -10.185877 -16.71274 -13.45351 -16.18628 #>    motif #>        BZIP30    BZIP42    BZIP43    BZIP44    BZIP48    BZIP52    BZIP53 #>   1 -8.376935 -15.64717 -13.97588 -17.08285 -16.44593 -14.60216 -17.57179 #>    motif #>        BZIP60     BZIP63    BZIP68     BZIP69      BZR1      BZR2 Bach1::Mafk #>   1 -5.214110  -9.657492 -14.57897 -13.747584 -24.77652 -10.45200   -19.28737 #>    motif #>        Bcl11B   Bgb::run    Bhlha15 Brachyury       Bsx       C15      CAD1 #>   1 -14.23764 -10.726603 -13.044297 -25.91004 -21.73609 -3.687122 -17.14938 #>    motif #>        CAMTA1    CAMTA2    CAMTA3      CAT8      CBF1      CCA1       CDC5 #>   1 -11.66481 -6.588164 -6.253463 -2.276772 -15.52865 -9.254111 -10.787354 #>    motif #>          CDF2       CDF3      CDF5       CDX1       CDX2       CDX4     CEBPA #>   1 -6.192542  -8.097581 -35.67148  -7.822196 -10.297320  -9.997750 -14.52419 #>    motif #>         CEBPB     CEBPD     CEBPE CEBPG.MA0838.1 CEBPG.MA1636.1      CEP3 #>   1 -16.10977 -13.48103 -15.18406     -10.888743      -16.87560 -7.823251 #>    motif #>        CG11085   CG11294   CG11617 CG15696-RA   CG18599   CG32105    CG32532 #>   1 -4.7224803 -5.283237 -5.648003 -4.0781107 -4.609474 -3.988117 -4.5193582 #>    motif #>        CG34031 CG4328-RA    CG9876      CHA4      CIN5      CLOCK     CREB1 #>   1 -4.0667143 -3.736991 -4.359130 -3.347839 -15.66998  -6.861875 -11.06402 #>    motif #>         CREB3   CREB3L1 CREB3L4.MA1474.1 CREB3L4.MA1475.1      CREM      CRF2 #>   1 -13.64184 -15.94008        -9.081589        -11.67704 -16.58975 -3.685758 #>    motif #>           CRF4      CRZ1      CST6 CTCF.MA0139.1 CTCF.MA0531.1 CTCF.MA1929.1 #>   1  -9.694291 -5.709620 -8.014129     -20.92788     -13.48518     -41.54435 #>    motif #>     CTCF.MA1930.1      CTCFL       CUP2      CUP9       CUX1       CUX2 #>   1     -46.85162 -11.167897 -10.778016 -6.991083 -11.050222 -11.310039 #>    motif #>         Cebpg        Cf2     Clamp     Creb1    Creb3l2     Creb5        Crx #>   1 -21.47574  -8.943921 -11.36386 -27.90955  -3.652840 -14.16216  -9.445264 #>    motif #>              D     DAL80     DAL81     DAL82       DBP     DEAR3       DF1 #>   1  -9.220306 -6.912948 -41.28998 -7.240065 -14.19474 -20.80370 -14.91901 #>    motif #>          DIV1      DLX1      DLX6      DMRT3     DMRTA1     DMRTA2     DMRTC2 #>   1 -19.01141 -4.544605 -4.972847 -12.319674 -13.652456 -12.645857 -13.860386 #>    motif #>        DOF1.5     DOF1.6    DOF1.7    DOF1.8     DOF2.2    DOF2.4    DOF2.5 #>   1 -24.15054  -8.552714 -25.47644 -7.062307  -5.711961 -3.039136 -4.087903 #>    motif #>        DOF3.2    DOF3.4     DOF3.5    DOF3.6    DOF4.2    DOF4.3    DOF4.5 #>   1 -20.48317 -20.02271  -6.178006 -24.09161 -24.18191 -17.51699 -13.44142 #>    motif #>        DOF5.1    DOF5.3    DOF5.4    DOF5.6    DOF5.7    DOF5.8      DOT6 #>   1 -20.01071 -3.044257 -10.29052 -4.232958 -3.406525 -38.26529 -20.97879 #>    motif #>         DPBF3       DPRX     DREB1A    DREB1B    DREB1C    DREB1D    DREB1E #>   1 -16.60154  -9.082588  -8.768920 -13.84318 -15.48303 -13.69514 -5.116833 #>    motif #>        DREB1F     DREB1G    DREB2A    DREB2C    DREB2D    DREB2E    DREB2F #>   1 -6.928849  -8.210302 -24.28417 -7.273622 -16.04017 -19.63630 -11.02050 #>    motif #>        DREB2G      DRGX      DUX4      DUXA      DYT1       Dbx Ddit3::Cebpa #>   1 -12.66416 -5.265299 -12.44822 -16.63409 -16.18810 -3.571858   -11.835546 #>    motif #>         Deaf1        Dfd       Dll     Dlx-b     Dlx-c       Dlx2      Dlx3 #>   1 -1.757196 -4.0276742 -3.510104 -25.37777 -25.20334 -11.327156 -4.832271 #>    motif #>          Dlx4       Dlx5     Dmbx1     Dmrt1       Dof2       Dof3        Dr #>   1 -4.792331 -11.507403 -18.31080 -12.45541 -1.1321120 -1.9816091 -4.429419 #>    motif #>          Dref       Dux      E2F1      E2F2      E2F3      E2F4      E2F6 #>   1 -11.00915 -20.73257 -14.27181 -18.45222 -25.72613 -17.68360 -12.31586 #>    motif #>          E2F7      E2F8       E2FA      E2FC      E2FD      E2FE        E5 #>   1 -22.90745 -12.05133  -9.139344 -20.32067 -25.27580 -25.27580 -3.871519 #>    motif #>          EBF1      EBF3     ECM22      ECM23      EDS1       EFM      EGR1 #>   1 -14.69463 -12.61356 -4.932092 -10.254354 -7.069057 -13.79276 -13.12181 #>    motif #>           EGR2      EGR3      EGR4       EHF       EIL3       EIL4      ELF1 #>   1 -10.290952 -15.33814 -15.60529 -14.35442 -12.159741 -11.129203 -12.75886 #>    motif #>          ELF2      ELF3      ELF4       ELK1 ELK1::HOXA1 ELK1::HOXB13 #>   1 -12.13147 -13.62535 -13.49917  -9.755683   -15.31053    -19.68640 #>    motif #>     ELK1::SREBF2      ELK3      ELK4      EMX1      EMX2       EN1       EN2 #>   1    -18.53326 -11.62140 -11.17720 -5.313302 -8.598309 -4.454697 -4.745821 #>    motif #>         EOMES        ERF    ERF003    ERF008    ERF010    ERF011    ERF012 #>   1 -14.62197  -7.390349 -19.05235 -4.272875 -12.59358 -15.67039 -24.38507 #>    motif #>        ERF013    ERF014    ERF015    ERF017    ERF018    ERF019    ERF021 #>   1 -23.90908 -14.80648 -12.69894 -15.20096 -6.580454 -17.21639 -15.18226 #>    motif #>     ERF023.MA1259.1 ERF023.MA2012.1    ERF025    ERF027    ERF034    ERF035 #>   1       -17.20513      -11.824421 -17.16466 -16.16978 -17.74034 -17.16915 #>    motif #>        ERF036    ERF037    ERF038     ERF039    ERF043    ERF054    ERF055 #>   1 -15.66719 -16.20446 -14.39533 -10.297730 -19.59990 -23.46073 -15.27020 #>    motif #>        ERF057    ERF069    ERF073    ERF086    ERF087    ERF091    ERF094 #>   1 -15.50259 -5.976119 -23.80766 -15.55356 -15.59375 -19.21751 -3.615283 #>    motif #>        ERF095    ERF096     ERF10    ERF104    ERF105    ERF109      ERF11 #>   1 -15.61430 -6.458097 -23.77347 -21.28875 -14.81925 -3.910824  -9.849591 #>    motif #>         ERF112    ERF115     ERF118    ERF122     ERF13     ERF15     ERF1B #>   1  -8.974804 -14.61409  -9.050066 -14.10038 -4.328992 -13.44956 -4.031117 #>    motif #>          ERF2       ERF3       ERF4      ERF5       ERF6      ERF7      ERF8 #>   1 -23.09753  -9.059853  -9.561131 -15.59257  -9.277817 -7.122046 -19.14367 #>    motif #>          ERF9 ERF::FIGLA ERF::FOXI1 ERF::FOXO1 ERF::HOXB13 ERF::NHLH1 #>   1 -21.11885  -22.10320  -10.98759  -12.22125   -16.95837  -22.91796 #>    motif #>     ERF::SREBF2      ERT1      ESR1      ESR2      ESRRA      ESRRB      ESX1 #>   1   -20.51064 -7.935742 -22.72768 -15.41264 -14.733545 -14.095881 -5.175461 #>    motif #>           ETS1       ETS2      ETV1       ETV2 ETV2::DRGX ETV2::FIGLA #>   1  -6.839297  -6.955079 -10.98433 -10.723632  -13.28999   -19.82955 #>    motif #>     ETV2::FOXI1 ETV2::HOXB13       ETV3       ETV4       ETV5 ETV5::DRGX #>   1   -12.11913    -16.81264  -7.510880  -7.897732  -9.165938  -13.00679 #>    motif #>     ETV5::FIGLA ETV5::FOXI1 ETV5::FOXO1 ETV5::HOXA2       ETV6       ETV7 #>   1   -18.86040   -9.181146   -8.096269   -12.51699  -9.692766 -10.373389 #>    motif #>          EVX1      EVX2 EWSR1-FLI1      Ebf2  EcR::usp   Eip74EF      Elba1 #>   1 -7.611526 -7.626105  -30.18390 -12.84783 -17.17429 -5.259223  -8.760969 #>    motif #>          Elba2       Elf5    EmBP-1       Emx     Erf-a       Erg      Esrrg #>   1  -8.950844 -10.539005 -3.764037 -21.65634 -21.01225 -11.43660  -9.561463 #>    motif #>         Ets21C  Etv1/4/5      FAR1    FERD3L       FEV      FHL1      FHY3 #>   1  -7.573569 -22.66924 -18.78416 -16.56605 -11.69599 -4.692641 -12.37645 #>    motif #>         FIGLA      FKH1       FKH2       FLC       FLI1 FLI1::DRGX FLI1::FOXI1 #>   1 -9.349844 -18.68146 -0.3390045 -24.37479  -7.929470  -12.94763   -10.71742 #>    motif #>     FOS.MA0476.1 FOS.MA1951.1 FOS::JUN.MA0099.3 FOS::JUN.MA1126.1  FOS::JUNB #>   1   -13.954266    -15.51295         -9.653224         -16.76799 -13.787504 #>    motif #>     FOS::JUND  FOSB::JUN FOSB::JUNB.MA1135.1 FOSB::JUNB.MA1136.1     FOSL1 #>   1 -14.32156 -10.302137          -10.846043           -8.864887 -14.91133 #>    motif #>     FOSL1::JUN.MA1128.1 FOSL1::JUN.MA1129.1 FOSL1::JUNB FOSL1::JUND.MA1142.1 #>   1           -13.75616           -8.675548   -13.17044            -8.170035 #>    motif #>     FOSL1::JUND.MA1143.1      FOSL2 FOSL2::JUN.MA1130.1 FOSL2::JUN.MA1131.1 #>   1            -8.053839 -13.322376          -12.746359           -10.92238 #>    motif #>     FOSL2::JUNB.MA1138.1 FOSL2::JUNB.MA1139.1 FOSL2::JUND.MA1144.1 #>   1           -11.210376            -12.51820           -10.714412 #>    motif #>     FOSL2::JUND.MA1145.1      FOXA1      FOXA2      FOXA3      FOXB1      FOXC1 #>   1            -16.55098  -7.811167  -6.360013  -6.486095 -10.490689 -10.190511 #>    motif #>          FOXC2     FOXD1      FOXD2     FOXD3     FOXE1     FOXF2     FOXG1 #>   1 -10.989802 -1.681170 -12.500245 -14.87701 -16.28464 -12.90603 -1.405086 #>    motif #>          FOXH1      FOXI1 FOXJ2::ELF1      FOXK1      FOXK2     FOXL1 #>   1 -11.947245 -0.6610976   -12.20088  -9.749448  -6.157600 -1.308165 #>    motif #>          FOXN3 FOXO1::ELF1 FOXO1::ELK1 FOXO1::ELK3 FOXO1::FLI1     FOXO4 #>   1 -0.4509007   -10.12513   -12.05326   -11.84133   -10.56755 -1.002501 #>    motif #>          FOXO6      FOXP1      FOXP2     FOXP3       FUS3   FaEOBII Fli-Erg-a #>   1 -0.6494475  -6.562997  -5.475095 -1.723439  -5.417699 -9.556918 -22.60777 #>    motif #>     Fli-Erg-b Fli-Erg-c     Fos-b    FoxA-a    FoxA-b      FoxB    FoxD-b #>   1 -24.18608 -22.30947 -25.22413 -22.99853 -25.49542 -26.42463 -21.44803 #>    motif #>          FoxE      FoxF      FoxG    FoxI-a    FoxI-b    FoxI-c      FoxK #>   1 -21.66386 -20.14687 -21.87635 -21.31215 -18.94607 -22.53352 -19.82878 #>    motif #>         FoxL2      FoxM      FoxO      FoxQ      Foxf1     Foxj2     Foxj3 #>   1 -20.18431 -20.59124 -19.29398 -21.35033  -6.557887 -1.728511 -15.15199 #>    motif #>         Foxl2     Foxn1     Foxo1      Foxo3      Foxq1     GABPA      GAF1 #>   1 -11.73917 -1.843518 -6.525281  -7.027206  -8.651468 -11.56595 -19.15003 #>    motif #>          GAL4      GAT1      GAT3      GAT4    GATA-a      GATA1 GATA1/2/3 #>   1 -12.21665 -8.431077 -6.908098 -11.19298 -23.09445  -9.216829 -22.29521 #>    motif #>        GATA10    GATA11    GATA12    GATA14    GATA15     GATA19 GATA1::TAL1 #>   1 -8.039340 -8.681047 -5.849028 -16.40474 -6.828697 -12.213981   -23.04151 #>    motif #>          GATA2    GATA20 GATA4.MA0482.2 GATA4.MA1755.1      GATA5 #>   1 -11.523096 -9.126474     -12.848852      -8.356272 -10.488392 #>    motif #>     GATA6.MA1104.2 GATA6.MA1396.1     GATA8     GATA9      GATAd      GBF2 #>   1     -14.058925      -16.41789 -7.177348 -12.75285 -10.806057 -10.65525 #>    motif #>           GBF3      GBX1      GBX2       GCM1       GCM2       GCN4      GCR1 #>   1  -8.936827 -8.067099 -8.006986 -10.954156  -8.669643 -11.888303 -5.441634 #>    motif #>          GCR2      GFI1      GIS1      GLI3     GLIS1     GLIS2     GLIS3 #>   1 -3.173858 -11.04206 -6.048130 -22.53245 -24.70513 -17.82066 -20.10698 #>    motif #>           GLN3 GLYMA-06G314400 GLYMA-07G038400 GLYMA-08G357600 GLYMA-13G317000 #>   1 -1.3836951       -9.394407       -8.194901       -15.18243       -9.241013 #>    motif #>         GMEB2      GRF4       GRF6      GRF9     GRHL1     GRHL2       GSC #>   1 -7.507381 -10.92068  -7.332468 -15.58302 -11.92597 -10.85781 -7.858250 #>    motif #>          GSC2      GSM1      GSX1      GSX2      GT-1      GT-2     GT-3a #>   1 -7.802492 -24.68100 -7.279411 -4.813879 -7.751321 -13.80021 -20.50680 #>    motif #>           GT-4       GTL1      GZF3      Gam1      Gata3      Gfi1B      Gli1 #>   1 -18.852327 -13.400593 -8.169965 -8.814553 -12.492722  -7.842214 -15.17238 #>    motif #>          Gli2 Glyma19g26560.1     Gmeb1        Gsc       Gsx      H2.0 #>   1 -14.19468       -8.290892 -19.34382 -1.4080954 -21.29737 -3.853395 #>    motif #>          HAC1       HAL9     HAND2       HAP1        HAP2       HAP3      HAP5 #>   1 -2.841685 -0.9174092 -8.204108 -11.275257 -0.93254751  -6.150676 -11.78079 #>    motif #>          HAT1       HAT2      HAT22      HAT5       HBI1      HCM1       HDG1 #>   1 -8.914286 -12.034048 -15.314218 -19.69164  -8.621931 -3.242023 -10.358577 #>    motif #>         HDG11       HDG7       HES1       HES2       HES5       HES6      HES7 #>   1 -6.214504  -9.425299  -7.908384  -7.624456  -6.851177  -7.182696 -15.04082 #>    motif #>         HESX1       HEY1       HEY2      HGTX      HHEX      HHO2      HHO3 #>   1 -8.284287  -7.600542  -6.561687 -4.151328 -4.959630 -14.74754 -14.36566 #>    motif #>           HHO5      HHO6      HIC2      HIF1A     HINFP       HLF    HMBOX1 #>   1 -12.674670 -15.54560 -5.607894  -8.087640 -12.19935 -16.52492 -6.785961 #>    motif #>         HMRA1     HMRA2      HNF1A      HNF1B HNF4A.MA0114.4 HNF4A.MA1494.1 #>   1 -5.344345 -4.868611 -14.806442 -11.699176      -14.46462      -22.70262 #>    motif #>         HNF4G     HOXA1    HOXA10     HOXA2     HOXA4     HOXA5     HOXA6 #>   1 -14.46844 -4.780406 -8.313967 -5.438220 -4.401883 -3.857996 -7.557043 #>    motif #>         HOXA7     HOXA9    HOXB13     HOXB2 HOXB2::ELK1     HOXB3     HOXB4 #>   1 -4.072357 -8.013949 -14.09061 -4.332917   -13.90971 -7.403415 -5.160304 #>    motif #>         HOXB5     HOXB6     HOXB7     HOXB8     HOXB9    HOXC10     HOXC11 #>   1 -4.692852 -4.046179 -8.174670 -3.175864 -9.296227 -7.641057 -10.255599 #>    motif #>         HOXC12     HOXC13     HOXC4     HOXC8      HOXC9     HOXD10    HOXD11 #>   1  -8.143262 -11.565126 -4.777495 -4.510080  -9.330536 -10.006385 -7.492410 #>    motif #>         HOXD12 HOXD12::ELK1     HOXD3     HOXD4     HOXD8     HOXD9      HRS1 #>   1  -9.473294    -22.01951 -5.606810 -4.898463 -2.897699 -7.245780 -17.69334 #>    motif #>     HSF1.MA0319.1 HSF1.MA0486.2      HSF2      HSF4     HSFA1B    HSFA1E #>   1     -4.849514     -18.82646 -17.55228 -15.61381 -12.219563 -20.13168 #>    motif #>        HSFA4A    HSFA6A     HSFA6B     HSFB2A    HSFB2B     HSFB3      HSFB4 #>   1 -24.54222 -18.38104 -12.585767 -15.819677 -18.86939 -14.36559 -13.108822 #>    motif #>          HSFC1       HY5       HYH Hand1::Tcf3     Hes-b     Hes-c       Hex #>   1 -13.020812 -15.51601  -9.27934   -9.258186 -23.73377 -24.53776 -21.84311 #>    motif #>           Hey      Hic1    Hmbox1        Hmx      Hmx1      Hmx2      Hmx3 #>   1 -23.24806 -7.262231 -22.14042 -4.9902439 -19.02310 -18.40612 -18.87056 #>    motif #>          Hnf1     Hnf1A      Hox1      Hox3      Hox4      Hox5     Hoxa11 #>   1 -22.00186 -12.80007 -21.73993 -21.73869 -21.86514 -21.50554 -10.900214 #>    motif #>         Hoxa13    Hoxd13        Hsf  Hsf1-2-4      IDD4      IDD5      IDD6 #>   1 -10.250148 -8.440442 -12.459407 -25.15100 -20.69931 -20.36748 -25.28957 #>    motif #>          IDD7      IKZF1       IME1      INO2      INO4      INSM1      IRF2 #>   1 -23.15784  -9.949830  -2.194235 -6.026662 -6.476748 -10.954823 -23.57016 #>    motif #>          IRF3      IRF4      IRF5       IRF6      IRF7      IRF8      IRF9 #>   1 -29.82007 -22.58905 -17.61800 -10.649450 -18.00159 -21.48263 -24.99328 #>    motif #>          ISL2       ISX      IXR1     Ikzf3     Irf-b      Irf1       Isl1 #>   1 -4.715137 -5.662531 -14.33067 -12.85083 -28.98665 -16.75451  -8.667452 #>    motif #>           Isx JDP2.MA0655.1 JDP2.MA0656.1       JKD      JUB1       JUN #>   1 -22.28471     -9.296734     -13.50386 -24.95981 -13.51758 -13.24345 #>    motif #>     JUN::JUNB.MA1132.1 JUN::JUNB.MA1133.1 JUNB.MA0490.2 JUNB.MA1140.2 #>   1          -8.342207          -11.41936     -14.36264     -13.64715 #>    motif #>     JUND.MA0491.2 JUND.MA0492.1        Jun      KAN1      KAN2      KAN4 #>   1     -14.51700     -16.75386 -13.291471 -5.135941 -19.33295 -8.594422 #>    motif #>           KLF1      KLF10      KLF11      KLF12     KLF13      KLF14     KLF15 #>   1  -6.548436  -5.676653 -10.728421  -5.091529 -18.53282  -6.016364  -9.30293 #>    motif #>          KLF16     KLF17       KLF2      KLF3      KLF4       KLF5       KLF6 #>   1 -10.267427 -16.95185  -9.622237 -11.38217 -11.13165  -8.196103  -9.917091 #>    motif #>           KLF7      KLF9       KUA1     Klf15 Klf3/8/12 Klf5-like Klf6-7-like #>   1  -6.337898 -16.99192 -11.003652 -26.45961 -23.44008 -22.65889   -23.81223 #>    motif #>            Kr     LBD13     LBD18      LBX1      LBX2       LEC2       LEP #>   1 -14.90248 -12.49712 -12.64689 -5.864126 -7.170281  -7.594457 -21.44639 #>    motif #>           LEU3       LFY       LHX2      LHX5      LHX6      LHX9        LHY #>   1  -9.539253 -25.28001  -9.604474 -5.764417 -7.875299 -5.508906 -12.561419 #>    motif #>          LIN54     LMX1A      LMX1B       LOB      LRL2     LYS14      Lef1 #>   1 -10.121308 -6.671569 -11.513947 -15.46248 -16.91269 -7.142306 -12.36984 #>    motif #>          Lhx1       Lhx3    Lhx3/4      Lhx4      Lhx8      Lim1      Lim3 #>   1 -18.94744 -15.294475 -21.87500 -5.499137 -4.115472 -5.599717 -3.907492 #>    motif #>         Lmx-b      M1BP      MAC1       MAF MAF::NFE2      MAFA      MAFF #>   1 -22.05090 -22.84258 -4.778295 -15.67163 -20.37751 -15.70507 -14.39191 #>    motif #>     MAFG::NFE2L1      MAFK MATALPHA2        MAX   MAX::MYC        MAZ      MBP1 #>   1    -21.35909 -16.90294 -5.111592  -7.342361  -7.319856  -8.261997 -3.953128 #>    motif #>     MBP1::SWI6      MCM1     MEF2A      MEF2B     MEF2C     MEF2D #>   1  -3.367537 -10.56181 -17.19673 -16.429781 -17.71073 -16.65412 #>    motif #>     MEIS1.MA0498.2 MEIS1.MA1639.1 MEIS2.MA0774.1 MEIS2.MA1640.1     MEIS3 #>   1      -3.195026     -15.081946      -5.015875     -17.317667 -5.712425 #>    motif #>         MEOX1     MEOX2      MET28     MET31     MET32      MET4       MGA #>   1 -8.145841 -7.907159 -3.6317225 -8.089982 -4.323269 -9.136062 -6.971281 #>    motif #>          MGA1  MGA::EVX1       MGP      MIG1      MIG2      MIG3      MITF #>   1 -23.63810 -14.109987 -26.11848 -2.668444 -3.170672 -2.855687 -20.52873 #>    motif #>         MIXL1       MLX     MLXIPL      MNB1A        MNT      MNX1      MOT2 #>   1 -7.790009 -10.55239  -8.676798  0.1238038  -7.222484 -5.361217 -3.657708 #>    motif #>           MOT3   MSANTD3        MSC       MSN2       MSN4      MSX1      MSX2 #>   1 -1.7934752 -7.807193 -10.497178 -0.9202529 -1.7802136 -5.102069 -4.813221 #>    motif #>          MTF1      MXI1        MYB      MYB1     MYB10    MYB101    MYB105 #>   1 -18.69060 -5.006932 -10.890558 -24.80194 -18.11916 -18.16257 -16.17021 #>    motif #>        MYB107    MYB108    MYB111     MYB113    MYB116    MYB118    MYB119 #>   1 -15.64190 -19.54548 -5.753962 -12.530468 -16.29210 -20.16523 -11.57348 #>    motif #>        MYB121    MYB124     MYB13     MYB15     MYB17     MYB23     MYB24 #>   1 -17.62847 -8.448688 -20.22082 -15.73427 -18.35991 -11.10833 -7.282037 #>    motif #>         MYB27       MYB3     MYB30     MYB33     MYB39    MYB3R1    MYB3R4 #>   1 -20.93956 -11.933044 -18.40576 -16.68521 -17.06917 -15.09717 -17.59401 #>    motif #>        MYB3R5      MYB4     MYB40     MYB41     MYB43     MYB44     MYB46 #>   1 -17.45525 -5.460543 -16.79697 -17.66036 -16.04359 -14.41679 -6.617168 #>    motif #>         MYB49     MYB51     MYB52     MYB55     MYB56      MYB57     MYB58 #>   1 -18.31842 -27.40120 -12.99304 -6.536519 -19.38220 -18.857697 -20.91659 #>    motif #>         MYB59     MYB60     MYB61     MYB62     MYB63     MYB65     MYB67 #>   1 -7.284864 -24.61361 -15.57646 -18.77157 -15.97564 -16.15744 -28.13457 #>    motif #>         MYB70     MYB73     MYB74     MYB77     MYB80      MYB81      MYB83 #>   1 -12.35182 -14.37164 -17.25275 -16.10686 -16.92803 -11.429183 -10.282650 #>    motif #>         MYB88      MYB92     MYB93     MYB94     MYB96     MYB98      MYB99 #>   1 -12.98610 -11.104567 -17.18861 -23.60403 -22.10674 -11.22129 -11.472166 #>    motif #>         MYBL1     MYBL2        MYC      MYC2      MYC3      MYC4      MYCN #>   1 -16.62617 -18.86706  -8.925851 -2.618436 -2.998615 -3.625872 -10.20934 #>    motif #>           MYF5       MYF6     MYOD1       MYOG      MYR2      MZF1   Macho-1 #>   1 -12.997923 -11.771621 -14.10684 -12.498471 -16.06457 -12.91855 -7.005013 #>    motif #>           Mad       Mafb      Mafg       Max     Mecom      Meox      Mitf #>   1 -17.19468  -8.337120 -17.10606 -20.44244 -16.91740 -21.62997 -21.55440 #>    motif #>         Mlxip       Mnx     Msgn1       Msx      Msx3    NAC002     NAC004 #>   1 -5.598033 -21.64985 -17.47541 -22.01872 -5.298048 -13.10504  -6.530075 #>    motif #>        NAC005     NAC007    NAC010    NAC011    NAC013     NAC016     NAC017 #>   1 -22.83336  -8.524057 -30.22791 -27.64524 -28.12866  -7.352958  -7.215231 #>    motif #>         NAC018    NAC019    NAC020    NAC025     NAC028    NAC029    NAC031 #>   1  -9.781473 -8.125268 -29.45866 -6.872555  -7.101947 -13.39481 -28.81798 #>    motif #>        NAC035     NAC037    NAC038     NAC043    NAC045    NAC046    NAC047 #>   1 -14.29832  -7.540392 -29.57402 -10.523606 -11.45140 -5.107317 -15.27274 #>    motif #>         NAC050     NAC053    NAC054    NAC055     NAC057    NAC058     NAC062 #>   1  -9.364348  -8.257162 -19.88671 -4.711478  -5.417052 -28.97187 -11.823584 #>    motif #>        NAC071    NAC073    NAC075     NAC076     NAC078    NAC079     NAC083 #>   1 -15.39905 -15.69927 -32.90350  -9.587268  -8.607845 -7.194160 -10.109463 #>    motif #>        NAC087     NAC096    NAC098    NAC101     NAC103    NAC105      NAC68 #>   1 -21.35686  -5.255669 -17.58476 -10.15467  -7.361071 -10.91077  -7.467238 #>    motif #>          NAC69      NAC92   NCU00019  NCU02182     NDT80    NEUROD1    NEUROG1 #>   1  -9.337397 -10.427023  -7.885603 -4.495378 -26.31480 -11.847762  -9.671854 #>    motif #>     NEUROG2.MA0669.1 NEUROG2.MA1642.1    NFATC3     NFATC4       NFE2 #>   1       -10.865952       -11.485936 -4.983346  -5.462654 -12.253295 #>    motif #>           NFIA      NFIB NFIC.MA0161.2 NFIC.MA1527.1 NFIC::TLX1     NFIL3 #>   1  -9.568707 -25.59698    -10.335184     -18.93200  -14.56191 -13.69155 #>    motif #>     NFIX.MA0671.1 NFIX.MA1528.1     NFKB1     NFKB2       NFYA       NFYB #>   1     -6.156345     -17.56192 -15.96508 -12.89363  -4.867543  -8.152924 #>    motif #>           NFYC      NFkb      NHLH1     NHLH2      NHP10      NID1      NK7.1 #>   1  -5.362316 -23.91480  -9.590516 -22.20133  -4.099808 -8.293047 -3.7906113 #>    motif #>        NKX2-2    NKX2-3    NKX2-4     NKX2-5    NKX2-8    NKX6-1    NKX6-2 #>   1 -11.23624 -8.587267 -7.328055  -9.239877 -6.227890 -5.201602 -4.755886 #>    motif #>        NKX6-3      NLP7      NOTO     NR1D1     NR1D2 NR1H2::RXRA NR1H4::RXRA #>   1 -5.603186 -15.08456 -8.543941 -19.32444 -21.61511   -29.40306   -15.92436 #>    motif #>         NR1I2     NR1I3     NR2C1 NR2C2.MA0504.1 NR2C2.MA1536.1 NR2F1.MA0017.2 #>   1 -20.72155 -8.770437 -7.011987      -16.33626      -5.449323     -15.137535 #>    motif #>     NR2F1.MA1537.1 NR2F1.MA1538.1      NR2F2     NR2F6     NR3C1     NR3C2 #>   1      -20.39125      -16.86856 -11.177008 -19.92360 -22.79072 -22.72779 #>    motif #>          NR4A1      NR4A2 NR4A2::RXRA     NR5A1     NR6A1      NRG1        NRL #>   1 -11.779292  -9.135693   -15.93693 -20.69921 -20.79601 -12.64399  -9.622463 #>    motif #>           NSI1      NTL8      NTL9       NUC Neurod2.MA0668.2 Neurod2.MA1993.1 #>   1 -11.392241 -13.07939 -7.799433 -26.03637        -14.41404       -10.655846 #>    motif #>          Nfat5     Nfatc1    Nfatc2    Nfe2l2      Nk-1      Nk-3    Nkx2-1 #>   1  -8.249941  -8.017311 -13.99965 -19.36679 -21.62428 -21.93150 -13.71649 #>    motif #>          Nkx3    Nkx3-1    Nkx3-2     Nobox      Noto      Npas2      Npas4 #>   1 -21.74255 -5.803332 -11.98421 -4.777168 -21.67649  -6.883470 -10.078609 #>    motif #>          Nr1H2     Nr1H4 Nr1h3::Rxra     Nr2F6     Nr2e1      Nr2e3     Nr2f6 #>   1 -10.102237 -8.749872   -23.23704 -23.72620 -8.538854 -1.2459271 -17.83352 #>    motif #>         Nr5A2      Nrf1       O11        O2      OAF1 OJ1058_F05.8 OJ1581_H09.2 #>   1 -15.21169 -14.73763 -10.61574 -15.32258 -5.952622    -5.271472    -9.499113 #>    motif #>          OLIG1      OLIG2      OLIG3   ONECUT1   ONECUT2   ONECUT3      OPI1 #>   1  -9.501138  -8.346542  -7.365048 -19.79871 -9.901978 -18.03304 -5.733937 #>    motif #>           OSR1       OSR2      OTX1       OTX2     OVOL1     OVOL2      OdsH #>   1 -11.380372 -12.185459 -4.851642 -12.406614 -19.09280 -15.92425 -4.521510 #>    motif #>          Olig2      Optix Os05g0497200 OsI_08196     OsRR22       Otp       Otx #>   1 -10.364604 -2.5681725    -7.652646 -7.177429 -10.522673 -22.94897 -23.50780 #>    motif #>     P0510F09.23     PATZ1      PAX1      PAX2 PAX3.MA0780.1 PAX3.MA1546.1 #>   1   -9.030394 -11.57768 -23.81004 -23.15202    -10.319138     -20.24862 #>    motif #>          PAX4      PAX5      PAX6      PAX9        PBF       PBX1       PBX2 #>   1 -5.062305 -12.46426 -14.68119 -25.71639  0.1600122 -13.301617 -14.941835 #>    motif #>          PBX3      PDR1       PDR3      PDR8      PDX1      PEND      PHD1 #>   1 -17.92254 -16.29537  -8.683002 -6.415640 -4.828385 -7.408289 -5.987215 #>    motif #>          PHDP      PHL1     PHL11     PHL12      PHL2      PHL4      PHL7 #>   1 -4.719964 -19.20301 -17.53156 -18.22766 -6.283946 -22.36986 -16.34278 #>    motif #>           PHO2      PHO4     PHOX2A    PHOX2B PHYPADRAFT_140773 #>   1 -2.4130197 -3.002465 -11.290933 -17.72922         -7.022614 #>    motif #>     PHYPADRAFT_143875 PHYPADRAFT_153324 PHYPADRAFT_173530 PHYPADRAFT_182268 #>   1         -7.132717         -5.453033         -7.844335        -11.212310 #>    motif #>     PHYPADRAFT_28324 PHYPADRAFT_38837 PHYPADRAFT_48267 PHYPADRAFT_64121 #>   1        -7.992669        -6.985796        -4.549635        -14.87971 #>    motif #>     PHYPADRAFT_72483        PI      PIF1       PIF3      PIF4      PIF5 #>   1        -7.034613 -12.51439 -12.48234  -7.404675 -3.653751 -5.124684 #>    motif #>         PITX1     PITX2     PITX3    PKNOX1    PKNOX2     PLAG1     PLAGL2 #>   1 -6.300311 -7.327733 -7.192410 -14.65128 -18.14886 -19.53717 -10.514772 #>    motif #>          PLT1 POPTR_0002s00440g    POU1F1    POU2F1 POU2F1::SOX2    POU2F2 #>   1 -23.51009         -3.790685 -21.66894 -11.40812    -24.64612 -18.22099 #>    motif #>        POU2F3    POU3F1    POU3F2    POU3F3    POU3F4    POU4F1    POU4F2 #>   1 -13.48777 -11.36804 -12.40932 -12.75498 -8.615233 -15.31973 -20.80682 #>    motif #>        POU4F3     POU5F1   POU5F1B POU6F1.MA0628.1 POU6F1.MA1549.1    POU6F2 #>   1 -18.02795  -9.001690 -7.426094       -7.401699       -8.721653 -8.101891 #>    motif #>     PPARA::RXRA     PPARD     PPARG      PRDM1     PRDM9      PROP1      PROX1 #>   1   -20.13094 -23.22768 -27.37513 -10.633120 -30.13611 -11.418549  -7.295104 #>    motif #>         PRRX1     PRRX2       PUT3      Pax7       Pdp1    Plagl1 Pou5f1::Sox2 #>   1 -5.129342 -5.704600  -2.702885 -15.54504 -12.363524 -12.56590    -16.37114 #>    motif #>     Pparg::Rxra     Pph13    Prdm14    Prdm15     Prdm4     Prdm5      Prop #>   1   -13.45715 -4.568528 -11.68355 -15.12484 -21.25240 -11.94347 -22.35261 #>    motif #>     Ptf1A.MA1619.1 Ptf1A.MA1620.1      Ptf1a      Ptx1   RAMOSA1      RAP1 #>   1     -12.950624     -12.297899 -12.507939 -4.753712 -13.82827 -17.15070 #>    motif #>        RAP2-1   RAP2-10   RAP2-11   RAP2-12    RAP2-3    RAP2-4    RAP2-6 #>   1 -16.78190 -12.89880 -16.78446 -22.34387 -3.562781 -7.743499 -15.77972 #>    motif #>        RAP2-7    RAP2-9 RARA.MA0729.1 RARA.MA0730.1 RARA::RXRA RARA::RXRG #>   1 -4.069744 -24.53703     -32.60382     -24.24069  -19.09967  -21.37482 #>    motif #>          RARB      RARG RAV1.MA0582.1 RAV1.MA0583.1      RAV2       RAX #>   1 -16.25541 -16.43525    -12.129235    -11.436868 -6.561088 -8.317517 #>    motif #>          RAX2      RAX3      RBPJ       RDR1      RDS1      RDS2      REB1 #>   1 -4.856435 -15.62313 -9.040589  -6.960285 -1.174458 -2.953596 -17.49701 #>    motif #>           REF6      REI1        REL       RELA       RELB      REST #>   1  -8.680499 -3.438544  -7.859078  -8.962341  -7.997979 -29.10317 #>    motif #>     RFX1.MA0365.1 RFX1.MA0509.3      RFX2      RFX3      RFX4      RFX5 #>   1     -6.744533     -23.88006 -23.47494 -23.98292 -25.92848 -24.09351 #>    motif #>          RFX7       RGM1       RGT1    RHOXF1    RIM101       RIN      RLM1 #>   1 -7.427792 -0.3030123 -10.817103 -5.650403 -5.876675 -14.96298 -27.32465 #>    motif #>          RME1 RORA.MA0071.1 RORA.MA0072.1       RORB      RORC       ROX1 #>   1 -6.868665    -10.423950     -19.55346 -10.750957 -11.99848  -9.712320 #>    motif #>          RPH1      RPN4     RREB1      RSC3      RSC30      RTG3     RUNX2 #>   1 -5.940658 -5.379794 -28.70680 -5.290536  -6.354127 -21.49670 -8.990587 #>    motif #>          RUNX3      RVE1       RVE4      RVE5      RVE6      RVE7     RVE7L #>   1 -12.327183 -18.54642 -12.594536 -13.93940 -14.08102 -16.19900 -20.22986 #>    motif #>          RVE8 RXRA::VDR RXRB.MA0855.1 RXRB.MA1555.1 RXRG.MA0856.1 RXRG.MA1556.1 #>   1 -15.93738 -22.14702     -22.69087     -15.91274     -22.42336     -16.74147 #>    motif #>     Rarb.MA0857.1 Rarb.MA0858.1 Rarg.MA0859.1 Rarg.MA0860.1       Rax     Rbpjl #>   1     -27.08138     -26.90248     -25.37250     -24.97618 -21.75319 -14.94201 #>    motif #>           Rel       Rfx6    Rhox11     Runx1        Rx      Rxra      SATB1 #>   1 -21.11860 -14.708407 -17.48948 -9.051776 -4.464648 -22.05621 -14.215709 #>    motif #>         SCRT1     SCRT2      SEP1       SEP3      SFL1      SFP1      SGR5 #>   1 -17.21789 -17.32488 -18.01929  -6.892150 -23.49268 -25.95987 -18.80894 #>    motif #>          SHOX      SIP4       SIX1      SIX2      SIZF2       SKN7      SKO1 #>   1 -5.128469 -3.035100  -8.779025 -13.15457 -10.423449 -1.7684987 -19.27706 #>    motif #>         SMAD2      SMAD3      SMAD5        SMB       SMZ     SNAI1     SNAI2 #>   1 -8.896832 -10.473506 -10.753341  -8.465372 -5.321118 -8.594460 -13.99732 #>    motif #>          SNAI3      SNT2      SOC1     SOHLH2       SOK2      SOL1      SOX10 #>   1  -9.820141 -14.09429 -13.08810  -7.414179  -8.314540 -19.65014  -9.137030 #>    motif #>          SOX12      SOX13      SOX14     SOX15     SOX18       SOX2     SOX21 #>   1 -12.135693 -11.227721 -10.739970 -8.964162 -5.355062 -10.717232 -23.96769 #>    motif #>          SOX4      SOX8      SOX9        SP1        SP2       SP3        SP4 #>   1 -8.333410 -8.676685 -7.874604  -5.465377  -4.606037 -13.07687  -5.573233 #>    motif #>           SP5        SP8        SP9     SPDEF      SPIB      SPIC      SPL1 #>   1 -7.351723 -11.058483 -10.802415 -10.52033 -15.43391 -12.42826 -13.91066 #>    motif #>         SPL10     SPL11     SPL12    SPL13A     SPL14     SPL15      SPL3 #>   1 -9.744237 -14.09632 -6.490048 -11.95255 -13.03780 -17.20732 -11.54862 #>    motif #>          SPL4      SPL5      SPL7      SPL8      SPL9       SPT     SPT15 #>   1 -6.961089 -15.08635 -6.330916 -17.34443 -11.24732 -5.615428 -28.80505 #>    motif #>          SPT2     SPT23      SRD1 SREBF1.MA0595.1 SREBF1.MA0829.2 #>   1 -8.921227 -6.578572 -5.502389       -9.716613       -13.78539 #>    motif #>     SREBF2.MA0596.1 SREBF2.MA0828.2       SRF      SRM1       SRY      STAT1 #>   1       -9.578509       -17.69189 -16.32708 -16.96197 -5.727211 -12.134811 #>    motif #>     STAT1::STAT2      STAT3      STB3      STB4      STB5     STE12      STP1 #>   1    -14.37480 -10.934057 -24.29851 -7.527923 -5.945079 -4.928882 -3.944841 #>    motif #>          STP2       STP3       STP4      SUM1      SUT1      SUT2       SVP #>   1 -23.99605 -10.789127 -10.487369 -8.851944 -2.723702 -23.46008 -22.08561 #>    motif #>          SWI4      SWI5        Scr     Shox2      Six3    Six3/6 Six4.MA0204.1 #>   1 -7.499379 -8.071825 -4.9460688 -5.373452 -20.17221 -23.23656     -3.931878 #>    motif #>     Six4.MA2001.1     Smad4     Snail      Sox1      Sox11     Sox17       Sox3 #>   1     -8.813077 -6.619572 -21.96080 -22.96440  -8.902253 -13.75875 -11.070288 #>    motif #>          Sox5      Sox6     SoxB1     SoxB2      SoxC      SoxF      Spi1 #>   1 -13.46294 -8.640052 -23.40216 -22.92522 -22.20010 -22.80415 -17.60498 #>    motif #>           Spz1     StBRC1      Stat2     Stat4     Stat5a Stat5a::Stat5b #>   1  -9.767256  -9.024670 -13.666018 -14.86598 -11.049814      -8.623687 #>    motif #>        Stat5b     Stat6   Stat92E     Su(H) TAL1::TCF3        TB1      TBF1 #>   1 -14.83973 -13.35710 -17.29000 -18.89712  -9.252558 -11.647168 -19.57376 #>    motif #>           TBP       TBR1      TBS1      TBX1     TBX15      TBX18     TBX19 #>   1 -12.31699 -10.822968 -4.627303 -7.094054 -7.771399 -12.194680 -24.80628 #>    motif #>           TBX2      TBX20      TBX21       TBX3      TBX4      TBX5      TBXT #>   1 -10.745564 -11.568014 -12.125090 -12.024869 -6.527128 -5.954288 -20.00982 #>    motif #>          TCF12      TCF21       TCF3      TCF4       TCF7    TCF7L1    TCF7L2 #>   1  -8.983912  -9.952511  -8.636600 -11.97341  -9.028661 -12.89840 -14.05889 #>    motif #>          TCFL5      TCP1     TCP13     TCP14     TCP15      TCP16     TCP17 #>   1  -7.611602 -39.02294 -14.31339 -28.79803 -24.44810  -9.394646 -10.17104 #>    motif #>         TCP19      TCP2     TCP20     TCP21     TCP22      TCP23     TCP24 #>   1 -9.161488 -9.001269 -24.37467 -17.74123 -16.48724  -7.893668 -12.70012 #>    motif #>          TCP3       TCP4       TCP5       TCP7      TCP8      TCP9      TCX2 #>   1 -15.40902  -6.990522  -8.588342 -12.930558 -7.156271 -28.60398 -20.13831 #>    motif #>          TCX3      TCX6       TDA9      TEA1      TEAD1      TEAD2     TEAD3 #>   1 -18.84900 -19.54555  -7.132442 -5.274516 -14.095102 -13.286948 -7.812788 #>    motif #>          TEAD4      TEC1       TEF      TEM1 TFAP2A.MA0003.4 TFAP2A.MA0810.1 #>   1 -11.879814 -5.789405 -14.44078 -7.290026       -12.60385       -9.755606 #>    motif #>     TFAP2A.MA0872.1 TFAP2B.MA0811.1 TFAP2B.MA0812.1 TFAP2B.MA0813.1 #>   1       -11.20378       -10.32867       -8.311389      -11.993092 #>    motif #>     TFAP2C.MA0524.2 TFAP2C.MA0814.2 TFAP2C.MA0815.1     TFAP2E TFAP4.MA0691.1 #>   1       -10.14615      -11.759162       -12.14212  -8.727061      -8.554792 #>    motif #>     TFAP4.MA1570.1 TFAP4::ETV1 TFAP4::FLI1      TFCP2     TFDP1      TFE3 #>   1      -8.413199   -19.23501   -23.03034 -10.662060 -10.65188 -10.54577 #>    motif #>           TFEB      TFEC TFLG2-Zm00001d042777       TGA1     TGA10     TGA1A #>   1  -8.098027 -10.15963            -14.55412 -10.902926 -16.52205 -4.120300 #>    motif #>          TGA2      TGA3       TGA4      TGA5      TGA6      TGA7       TGA9 #>   1 -16.51595 -15.06168 -10.404275 -15.70359 -14.87202 -16.07313 -10.631717 #>    motif #>         TGIF1     TGIF2   TGIF2LX    TGIF2LY      THAP1      THI2      THRA #>   1 -18.00563 -15.49512 -13.12658 -12.549506  -8.459185 -22.09380 -30.68407 #>    motif #>     THRB.MA1574.1 THRB.MA1575.1 THRB.MA1576.1      TINY      TLX2      TOD6 #>   1     -17.89617     -21.88432     -23.46629 -17.05555 -5.983303 -21.61857 #>    motif #>          TOS8      TP53      TP63      TP73       TRB1      TRB2     TREE1 #>   1 -5.589271 -22.13402 -25.17628 -23.25005 -12.052925 -20.20722 -7.933706 #>    motif #>          TRP1      TRP2      TRP5      TRPS1      TSAR1      TSAR2      TSO1 #>   1 -36.18354 -30.42633 -6.431841 -12.710785  -6.736176  -6.136655 -19.02899 #>    motif #>         TWIST1      TYE7    Tbox-a    Tbox-b Tbx15/18/22    Tbx2/3       Tbx6 #>   1 -12.484856 -4.446386 -25.92056 -26.12193   -26.54603 -23.80118 -12.304132 #>    motif #>          Tcf12      Tcf21 Tcf3-4-12   Tfcp2l1    Thap11       Tlx        Trl #>   1 -12.578236 -17.066551 -22.70976 -15.69169 -18.79532 -21.87816 -10.036035 #>    motif #>         Twist2      UGA3      UME6      UNCX     UNE10      UPC2       URC2 #>   1 -10.463709 -5.261737 -15.63586 -5.066865 -5.331392 -5.691506  -9.795383 #>    motif #>          USF1      USF2      USV1       Ubx    Uncx-b       Usf      VAX1 #>   1 -14.07985 -13.19966 -23.52140 -4.933546 -21.77805 -22.00809 -5.068930 #>    motif #>          VAX2     VENTX      VEZF1       VIP1      VSX1      VSX2        Vdr #>   1 -4.824667 -7.404189  -9.184659 -15.741112 -5.193454 -5.085812 -10.577803 #>    motif #>          Vsx1      Vsx2      WIN1      WRKY1    WRKY11    WRKY12     WRKY14 #>   1 -4.619092 -7.524576 -7.428229 -12.456891 -15.76757 -5.929681 -14.621140 #>    motif #>        WRKY15    WRKY17    WRKY18     WRKY2     WRKY20    WRKY21     WRKY22 #>   1 -18.06387 -15.52136 -9.868302 -6.804219 -15.559011 -23.19215 -14.258256 #>    motif #>        WRKY23    WRKY24    WRKY25     WRKY26    WRKY27     WRKY28     WRKY29 #>   1 -6.444532 -15.05234 -18.32820 -15.056189 -14.21440 -10.325201 -11.112762 #>    motif #>         WRKY3    WRKY30    WRKY31     WRKY33    WRKY38     WRKY40    WRKY42 #>   1 -11.69866 -15.71871 -21.30957 -11.639686 -5.863330 -10.239161 -25.06168 #>    motif #>        WRKY43    WRKY45     WRKY46    WRKY47    WRKY48    WRKY50    WRKY53 #>   1 -7.472414 -16.32583 -12.979697 -16.62984 -8.063165 -14.18139 -6.988596 #>    motif #>         WRKY55    WRKY57    WRKY59     WRKY6     WRKY60    WRKY62    WRKY63 #>   1 -13.639675 -8.196859 -12.37504 -22.43475 -11.620426 -6.098912 -6.649229 #>    motif #>         WRKY65     WRKY7    WRKY70     WRKY71    WRKY75     WRKY8       Wt1 #>   1 -11.179604 -15.24540 -15.10212 -11.642677 -6.158353 -17.95872 -11.96611 #>    motif #>     XBP1.MA0414.1 XBP1.MA0844.1      YAB4      YAP1      YAP3       YAP5 #>   1     -5.616097     -14.02113 -18.43529 -26.32983 -6.807674 -2.4816508 #>    motif #>          YAP6       YAP7   YER130C   YER184C   YGR067C       YHP1   YKL222C #>   1 -22.85768 -10.735050 -6.854662 -6.380764 -13.96670 -3.3638537 -6.694502 #>    motif #>       YLL054C   YLR278C   YNR063W      YOX1   YPR013C   YPR015C   YPR022C #>   1 -1.133950 -5.048769 -7.284286 -6.912766 -6.700744 -25.44197 -5.484540 #>    motif #>       YPR196W      YRM1       YRR1     YY1-2        YY2        Yy1      ZAP1 #>   1 -6.093193 -6.543268  -9.422548 -26.21810  -8.683128  -7.904765 -21.45159 #>    motif #>          ZAT10       ZAT6     ZBED1     ZBED2     ZBTB12    ZBTB14     ZBTB18 #>   1 -10.064705 -12.633402 -19.61495 -14.63581  -9.830159  -8.89457 -15.662132 #>    motif #>        ZBTB26     ZBTB32    ZBTB33     ZBTB6    ZBTB7A     ZBTB7B     ZBTB7C #>   1 -14.09971 -12.342234 -17.45498 -11.63835 -12.70089 -13.418921 -11.622002 #>    motif #>           ZEB1     ZFP14     ZFP42     ZFP57       ZHD1     ZHD10       ZHD3 #>   1  -9.928423 -12.04853 -24.19946 -14.37212 -13.117353 -9.755834 -16.110491 #>    motif #>           ZHD5      ZHD6      ZHD9      ZIC1      ZIC4      ZIC5      ZIM3 #>   1 -10.470381 -16.88879 -16.18722 -19.06069 -17.62792 -21.62237 -18.13542 #>    motif #>        ZKSCAN1   ZKSCAN3   ZKSCAN5       ZMS1    ZNF135    ZNF136    ZNF140 #>   1 -11.523610 -24.46753 -14.19886  -6.073023 -15.96060 -17.83813 -30.00465 #>    motif #>        ZNF143    ZNF148     ZNF16    ZNF189    ZNF211    ZNF214      ZNF24 #>   1 -21.60809 -10.31715 -32.18838 -12.36009 -19.30939 -17.68610 -17.062822 #>    motif #>         ZNF257     ZNF263    ZNF274     ZNF281    ZNF282     ZNF317    ZNF320 #>   1 -11.654472 -10.849211 -19.92178 -10.993660 -21.28200 -11.862442 -34.18379 #>    motif #>        ZNF324    ZNF331    ZNF341    ZNF343   ZNF354A   ZNF354C    ZNF382 #>   1 -25.64236 -11.95134 -11.20671 -20.31002 -24.51521 -3.713219 -35.53799 #>    motif #>         ZNF384    ZNF410     ZNF416    ZNF417    ZNF418    ZNF449    ZNF454 #>   1 -13.873791 -27.10252  -8.885203 -18.22758 -17.50156 -14.23449 -21.93017 #>    motif #>        ZNF460    ZNF528    ZNF530     ZNF549    ZNF574    ZNF582    ZNF610 #>   1 -17.14161 -18.61633 -21.56303  -8.956040 -18.13194 -27.66820 -12.26509 #>    motif #>         ZNF652     ZNF667    ZNF669    ZNF675    ZNF680    ZNF682    ZNF684 #>   1 -12.088605 -11.870439 -16.43462 -25.54975 -18.53592 -16.77931 -22.73145 #>    motif #>         ZNF692    ZNF701    ZNF707    ZNF708    ZNF740     ZNF75D     ZNF76 #>   1  -8.942177 -22.31271 -16.42878 -13.68284 -14.00021  -9.909624 -28.53625 #>    motif #>        ZNF768     ZNF784      ZNF8    ZNF816     ZNF85     ZNF93    ZSCAN29 #>   1 -19.66790 -11.894745 -28.73202 -19.12477 -15.61980 -17.66078 -11.686489 #>    motif #>       ZSCAN31    ZSCAN4     Zfp335       Zfx Zic1::Zic2      Zic2      Zic3 #>   1 -20.25889 -18.30165  -9.085651 -15.29164 -11.802935 -15.01403 -13.84195 #>    motif #>     Zm00001d002364 Zm00001d005692 Zm00001d005892 Zm00001d015407 Zm00001d018571 #>   1      -10.25955     -12.941717      -10.95611      -28.99943      -13.81359 #>    motif #>     Zm00001d020267 Zm00001d020595 Zm00001d024324 Zm00001d027846 Zm00001d031796 #>   1      -12.30426      -10.80916      -12.11655     -11.802562      -11.96949 #>    motif #>     Zm00001d034298 Zm00001d035604 Zm00001d038683 Zm00001d044409 Zm00001d044785 #>   1      -9.782520      -13.95531      -12.21149     -12.214423     -10.391736 #>    motif #>     Zm00001d049364 Zm00001d052229    Znf423     abd-A       abi4       achi #>   1      -16.80426      -8.519531 -17.95415 -3.896458  -8.402893 -2.0660782 #>    motif #>            al        ap        ara      atf-7   bHLH130   bHLH145    bHLH18 #>   1 -5.858398 -4.540771 -0.4311768  -8.770669 -10.18791 -12.17842 -19.84806 #>    motif #>        bHLH77    bHLH80    bZIP14   bZIP910   bZIP911       bap        bcd #>   1 -15.66772 -10.66365 -9.037688 -5.264236 -15.13614 -5.210208 -2.9401340 #>    motif #>         blmp-1 br.MA0010.1 br.MA0011.1 br.MA0012.1 br.MA0013.1       brk #>   1  -7.476682   -9.510454   -4.567707   -7.912227   -7.994325 -6.916490 #>    motif #>            bsh        btd       btn        cad       caup    cebp-1 #>   1 -3.5477042  -7.452864 -4.044435  -9.969175 -0.6200768 -11.79546 #>    motif #>     ceh-10::ttx-3     ceh-22    ceh-28    ceh-38    ceh-48      ces-2     che-1 #>   1     -15.90793 -10.002517 -12.43766 -21.55091 -6.920491  -9.760511 -3.662835 #>    motif #>     cnc::maf-S     cre-1        ct    daf-12     daf-16 dl.MA0022.1 dl.MA0023.1 #>   1  -17.05177 -3.832781 -3.065290 -15.55536  -7.761951   -8.468653   -6.443079 #>    motif #>       dmrt99B    dpy-27     dsc-1        dsx       dve     efl-1      elt-2 #>   1 -20.17884 -18.87571 -7.841903 -10.230044 -6.090757 -17.49828 -11.427062 #>    motif #>         elt-3     elt-6       ems         en     eor-1       eve       exd #>   1 -8.958152 -6.005401 -4.203285 -4.4118137 -14.83549 -3.999171 -6.374278 #>    motif #>          exex        fkh     fkh-2     fkh-9     fos-1       ftz       gcm #>   1 -4.813901 -11.757285 -2.002811 -4.251130 -7.571834 -4.893739 -12.47670 #>    motif #>          gcm2       grh         gt          h        hb        hbn        hkb #>   1 -6.025166 -13.61374 -11.361400  -7.428543 -8.942668 -5.0980535  -9.806239 #>    motif #>         hlh-1    hlh-30        hth       ind       inv        kn       kni #>   1 -11.22781 -11.57129 -1.3516834 -3.337909 -5.602289 -19.95738 -10.26631 #>    motif #>           lab large-Maf        lbe        lbl     lim-4     lim-7    lin-14 #>   1 -5.088194 -21.04148 -2.2267311 -2.5360460 -6.337100 -9.245589 -1.344723 #>    motif #>        lin-54        lms     mab-3     mab-5        mirr      mix-a     msl-1 #>   1 -19.02970 -4.3025408 -17.04191 -5.937994 -0.47193906 -10.296783 -10.68285 #>    motif #>         msn-1   myb.Ph3      nhr-6      nit-4       nub     nuc-1         oc #>   1 -5.130167 -7.370039 -8.3621750  -9.308953 -12.49989 -4.361234 -2.7929423 #>    motif #>            odd    onecut        opa       otp       ovo     pal-1       pan #>   1 -13.553642 -3.365893 -13.608385 -4.539888 -8.516388 -5.318827 -15.75361 #>    motif #>            pb      pha-4        pho       pnr      pqm-1       prd      repo #>   1 -4.834831 -10.305964  -9.448254 -13.47481 -11.393536 -8.516388 -5.194725 #>    motif #>            ro       rst2   schlank         sd     skn-1      slbo       slou #>   1 -4.244734  -7.171324 -5.931452 -11.228462 -17.21659 -3.583443 -4.4139757 #>    motif #>           slp1      sma-4 small-Maf       sna    snpc-4        so  squamosa #>   1 -10.328889  -9.504236 -20.98296 -14.86617 -11.31851 -4.162184 -12.27278 #>    motif #>        su(Hw)        sv        tin        tll        ttk       tup        twi #>   1 -26.80779 -24.59657  -9.484808 -10.608195  -5.106045 -3.582530  -8.871314 #>    motif #>        unc-30      unc-4     unc-62    unc-86      unpg        usp     vab-7 #>   1 -5.871706 -4.8233438 -10.316213 -8.418869 -4.358808  -9.245385 -5.829192 #>    motif #>            vfl        vis       vnd       vvl       wc-1         z       zen #>   1 -11.934834 -2.0130692 -7.839021 -2.510250  -6.957413 -6.465868 -4.970372 #>    motif #>          zen2      zfh-2     zip-8 #>   1 -4.120689 -10.062160 -12.31258 #>  [ reached getOption(\"max.print\") -- omitted 5 rows ]  # for specific motifs pwms_jaspar <- extract_pwm(     cluster_sequences_example,     motifs = c(\"JASPAR.CDX1\", \"JASPAR.CDX2\"),     prior = 0.01 ) # }"},{"path":"/reference/gextract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of intervals from a motif database — gextract_pwm","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"Extract pwm intervals motif database","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"gextract_pwm(   intervals,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   prior = 0,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/gextract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals misha intervals set motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. prior prior probability nucleotide. parallel logical, whether use parallel processing","code":""},{"path":"/reference/gextract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals set additional columns per motif, containing pwm interval motif","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"# \\dontrun{ library(misha) gdb.init_examples() pwms <- gextract_pwm(\"annotations\") pwms[, 1:20] #>   chrom start   end strand  remark HOMER.AARE HOMER.ABF1 HOMER.AMYB HOMER.AP_1 #> 1  chr1    20  2000      1 remarkA -12.989733  -12.25663  -6.532580 -10.476537 #> 2  chr2    20  2000      1 remarkB -11.239439  -11.09528  -7.208153 -11.184667 #> 3  chr2  3000  8000     -1 remarkC -10.006383  -10.59158  -6.676258  -4.385600 #> 4  chr2  9000 11000      1 remarkD  -5.368375  -11.75360  -9.622133  -7.448188 #>   HOMER.AP_2alpha HOMER.AP_2gamma HOMER.ARE HOMER.AR_halfsite HOMER.Ap4 #> 1      -11.174854      -11.531642 -18.29645         -3.582500 -5.594416 #> 2       -8.121261       -7.816772 -16.74446         -5.461981 -4.898031 #> 3      -11.295572      -10.678673 -14.98829         -6.295091 -4.292560 #> 4      -11.155062      -11.075082 -15.17114         -6.004141 -3.999556 #>   HOMER.ArntAhr HOMER.Ascl1 HOMER.Atf1 HOMER.Atf2 HOMER.Atf3 HOMER.Atf4 #> 1     -5.997535   -7.424507  -6.736964  -9.205512 -14.353178 -12.614318 #> 2     -5.877813   -7.202877  -7.836501  -9.936964 -14.161862 -11.135440 #> 3     -6.492581   -7.565849  -5.986350  -8.801591  -6.384101  -9.361985 #> 4     -5.802579   -7.054382  -5.009895  -7.242763 -10.818832  -3.324120 # }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_pssm_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"Plot LOGO pssm result regression","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"plot_pssm_logo(pssm, title = \"Sequence model\", subtitle = ggplot2::waiver())"},{"path":"/reference/plot_pssm_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"pssm 'pssm' field regression result title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"# \\dontrun{ res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 13016 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_pssm_logo(res$pssm) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.  # }"},{"path":"/reference/plot_pssm_logo_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of pssm from dataset (e.g. ","title":"Plot LOGO of pssm from dataset (e.g. ","text":"Plot LOGO pssm dataset (e.g. \"HOMER\" \"JASPAR\")","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(   motif,   dataset = all_motif_datasets(),   title = motif,   subtitle = ggplot2::waiver() )"},{"path":"/reference/plot_pssm_logo_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of pssm from dataset (e.g. ","text":"motif motif name (e.g. \"GATA4\") dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets() title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of pssm from dataset (e.g. ","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(\"JASPAR.Brachyury\") #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   plot_pssm_logo_dataset(\"GATA5\", JASPAR_motifs) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/plot_regression_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"return scatter plot response variable averages vs regression model's prediction","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"plot_regression_prediction(pred, response, point_size = 0.5)"},{"path":"/reference/plot_regression_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"pred 'pred' field regression result response 'response' field regression result (response variable) point_size size points plot (default: 0.5)","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"# \\dontrun{ res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 13016 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_prediction(res$pred, res$response)  # }"},{"path":"/reference/plot_regression_prediction_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"Plot cumulative regression model's prediction stratified response variable","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"plot_regression_prediction_binary(pred, response)"},{"path":"/reference/plot_regression_prediction_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"pred 'pred' field regression result response 'response' field regression result (response variable). binary (0/1).","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the cumulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"# \\dontrun{ res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], score_metric = \"ks\") #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"ks\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTAAT*ATT\" #> ✔ KS test D: 0, p-value: 1 plot_regression_prediction_binary(res_binary$pred, res_binary$response)  # }"},{"path":"/reference/plot_regression_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the regression results — plot_regression_qc","title":"Plot the regression results — plot_regression_qc","text":"Plot QC regression results","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the regression results — plot_regression_qc","text":"","code":"plot_regression_qc(   reg,   response = NULL,   title = glue(\"Motif regression results (consensus: {reg$consensus})\"),   subtitle = NULL,   caption = NULL )"},{"path":"/reference/plot_regression_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the regression results — plot_regression_qc","text":"reg output regress_pwm response response variable title title plot (optional) subtitle subtitle plot (optional) caption caption plot (optional). caption NULL default caption plotted.","code":""},{"path":"/reference/plot_regression_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the regression results — plot_regression_qc","text":"patchwork object","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the regression results — plot_regression_qc","text":"","code":"# \\dontrun{ res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 13016 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.  # }"},{"path":"/reference/plot_regression_qc_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the regression results for multiple motifs — plot_regression_qc_multi","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"plot regression results motif_num > 1","code":""},{"path":"/reference/plot_regression_qc_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"","code":"plot_regression_qc_multi(   reg,   title = glue(\"Motif regression results (consensus: {reg$consensus})\"),   subtitle = NULL,   caption = NULL )"},{"path":"/reference/plot_regression_qc_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"reg output regress_pwm title title plot (optional) subtitle subtitle plot (optional) caption caption plot (optional). caption NULL default caption plotted.","code":""},{"path":"/reference/plot_regression_qc_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the regression results for multiple motifs — plot_regression_qc_multi","text":"","code":"# \\dontrun{ res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 3], motif_num = 3) #> ℹ Running regression for 3 motifs #>  #> ── Running first regression ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 512 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***CTGATAAG****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"GATA\" #> ✔ KS test D: 0, p-value: 1 #>  #> ── Running regression #2 ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 180 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TGCTC*TCC***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"A**TRCTC***C\" #> ✔ R^2: 0.0236 #> ℹ KS statistic: 0.154309069002672 #> ℹ KS test statistic for models 1 and 2: 0.597772677601196 #> ℹ Improvement in KS test statistic: 0.597772677601196 #>  #> ── Running regression #3 ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 183 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***AGGG*CCTC***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"AGGG*CCTC\" #> ✔ R^2: 0.0023 #> ℹ KS statistic: 0.0825770099776097 #> ℹ KS test statistic for models 1, 2, and 3: 0.604052942210358 #> ℹ Improvement in KS test statistic: 0.00628026460916142 #> ✔ Best model: model #2 (score of 0.154309069002672) plot_regression_qc_multi(res_binary) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'response' not found # }"},{"path":"/reference/plot_spat_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial model of the regression result — plot_spat_model","title":"Plot spatial model of the regression result — plot_spat_model","text":"Plot spatial model regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"plot_spat_model(spat)"},{"path":"/reference/plot_spat_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial model of the regression result — plot_spat_model","text":"spat 'spat' field regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"# \\dontrun{ res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 13016 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_spat_model(res$spat)  # }"},{"path":"/reference/prego-package.html","id":null,"dir":"Reference","previous_headings":"","what":"prego: PWM Regression Optimizer — prego-package","title":"prego: PWM Regression Optimizer — prego-package","text":"PREGO implements regression algorithms finding motifs DNA. contains algorithms described : \"Extensive low-affinity transcriptional interactions yeast genome\" doi:10.1101/gr.5113606 .","code":""},{"path":"/reference/prego-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prego: PWM Regression Optimizer — prego-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Amos Tanay amos.tanay@weizmann.ac.il","code":""},{"path":"/reference/pssm_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PSSM difference — pssm_diff","title":"Compute PSSM difference — pssm_diff","text":"Compute PSSM difference","code":""},{"path":"/reference/pssm_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PSSM difference — pssm_diff","text":"","code":"pssm_diff(pssm1, pssm2)"},{"path":"/reference/pssm_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PSSM difference — pssm_diff","text":"pssm1 first PSSM matrix data frame pssm2 second PSSM matrix data frame","code":""},{"path":"/reference/pssm_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PSSM difference — pssm_diff","text":"KL divergence two PSSMs","code":""},{"path":"/reference/pssm_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PSSM difference — pssm_diff","text":"","code":"# \\dontrun{ res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 pssm_diff(res1$pssm, JASPAR_motifs[JASPAR_motifs$motif == \"HNF1A\", ]) #> [1] 1.224965 # }"},{"path":"/reference/pssm_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match PSSM to a directory of motifs — pssm_match","title":"Match PSSM to a directory of motifs — pssm_match","text":"Match PSSM directory motifs","code":""},{"path":"/reference/pssm_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"pssm_match(   pssm,   motifs,   best = FALSE,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/pssm_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match PSSM to a directory of motifs — pssm_match","text":"pssm PSSM matrix data frame motifs data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name best return best match parallel use parallel processing. Set number cores using set_parallel.","code":""},{"path":"/reference/pssm_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match PSSM to a directory of motifs — pssm_match","text":"best TRUE, string best match. Otherwise, data frame row per motif column named 'dist' distance pssm. data frame sorted increasing distance.","code":""},{"path":"/reference/pssm_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"# \\dontrun{ res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 head(pssm_match(res1$pssm, JASPAR_motifs)) #>    motif      dist #> 1   Hox1 0.3574793 #> 2 Lhx3/4 0.3587339 #> 3 Uncx-b 0.3641574 #> 4    Rax 0.3666567 #> 5   Nkx3 0.3704193 #> 6   Nk-3 0.3828505 pssm_match(res1$pssm, JASPAR_motifs, best = TRUE) #> [1] \"Hox1\" # }"},{"path":"/reference/regress_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on clusters — regress_pwm.clusters","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"Run PWM regression clusters","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"regress_pwm.clusters(   sequences,   clusters,   use_sample = TRUE,   match_with_db = TRUE,   sample_frac = NULL,   sample_ratio = 1,   final_metric = \"ks\",   parallel = getOption(\"prego.parallel\", TRUE),   use_sge = FALSE,   ... )"},{"path":"/reference/regress_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) clusters vector cluster assignments sequence use_sample whether use sampled optimization (default: FALSE). match_with_db match resulting PWMs motif databases using pssm_match. add column named 'db_match' stats data frame, together 'pred_mat_db' database motif predictions, 'db_dataset' similar 'motif_dataset' database motifs. Note closest match returned, even similar enough absolute terms. Also, match done resulting regression pssm pssms database - order find best motif database explain clusters, use screen_pwm.clusters. sample_frac vector two numbers, specifying fraction sequences use sampling sequences cluster (first number) cluster (second number). NULL - sample_ratio sample_frac NULL, number sequences cluster equal sample_ratio times number sequences cluster. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. parallel whether run optimization parallel. use set_parallel set number cores use. use_sge use function gcluster.run2 misha.ext package run optimization SGE cluster. relevant misha.ext package installed. Note gcluster.run2 writes current environment starting parallelization, better run function clean environment. Also, Note 'prego' needs installed order work, .e. use devtools::load_all() pkgload::load_all() load package. ... Arguments passed regress_pwm, regress_pwm.sample response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities include_response include response resulting list (default: TRUE) verbose show verbose messages. seed random seed consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). sample_idxs indices sequences use. NULL, indices sampled using sample_frac.","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"list following elements: models: list models cluster cluster_mat: indicator matrix cluster assignments pred_mat: matrix energies predicted motifs per cluster (columns) sequence (rows) motif_dataset: data frame PSSMs cluster spat_dataset: data frame spatial model cluster stats: data frame statistics cluster","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"# \\dontrun{ res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) #> ℹ Using sampled optimization #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases head(res$pred_mat) #>                           c100      c111       c29        c5        c6 #> chr1_5108540_5108840 -17.08631 -16.12506 -16.42368 -16.58934 -16.66668 #> chr1_7313460_7313760 -15.17515 -17.06936 -16.47425 -16.11019 -15.93262 #> chr1_7778180_7778480 -15.63718 -15.20171 -16.82116 -16.46594 -16.31830 #> chr1_9381040_9381340 -16.30274 -15.36889 -15.54666 -16.03829 -16.13131 #> chr1_9921360_9921660 -14.73491 -17.77984 -15.50204 -16.15817 -16.02699 #> chr1_9931940_9932240 -16.31763 -17.11946 -14.91545 -16.25637 -16.62002 res$stats #> # A tibble: 5 x 7 #>   cluster consensus         ks_D        r2      seed_motif #> 1    c100   GA***AT 6.707369e-01 0.3263587 ***TGAT*GATG*** #> 2    c111    Y*RTAA 8.378122e-01 0.4967555 ***GC*ATAAAA*** #> 3     c29 T*A***W*Y 8.303646e-01 0.5311335 ***TTAAT*ATT*** #> 4      c5      <NA> 5.529431e-17 0.1966444 ***AATCA*TAA*** #> 5      c6     T**AT 7.199102e-17 0.1744817 ***TTAAT*ATT*** #>                db_match db_match_dist #> 1 JASPAR.MEIS2.MA1640.1      0.326019 #> 2   JOLMA.CDX1_mono_DBD      0.194041 #> 3         JASPAR.Lhx3/4      0.341697 #> 4           JASPAR.TCP1      0.288188 #> 5         JASPAR.Lhx3/4      0.277762  plot_regression_qc(res$models[[1]], title = names(res$models)[1]) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # multiple motifs per cluster res_multi <- regress_pwm.clusters(cluster_sequences_example, clusters_example, motif_num = 3) #> ℹ Using sampled optimization #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases res_multi$multi_stats #>    cluster model       score comb_score       diff    consensus      seed_motif #> 1     c100     1 0.000000000  0.0000000         NA      GA***AT ***TGAT*GATG*** #> 2     c100     2 0.291262136  0.7427184 0.74271845    G***R**GT ***GA*GGGGGA*** #> 3     c100     3 0.196601942  0.7815534 0.03883495 GCA*G*CAA*MG ***CCA*GGCAA*** #> 4     c111     1 0.000000000  0.0000000         NA       Y*RTAA ***GC*ATAAAA*** #> 5     c111     2 0.042671614  0.8701299 0.87012987  GG*GGA*GTAC ***AGG*GGTAC*** #> 6     c111     3 0.109461967  0.8849722 0.01484230 A*TY*ATATAGT ***CAA*ATAGT*** #> 7      c29     1 0.000000000  0.0000000         NA    T*A***W*Y ***TTAAT*ATT*** #> 8      c29     2 0.000000000  0.9024390 0.90243902         AT*A ***GCAAT*AGA*** #> 9      c29     3 0.160569106  0.9268293 0.02439024 CG*AAC*TA**S ***CG*AACCTA*** #> 10      c5     1 0.610972569  0.6109726         NA         <NA> ***AATCA*TAA*** #> 11      c5     2 0.496259352  0.7281796 0.11720698         GATA ***TGATAAGA**** #> 12      c5     3 0.214463840  0.7531172 0.02493766    TGASTGG*G ***GATGA*TGG*** #> 13      c6     1 0.500970874  0.5009709         NA        T**AT ***TTAAT*ATT*** #> 14      c6     2 0.533980583  0.6834951 0.18252427          GAT ***AGATAAGA**** #> 15      c6     3 0.009708738  0.7029126 0.01941748        CAAGT ***CACAAGTC**** plot_regression_qc_multi(res_multi$models[[1]], title = names(res$models)[1]) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'response' not found # }"},{"path":"/reference/regress_pwm.cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validate a PWM regression model — regress_pwm.cv","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"Perform cross-validation PWM regression model. can either provide explicit folds, use nfolds argument set number folds. response binary (0 1) categories vector given, folds stratified response/categories.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"","code":"regress_pwm.cv(   sequences,   response,   nfolds = NULL,   metric = NULL,   folds = NULL,   categories = NULL,   use_sample = TRUE,   seed = 60427,   parallel = getOption(\"prego.parallel\", FALSE),   add_full_model = TRUE,   ... )"},{"path":"/reference/regress_pwm.cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences nfolds number folds cross-validation. Can NULL folds provided. metric metric use cross-validation. One 'ks' 'r2'. NULL - 'ks' set binary response 'r2' continuous response. folds vector fold numbers sequence (optional) categories vector categories sequence (optional) use_sample whether use sampled optimization . seed random seed parallel whether run cross-validation parallel. add_full_model whether add full model (without cross-validation) results. ... Arguments passed regress_pwm, regress_pwm.sample motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities include_response include response resulting list (default: TRUE) verbose show verbose messages. consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). sample_frac fraction dataset sample. response categorical (0 1), sampling stratified category, .e. sample_frac can vector length 2 fraction 0 1 responses sample respectively. NULL - default 0.1 continuous variables, binary variables - number 0 responses equal sample_ratio times number 1 responses. sample_idxs indices sequences use. NULL, indices sampled using sample_frac. sample_ratio ratio '1' category '0' category sampled dataset. Relevant sample_frac NULL.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"list following elements: cv_models: list models, one fold. cv_pred: vector predictions sequence. score: score model cross-validated predictions. cv_scores: vector scores fold. folds: vector fold number sequence. full_model: full model (without cross-validation), add_full_model TRUE.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validate a PWM regression model — regress_pwm.cv","text":"","code":"# \\dontrun{ res <- regress_pwm.cv(     cluster_sequences_example, cluster_mat_example[, 1],     nfolds = 5, use_sample = TRUE, sample_frac = c(0.1, 1) ) #> ℹ Stratified sampling #> ℹ Response is binary: setting metric to \"ks\" #> ℹ Using sampled optimization #> ✔ Cross-validation score: 0.754182615473718 #> ℹ Performing sampled optimization #> ℹ Sampling 0.1 and 1 of the dataset #> ℹ Stratified sampling #> ℹ sampled 187 zeros and 492 ones #> ℹ Number of response variables: 1 #>  #> ── Generate candidate kmers  #>  #> ── Regress each candidate kmer on sampled data  #> ℹ Running regression on 10 candidate kmers #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> → regressing with seed: \"AAT*ATTAA\" #> → \"AAT*ATTAA\", score (r2): 0.612328728097362 #> → regressing with seed: \"TTAAT*ATT\" #> → \"TTAAT*ATT\", score (r2): 0.612328820509699 #> → regressing with seed: \"TAAT*ATTA\" #> → \"TAAT*ATTA\", score (r2): 0.605402532886838 #> → regressing with seed: \"GTTAAT*AT\" #> → \"GTTAAT*AT\", score (r2): 0.607019099675346 #> → regressing with seed: \"AT*ATTAAC\" #> → \"AT*ATTAAC\", score (r2): 0.607019051951542 #> → regressing with seed: \"AA*CATTAA\" #> → \"AA*CATTAA\", score (r2): 0.608167589362535 #> → regressing with seed: \"TTAA*CATT\" #> → \"TTAA*CATT\", score (r2): 0.606755680376933 #> → regressing with seed: \"TAATCATT\" #> → \"TAATCATT\", score (r2): 0.604883777958721 #> → regressing with seed: \"TTA*TCATT\" #> → \"TTA*TCATT\", score (r2): 0.603103522953226 #> → regressing with seed: \"AAGATAAC\" #> → \"AAGATAAC\", score (r2): 0.391166315606388 #> ℹ Best motif: \"***TTAAT*ATT***\", score (r2): 0.612328820509699 #> ✔ Finished running regression. Consensus: \"T*A\" #> ✔ KS test D: 0.818, p-value: 0 res$score #>       D^-  #> 0.7541826  res$cv_scores #> fold1.D^- fold2.D^- fold3.D^- fold4.D^- fold5.D^-  #> 0.7379679 0.8039216 0.8321388 0.7944411 0.7257756   plot(     res$cv_pred,     res$full_model$pred,     xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1 )  plot_regression_prediction_binary(res$cv_pred, cluster_mat_example[, 1])  plot_regression_prediction_binary(res$full_model$pred, cluster_mat_example[, 1])   # without sampling res <- regress_pwm.cv(     cluster_sequences_example, cluster_mat_example[, 1],     nfolds = 5, use_sample = FALSE ) #> ℹ Stratified sampling #> ℹ Response is binary: setting metric to \"ks\" #> ✔ Cross-validation score: 0.8275906741392 #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 res$score #>       D^-  #> 0.8275907  res$cv_scores #> fold1.D^- fold2.D^- fold3.D^- fold4.D^- fold5.D^-  #> 0.7956031 0.8407605 0.8765935 0.8421787 0.8330962  plot(res$cv_pred,     res$full_model$pred,     xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1 )  # }"},{"path":"/reference/regress_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a PWM regression — regress_pwm","title":"Perform a PWM regression — regress_pwm","text":"Perform PWM regression","code":""},{"path":"/reference/regress_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a PWM regression — regress_pwm","text":"","code":"regress_pwm(   sequences,   response,   motif = NULL,   motif_length = 15,   score_metric = \"r2\",   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   spat_bin = 50,   spat_model = NULL,   improve_epsilon = 0.0001,   min_nuc_prob = 0.001,   unif_prior = 0.05,   is_train = NULL,   include_response = TRUE,   seed = 60427,   verbose = FALSE,   kmer_length = 8,   multi_kmers = FALSE,   final_metric = \"r2\",   max_cands = 10,   min_gap = 0,   max_gap = 1,   min_kmer_cor = 0.1,   motif_num = 1,   smooth_k = 100,   consensus_single_thresh = 0.6,   consensus_double_thresh = 0.85,   match_with_db = FALSE,   motif_dataset = all_motif_datasets(),   parallel = getOption(\"prego.parallel\", FALSE),   ... )"},{"path":"/reference/regress_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a PWM regression — regress_pwm","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities is_train boolean vector determine subset sequences use screening include_response include response resulting list (default: TRUE) seed random seed verbose show verbose messages. kmer_length vector kmer lengths screen order find best seed motif. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. max_cands maximum number kmer candidates try. min_gap, max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). min_kmer_cor minimal correlation kmer response order use seed. motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. consensus_single_thresh, consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. parallel whether run optimization parallel. use set_parallel set number cores use. ... Arguments passed screen_kmers min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE)","code":""},{"path":"/reference/regress_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a PWM regression — regress_pwm","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample). match_with_db TRUE, following additional elements returned: motif_db: motif database similar resulting PSSM. db_match_dist: distance resulting PSSM closest match motif database (KL divergence). db_match_pssm: PSSM closest match motif database. db_match_pred: predicted PWM closest match motif database. db_match_r2: \\(r^2\\) predicted PWM closest match motif database response db_match_ks: response binary, Kolmogorov-Smirnov test results predicted PWM closest match motif database response 1 vs predictions response 0. n_motifs greater 1, following additional elements returned: models: list () inferred model multi_stats: data frame following columns: model, score (KS binary, r^2 otherwise), comb_score (score combined linear model models 1:) additional statistics per model","code":""},{"path":"/reference/regress_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a PWM regression — regress_pwm","text":"","code":"# \\dontrun{ res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 13016 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 res$pssm #>    pos            A            C            G            T #> 1    0 0.2095587850 0.1994811445 0.4830077589 0.1079523116 #> 2    1 0.1915405840 0.1868688613 0.3343640864 0.2872264385 #> 3    2 0.2101173997 0.1766019762 0.4432460964 0.1700345427 #> 4    3 0.1508440375 0.2343198955 0.0968408510 0.5179951787 #> 5    4 0.0008706285 0.2127699703 0.0008706285 0.7854887247 #> 6    5 0.0994162336 0.0010572918 0.0010095837 0.8985168934 #> 7    6 0.8009245396 0.0008999961 0.1971910000 0.0009845063 #> 8    7 0.0006821602 0.6252906919 0.0006821602 0.3733449876 #> 9    8 0.5259284377 0.0006187394 0.4273795187 0.0460732840 #> 10   9 0.8413030505 0.0011087267 0.1248238087 0.0327644646 #> 11  10 0.0484228246 0.6682083011 0.1590529233 0.1243159994 #> 12  11 0.1276983917 0.3283757865 0.0485897139 0.4953361154 #> 13  12 0.1383337379 0.2413944304 0.2644408643 0.3558309674 #> 14  13 0.1295451671 0.4627699852 0.2882918715 0.1193930283 #> 15  14 0.1975761950 0.2230612934 0.1874464601 0.3919161260 res$spat #>   bin spat_factor #> 1   0  0.06274135 #> 2  50  0.11854498 #> 3 100  0.08841380 #> 4 150  0.19018117 #> 5 200  0.24080996 #> 6 250  0.14966135 #> 7 300  0.14966135 head(res$pred) #> [1] -19.17809 -17.81525 -15.05438 -20.49352 -18.27786 -18.84269  plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # intialize with a pre-computed PSSM res1 <- regress_pwm(sequences_example, response_mat_example, motif = res$pssm) #> ℹ Number of response variables: 5 #> ℹ Initializing regression with pre-computed PSSM, consensus: \"TTACRAC\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.0105, 0.0056, 0.0363, 0.0001, and 0.01  # intialize with a pre-computed PSSM and spatial model res2 <- regress_pwm(     sequences_example,     response_mat_example,     motif = res$pssm,     spat_model = res$spat ) #> ℹ Number of response variables: 5 #> ℹ Initializing regression with pre-computed PSSM, consensus: \"TTACRAC\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.0096, 0.0052, 0.0368, 0.0003, and 0.0085  # binary response res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ✔ KS test D: 0, p-value: 1 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # match with db res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], match_with_db = TRUE) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ℹ Best match in the database: \"HOMER.Hnf1\", KL: 0.349 #> ✔ \"HOMER.Hnf1\" KS test D: 0, p-value: 1 #> ✔ KS test D: 0, p-value: 1 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # use multiple kmer seeds res_multi <- regress_pwm(     cluster_sequences_example,     cluster_mat_example[, 1],     multi_kmers = TRUE,     kmer_length = 6:8,     final_metric = \"ks\" ) #> ℹ Number of response variables: 1 #>  #> ── Generate candidate kmers  #>  #> ── Regress each candidate kmer on sampled data  #> ℹ Running regression on 3 candidate kmers #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ℹ Best motif: \"****AAT*ATT****\", score (ks): 1.28369537222284e-16 plot_regression_qc(res_multi) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # Screen for multiple motifs res_multi <- regress_pwm(     cluster_sequences_example,     cluster_mat_example[, 1],     motif_num = 3,     match_with_db = TRUE ) #> ℹ Running regression for 3 motifs #>  #> ── Running first regression ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 1032 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTAAT*ATT***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*AM**W*T\" #> ℹ Best match in the database: \"HOMER.Hnf1\", KL: 0.349 #> ✔ \"HOMER.Hnf1\" KS test D: 0, p-value: 1 #> ✔ KS test D: 0, p-value: 1 #>  #> ── Running regression #2 ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2893 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATGC*TA***\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTAATGC*TA*T\" #> ℹ Best match in the database: \"JASPAR.PITX3\", KL: 0.488 #> ✔ R^2: 0.0109 #> ℹ KS statistic: 0.431459321288446 #> ℹ KS test statistic for models 1 and 2: 0.854946416362932 #> ℹ Improvement in KS test statistic: 0.854946416362932 #>  #> ── Running regression #3 ── #>  #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ Gaps of length 0:1 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 3097 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***GTTAATTG****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T**T*AATTGY**Y\" #> ℹ Best match in the database: \"JASPAR.Hox1\", KL: 0.436 #> ✔ R^2: 0.0308 #> ℹ KS statistic: 0.148223749243384 #> ℹ KS test statistic for models 1, 2, and 3: 0.869340622972379 #> ℹ Improvement in KS test statistic: 0.0143942066094469 #> ✔ Best model: model #2 (score of 0.431459321288446) res_multi$multi_stats #>   model        score   comb_score       diff      consensus      seed_motif #> 1     1 1.283695e-16 1.283695e-16         NA      T*AM**W*T ***TTAAT*ATT*** #> 2     2 4.314593e-01 8.549464e-01 0.85494642   TTAATGC*TA*T ***TAATGC*TA*** #> 3     3 1.482237e-01 8.693406e-01 0.01439421 T**T*AATTGY**Y ***GTTAATTG**** #>       db_match db_match_dist db_match_r2  db_match_ks #> 1   HOMER.Hnf1     0.3492750 0.534278171 1.283695e-16 #> 2 JASPAR.PITX3     0.4875679 0.003846283         NULL #> 3  JASPAR.Hox1     0.4363963 0.006370096         NULL plot_regression_qc_multi(res_multi) #> Error in eval(parse(text = text, keep.source = FALSE), envir): object 'response' not found # }"},{"path":"/reference/regress_pwm.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on a sample of the data — regress_pwm.sample","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"optimization performed sampled dataset size sample_frac, explicit sampled indices sample_idxs. Note multi_kmers TRUE default.","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"regress_pwm.sample(   sequences,   response,   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   include_response = TRUE,   motif_num = 1,   multi_kmers = TRUE,   sample_frac = NULL,   sample_idxs = NULL,   sample_ratio = 1,   parallel = getOption(\"prego.parallel\", TRUE),   match_with_db = FALSE,   motif_dataset = all_motif_datasets(),   seed = 60427,   ... )"},{"path":"/reference/regress_pwm.sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. include_response include response resulting list (default: TRUE) motif_num Number motifs infer. motif_num > 1, function run motif_num times, time residuals linear model previous runs (see smooth_k parameter). best motif returned, others stored 'models' return value. multi_kmers TRUE, different candidates kmers regressed order find best seed according final_metric. sample_frac fraction dataset sample. response categorical (0 1), sampling stratified category, .e. sample_frac can vector length 2 fraction 0 1 responses sample respectively. NULL - default 0.1 continuous variables, binary variables - number 0 responses equal sample_ratio times number 1 responses. sample_idxs indices sequences use. NULL, indices sampled using sample_frac. sample_ratio ratio '1' category '0' category sampled dataset. Relevant sample_frac NULL. parallel whether run optimization parallel. use set_parallel set number cores use. match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. seed random seed ... Arguments passed regress_pwm, screen_kmers motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities verbose show verbose messages. consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. kmer_length vector kmer lengths screen order find best seed motif. max_cands maximum number kmer candidates try. smooth_k k smoothing predictions model order compute residuals motif_num > 1. residuals computed response - running mean size 'k' current model. min_kmer_cor minimal correlation kmer response order use seed. is_train boolean vector determine subset sequences use screening min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE)","code":""},{"path":"/reference/regress_pwm.sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample). match_with_db TRUE, following additional elements returned: motif_db: motif database similar resulting PSSM. db_match_dist: distance resulting PSSM closest match motif database (KL divergence). db_match_pssm: PSSM closest match motif database. db_match_pred: predicted PWM closest match motif database. db_match_r2: \\(r^2\\) predicted PWM closest match motif database response db_match_ks: response binary, Kolmogorov-Smirnov test results predicted PWM closest match motif database response 1 vs predictions response 0. n_motifs greater 1, following additional elements returned: models: list () inferred model multi_stats: data frame following columns: model, score (KS binary, r^2 otherwise), comb_score (score combined linear model models 1:) additional statistics per model","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"# \\dontrun{ res <- regress_pwm.sample(cluster_sequences_example, cluster_mat_example[, 1], final_metric = \"ks\") #> ℹ Performing sampled optimization #> ℹ Sampling 0.26 and 1 of the dataset #> ℹ Stratified sampling #> ℹ sampled 492 zeros and 492 ones #> ℹ Number of response variables: 1 #>  #> ── Generate candidate kmers  #>  #> ── Regress each candidate kmer on sampled data  #> ℹ Running regression on 10 candidate kmers #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ℹ Best motif: \"***TTAAT*ATT***\", score (ks): 0 #> ✔ Finished running regression. Consensus: \"T*A***W*Y\" #> ✔ KS test D: 0.8304, p-value: 0 res$pssm #>    pos            A            C           G            T #> 1    0 0.2402922064 0.2500961125 0.259515584 0.2500961125 #> 2    1 0.2530864179 0.1913580298 0.308641970 0.2469135672 #> 3    2 0.1690099835 0.1105550602 0.471843839 0.2485911101 #> 4    3 0.0009894603 0.1816545576 0.126749054 0.6906068921 #> 5    4 0.1761127114 0.1751158535 0.138854712 0.5099167228 #> 6    5 0.7308233976 0.0009479211 0.267280728 0.0009479211 #> 7    6 0.5012309551 0.2760852873 0.221687049 0.0009966502 #> 8    7 0.2404970825 0.2427190989 0.001026567 0.5157573223 #> 9    8 0.2376876920 0.2654407322 0.311769426 0.1851021200 #> 10   9 0.4765119553 0.1174059808 0.001181951 0.4049001336 #> 11  10 0.2486172915 0.0010699143 0.338186800 0.4121259749 #> 12  11 0.0721576661 0.3273515701 0.030835347 0.5696554780 #> 13  12 0.2476238161 0.2375207543 0.277334690 0.2375207543 #> 14  13 0.2525723279 0.2620850503 0.242671326 0.2426713258 #> 15  14 0.1979949921 0.3007518649 0.250626564 0.2506265640 res$spat #>   bin spat_factor #> 1   0  0.05284883 #> 2  50  0.17382087 #> 3 100  0.18586652 #> 4 150  0.18550760 #> 5 200  0.14177324 #> 6 250  0.08637417 #> 7 300  0.17382087 head(res$pred) #> [1] -16.42368 -16.47425 -16.82116 -15.54666 -15.50204 -14.91545  plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.  # }"},{"path":"/reference/screen_kmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for kmers — screen_kmers","title":"Screen for kmers — screen_kmers","text":"Screen kmers","code":""},{"path":"/reference/screen_kmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for kmers — screen_kmers","text":"","code":"screen_kmers(   sequences,   response,   kmer_length = 6,   min_cor = 0.08,   min_n = 50,   is_train = NULL,   min_gap = 0,   max_gap = 0,   from_range = 0,   to_range = NULL,   return_mat = FALSE,   seed = 60427,   verbose = FALSE )"},{"path":"/reference/screen_kmers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for kmers — screen_kmers","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences kmer_length number non-gap characters motifs screened min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported is_train boolean vector determine subset sequences use screening min_gap, max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple testing severely). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE) seed random seed verbose show verbose messages","code":""},{"path":"/reference/screen_kmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for kmers — screen_kmers","text":"data frame following columns, together column response variable correlation kmers response variable: kmer: kmer pattern, \"*\" indicates wildcard, max_r2: maximum R^2 one response variables, avg_n: average number times kmer appears sequences, avg_var: variance number times kmer appears sequences, return_mat TRUE, matrix correlations response variables (rows kmers) returned instead data frame. kmer found, empty data frame returned.","code":""},{"path":"/reference/screen_kmers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for kmers — screen_kmers","text":"","code":"kmers <- screen_kmers(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>     kmer     max_r2 avg_n    avg_var          c1          c2         c3 #> 1 AGATAA 0.04998882 0.140 0.15240000 -0.01025383 -0.03046725 -0.2235818 #> 2 TTATCT 0.02975253 0.128 0.13761599  0.03136108  0.04927359 -0.1724892 #> 3 CTTATC 0.02680831 0.080 0.07960001  0.02861430  0.01967959 -0.1637324 #> 4 GGGGAG 0.02300140 0.243 0.28195098  0.04611732  0.02960520  0.1516621 #> 5 GGGCGG 0.02280306 0.062 0.06015600  0.06576437  0.02662074  0.1510068 #> 6 TAACTG 0.02215597 0.071 0.06995900 -0.01145993 -0.02249238 -0.1488488 #>             c4          c5 #> 1  0.004382457 -0.03498838 #> 2  0.035843253  0.02917432 #> 3  0.059437271  0.03772539 #> 4  0.044013925  0.03089626 #> 5  0.104473867  0.12732512 #> 6 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, return_mat = TRUE) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>                 c1          c2         c3           c4          c5 #> AGATAA -0.01025383 -0.03046725 -0.2235818  0.004382457 -0.03498838 #> TTATCT  0.03136108  0.04927359 -0.1724892  0.035843253  0.02917432 #> CTTATC  0.02861430  0.01967959 -0.1637324  0.059437271  0.03772539 #> GGGGAG  0.04611732  0.02960520  0.1516621  0.044013925  0.03089626 #> GGGCGG  0.06576437  0.02662074  0.1510068  0.104473867  0.12732512 #> TAACTG -0.01145993 -0.02249238 -0.1488488 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, max_gap = 3) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ Gaps of length 0:3 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 4884 kmers in 1000 sequences. head(kmers) #>       kmer     max_r2 avg_n    avg_var           c1           c2         c3 #> 1   AGATAA 0.05012437 0.139 0.15167901 -0.011159671 -0.033565160 -0.2238847 #> 2  AGA*AAG 0.03404951 0.220 0.23760001  0.062884174  0.063842162 -0.1845251 #> 3   TTATCT 0.02915060 0.127 0.13487099  0.036021627  0.051995803 -0.1707355 #> 4 ACAT**CT 0.02848161 0.090 0.09190000 -0.002383306 -0.023468828 -0.1687650 #> 5  AG*TAAG 0.02829135 0.118 0.12007600  0.034630746 -0.005794165 -0.1682003 #> 6   CTTATC 0.02680831 0.080 0.07960001  0.028614303  0.019679585 -0.1637324 #>            c4          c5 #> 1 0.001539792 -0.03616555 #> 2 0.025056362  0.02373981 #> 3 0.032191906  0.02568413 #> 4 0.019714575 -0.02059141 #> 5 0.046150818  0.02593128 #> 6 0.059437271  0.03772539"},{"path":"/reference/screen_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for motifs in a database for every cluster — screen_pwm.clusters","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"Screen motifs database every cluster","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"","code":"screen_pwm.clusters(   sequences,   clusters,   dataset = all_motif_datasets(),   motifs = NULL,   parallel = getOption(\"prego.parallel\", TRUE),   min_D = 0.4,   only_match = FALSE,   prior = 0.01,   ... )"},{"path":"/reference/screen_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"sequences vector sequences clusters vector cluster assignments dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). motifs names specific motifs extract dataset parallel logical, whether use parallel processing min_D minimum distance consider match only_match TRUE, return best match cluster prior prior probability nucleotide. ... Arguments passed compute_pwm pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence.","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"matrix KS D statistics cluster (columns) every motif (rows) least one cluster D >= min_D. only_match TRUE, named vector name best motif match cluster returned (regardless min_D).","code":""},{"path":"/reference/screen_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for motifs in a database for every cluster — screen_pwm.clusters","text":"","code":"# \\dontrun{ D_mat <- screen_pwm.clusters(cluster_sequences_example, clusters_example) dim(D_mat) #> [1] 140   5 D_mat[1:5, 1:5] #>                 #> motif                  c111         c100          c29          c6           c5 #>   HOMER.Cdx2    0.751241616 1.681701e-03 0.0783135416 0.007102542 0.0015321757 #>   HOMER.EGL_5   0.495133438 8.740108e-02 0.1021322412 0.001941748 0.0009615899 #>   HOMER.ELT_3   0.004802341 5.136107e-04 0.0035294220 0.441225281 0.4028870622 #>   HOMER.GATA3_2 0.002747253 1.216475e-16 0.0005356186 0.555666238 0.5197909211 #>   HOMER.Gata1   0.004188668 1.216475e-16 0.0017168102 0.564832677 0.5661433750  # return only the best match screen_pwm.clusters(cluster_sequences_example, clusters_example, only_match = TRUE) #>                  c111                  c100                   c29  #> \"JOLMA.CDX1_mono_DBD\"         \"HOMER.HOXA2\"        \"JASPAR.HNF1A\"  #>                    c6                    c5  #>        \"JASPAR.GATA5\"         \"HOMER.Gata2\"  # }"},{"path":"/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parallel threads — set_parallel","title":"Set parallel threads — set_parallel","text":"Set number parallel threads use. prego uses R function doMC::registerDoMC register parallelization. default, prego uses 80% number available cores. options saved 'prego.parallel' (use parallelization, logical) 'prego.parallel.nc' (number cores use, integer).","code":""},{"path":"/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parallel threads — set_parallel","text":"","code":"set_parallel(thread_num = max(1, round(parallel::detectCores() * 0.8)))"},{"path":"/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parallel threads — set_parallel","text":"thread_num number threads. use '1' non parallel behavior","code":""},{"path":"/reference/set_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parallel threads — set_parallel","text":"None","code":""},{"path":"/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parallel threads — set_parallel","text":"","code":"# \\donttest{ set_parallel(8) #> ℹ Parallelization enabled. Using 8 threads. # }"},{"path":"/news/index.html","id":"prego-0009000","dir":"Changelog","previous_headings":"","what":"prego 0.0.0.9000","title":"prego 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
