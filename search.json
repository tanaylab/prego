[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Weizmann Institute Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer. Amos Tanay. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz , Tanay (2022). prego: PWM Regression Optimizer. R package version 0.0.0.9000.","code":"@Manual{,   title = {prego: PWM Regression Optimizer},   author = {Aviezer Lifshitz and Amos Tanay},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"prego","dir":"","previous_headings":"","what":"PWM Regression Optimizer","title":"PWM Regression Optimizer","text":"prego package implements simple regression algorithms finding motifs DNA. can either use find motif discriminating two clusters DNA sequences, generting motifs one continuous variables. PREGO algorithm described .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PWM Regression Optimizer","text":"can install development version prego like :","code":"remotes::install_github(\"tanaylab/prego\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PWM Regression Optimizer","text":"set continuous variables:  binary response:  clusters sequences:","code":"library(prego) res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases res$stats #> # A tibble: 5 x 7 #>   cluster consensus      ks_D        r2      seed_motif              db_match db_match_dist #> 1    c100   AT***TC 0.7024075 0.3852463 ***ATCCATCA**** JASPAR.MEIS1.MA1639.1      0.244724 #> 2    c111   Y*RTAAA 0.8479663 0.4978355 ***CAATTAAC****   JOLMA.CDX1_mono_DBD      0.152716 #> 3     c29 T*A***W*T 0.8507039 0.5581745 ***TAATCATT****            HOMER.Hnf1      0.340463 #> 4      c5      GATA 0.5887910 0.2227806 ***CTGATAAG****      JASPAR.GATA1/2/3      0.198050 #> 5      c6      TATC 0.6160721 0.2783910 ***TCTTATCT****          JASPAR.GATAd      0.219126"},{"path":"/reference/all_motif_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame contain PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name. Individual datasets available within package HOMER_motifs, JASPAR_motifs, JOLMA_motifs.","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets()"},{"path":"/reference/all_motif_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"data frame concatenates motifs \"HOMER\", \"JASPAR\" \"JOLMA\". Motif names prefixed dataset name, e.g. \"JASPAR.GATA4\".","code":""},{"path":"/reference/all_motif_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"HOMER:  Heinz S, Benner C, Spann N, Bertolino E et al. Simple Combinations Lineage-Determining Transcription Factors Prime cis-Regulatory Elements Required Macrophage B Cell Identities. Mol Cell 2010 May 28;38(4):576-589. PMID: 20513432 JASPAR: Castro-Mondragon JA, Riudavets-Puig R, Rauluseviciute , Berhanu Lemma R, Turchi L, Blanc-Mathieu R, Lucas J, Boddie P, Khan , Manosalva Pérez N, Fornes O, Leung TY, Aguirre , Hammal F, Schmelter D, Baranasic D, Ballester B, Sandelin , Lenhard B, Vandepoele K, Wasserman WW, Parcy F, Mathelier JASPAR 2022: 9th release open-access database transcription factor binding profiles Nucleic Acids Res. 2022 Jan 7;50(D1):D165-D173.; doi: 10.1093/nar/gkab1113 JOLMA: Jolma, ., Yin, Y., Nitta, K. et al. DNA-dependent formation transcription factor pairs alters binding specificity. Nature 534, S15–S16 (2016). https://doi.org/10.1038/nature18912","code":""},{"path":"/reference/all_motif_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a data frame of all the motif datasets bundled with prego — all_motif_datasets","text":"","code":"all_motif_datasets() #> # A tibble: 38,758 x 8 #>        motif pos     A     C     G     T dataset motif_orig #> 1 HOMER.AP_1   0 0.419 0.275 0.277 0.028   HOMER       AP_1 #> 2 HOMER.AP_1   1 0.001 0.001 0.001 0.997   HOMER       AP_1 #> 3 HOMER.AP_1   2 0.010 0.002 0.965 0.023   HOMER       AP_1 #> 4 HOMER.AP_1   3 0.984 0.003 0.001 0.012   HOMER       AP_1 #> 5 HOMER.AP_1   4 0.062 0.579 0.305 0.054   HOMER       AP_1 #> 6 HOMER.AP_1   5 0.026 0.001 0.001 0.972   HOMER       AP_1 #> # ... with 38,752 more rows"},{"path":"/reference/compute_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"Compute PWMs set sequences given PSSM matrix","code":""},{"path":"/reference/compute_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"compute_pwm(   sequences,   pssm,   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE )"},{"path":"/reference/compute_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"sequences vector sequences pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well.","code":""},{"path":"/reference/compute_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"vector predicted pwm sequence.","code":""},{"path":"/reference/compute_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PWMs for a set of sequences given a PSSM matrix — compute_pwm","text":"","code":"res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0  pwm <- compute_pwm(cluster_sequences_example, res$pssm, res$spat) head(pwm) #> [1] -16.43380 -16.51139 -16.80705 -15.20886 -15.35405 -14.44998  # this is similar to the prediction in the regression head(res$pred) #> [1] -16.43380 -16.51139 -16.80705 -15.20886 -15.35405 -14.44998"},{"path":"/reference/consensus_from_pssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert PSSM to consensus sequence — consensus_from_pssm","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"Convert PSSM consensus sequence","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"consensus_from_pssm(pssm, single_thresh = 0.6, double_thresh = 0.85)"},{"path":"/reference/consensus_from_pssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"pssm PSSM matrix single_thresh, double_thresh thresholds consensus sequence calculation (single double nucleotides)","code":""},{"path":"/reference/consensus_from_pssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"consensus sequence PSSM. consensus sequence can found, function returns NA.","code":""},{"path":"/reference/consensus_from_pssm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert PSSM to consensus sequence — consensus_from_pssm","text":"","code":"res <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 consensus_from_pssm(res$pssm) #> [1] \"T*A***W*T\""},{"path":"/reference/extract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of sequences from a motif database — extract_pwm","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"Extracts pwm motif motif database. Note large number motifs, function can slow consume lot memory.","code":""},{"path":"/reference/extract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"extract_pwm(   sequences,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/extract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"sequences vector sequences motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. parallel logical, whether use parallel processing","code":""},{"path":"/reference/extract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"matrix size # sequences x # motifs pwm sequence motif","code":""},{"path":"/reference/extract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of sequences from a motif database — extract_pwm","text":"","code":"pwms <- extract_pwm(cluster_sequences_example, motifs = c(\"JASPAR.CDX1\", \"HOMER.Hnf1\", \"HOMER.GATA3_2\")) head(pwms) #>    motif #>     HOMER.GATA3_2 HOMER.Hnf1 JASPAR.CDX1 #>   1     -6.731433 -12.719121   -8.140721 #>   2     -5.273907 -12.997530  -12.325053 #>   3     -7.085959 -14.832400   -4.029678 #>   4     -2.871881 -10.334058   -5.989816 #>   5     -5.089060  -9.383463  -12.949087 #>   6     -3.387886  -7.175642  -12.434833  # all motifs all_pwms <- extract_pwm(cluster_sequences_example) dim(all_pwms) #> [1] 2359 3110 all_pwms[1:5, 1:5] #>    motif #>     HOMER.AARE HOMER.ABF1 HOMER.AMYB HOMER.AP_1 HOMER.AP_2alpha #>   1 -12.519177  -14.11495 -12.283872 -13.903040       -13.42671 #>   2  -9.653387  -15.82178 -11.785979  -9.727357       -15.27563 #>   3 -16.116516  -15.28141 -12.278079  -7.671080       -10.10792 #>   4 -16.580219  -15.59875  -9.985226  -9.701889       -17.18512 #>   5 -17.739439  -14.34851  -7.681047  -8.082305       -14.74181  # for a specific dataset pwms_jaspar <- extract_pwm(cluster_sequences_example, dataset = JASPAR_motifs) head(pwms_jaspar) #>    motif #>     ABF1.MA0265.2 ABF1.MA0570.2 ABF2.MA0266.1 ABF2.MA0941.1       ABF3 #>   1     -29.04506     -10.31461 -3.402824e+36     -11.49264  -5.880356 #>    motif #>           ABF4       ABI3          ABI5      ABR1      ACE2      ADR1      AFT1 #>   1  -9.165222  -7.783450 -6.089010e+00 -21.22180 -5.744257 -3.038385 -26.68394 #>    motif #>              AFT2        AG      AGL1         AGL13     AGL15     AGL16 #>   1 -3.402824e+36 -19.61325 -17.95805 -3.402824e+36 -23.00781 -17.52060 #>    motif #>             AGL27      AGL3         AGL42         AGL55      AGL6     AGL63 #>   1 -1.725853e+01 -16.45312 -3.191847e+00 -3.113515e+00 -25.25724 -17.57674 #>    motif #>         AHL12     AHL20     AHL25        AIB      AIL6       AIL7      ALX3 #>   1 -7.564732 -6.831953 -7.628181  -2.158895 -16.95098 -10.595651 -8.283644 #>    motif #>          ANL2           ANT       AP1       AP3       AP4 ARALYDRAFT_484486 #>   1 -10.33757 -3.402824e+36  -9.85716 -15.66602 -21.61811        -11.486125 #>    motif #>     ARALYDRAFT_493022 ARALYDRAFT_495258 ARALYDRAFT_496250 ARALYDRAFT_897773 #>   1        -10.880958        -11.486125         -12.02586        -11.003409 #>    motif #>           ARF1     ARF10     ARF13     ARF14     ARF16     ARF18       ARF2 #>   1  -8.601461 -17.79847 -15.77630 -16.56264 -13.52494 -14.84925  -8.028713 #>    motif #>         ARF25      ARF27     ARF29       ARF3      ARF34     ARF35     ARF36 #>   1 -16.17080 -11.681042 -16.19467  -6.771438 -12.531515 -15.04944 -12.31320 #>    motif #>         ARF39      ARF4      ARF5      ARF7      ARF8     ARG80      ARG81 #>   1 -11.69969 -11.69183 -7.393572 -15.47294 -7.024676 -1.073058 -13.522358 #>    motif #>          ARGFX     ARNT2 ARNT::HIF1A     ARO80 ARR1.MA0274.1 ARR1.MA0945.1 #>   1 -12.986558 -10.52439   -4.559170 -26.94863     -6.229057     -8.933300 #>    motif #>             ARR10      ARR11      ARR14     ARR18          ARR2 ASCL1.MA1100.2 #>   1 -3.402824e+36  -9.021827  -8.489884 -13.71612 -3.402824e+36      -6.882009 #>    motif #>     ASCL1.MA1631.1          ASG1       ASH1     ASIL2      ASR1      ASR3 #>   1      -13.30677 -3.402824e+36  -8.627447 -15.63588 -19.05806 -14.89348 #>    motif #>     AT1G14600     AT1G19000     AT1G19040 AT1G72740     AT1G74840 AT1G76870 #>   1 -9.269254 -2.291683e+01 -3.402824e+36 -24.41679 -1.723965e+01 -16.15354 #>    motif #>     AT2G38090  AT2G38300 AT2G40260 AT3G10030 AT3G10580     AT3G46070 #>   1 -30.75865 -12.415892 -20.08206 -14.65113 -19.11917 -3.402824e+36 #>    motif #>         AT4G12670  AT5G04390  AT5G04760     AT5G05090 AT5G05550 AT5G05790 #>   1 -3.402824e+36 -10.033071 -12.918605 -3.402824e+36 -15.63147 -17.58115 #>    motif #>      AT5G47660 AT5G56840     AT5G61620      ATF2          ATF3      ATF4 #>   1 -12.027613 -18.93031 -2.201099e+01 -13.18132 -2.164664e+01 -18.14267 #>    motif #>          ATF6      ATF7   ATHB-12       ATHB-13       ATHB-15       ATHB-16 #>   1 -18.91326 -21.96955 -5.553326 -3.402824e+36 -3.402824e+36 -3.402824e+36 #>    motif #>           ATHB-20       ATHB-23     ATHB-4       ATHB-40     ATHB-5    ATHB-51 #>   1 -3.402824e+36 -3.402824e+36 -10.944655 -3.402824e+36 -13.524142  -9.803304 #>    motif #>           ATHB-53    ATHB-6     ATHB-7        ATHB-9        ATHB-X   ATMYB31 #>   1 -3.402824e+36 -6.590954 -13.086040 -3.402824e+36 -3.402824e+36 -23.21949 #>    motif #>          ATOH7      AZF1     Abd-B Ahr::Arnt      Alx1      Alx4          Antp #>   1  -8.037208 -5.773059 -2.226629 -7.950042 -21.82410 -21.95743 -3.402824e+36 #>    motif #>            Ar     Arid3a     Arid3b    Arid5a          Arnt      Arntl #>   1 -28.51409 -0.6515024 -11.669604 -16.71603 -3.402824e+36  -7.684112 #>    motif #>           Arx      Ascl2 At3g11280      Atbf       Atf1       Atf3 #>   1 -26.11889  -8.834449 -17.00231 -22.05223  -6.379218 -12.618895 #>    motif #>     Atoh1.MA0461.2 Atoh1.MA1467.2     Atoh7       Awh       B-H1          B-H2 #>   1      -8.583235      -8.882668 -22.75069 -4.046379 -5.6678314 -4.213586e+00 #>    motif #>          BACH1 BACH2.MA1101.2 BACH2.MA1470.1      BAM8    BARHL1    BARHL2 #>   1 -11.359441      -32.72960  -3.402824e+36 -16.91767 -6.371863 -8.372197 #>    motif #>         BARX1      BARX2      BAS1       BATF      BATF3  BATF::JUN      BCL6 #>   1 -4.227399 -13.122693 -28.84574 -12.920650 -13.238192 -13.063475 -20.43429 #>    motif #>             BCL6B   BEAF-32      BEE2          BEH2          BEH3          BEH4 #>   1 -3.402824e+36 -15.88509 -6.490918 -3.402824e+36 -1.556012e+01 -3.402824e+36 #>    motif #>       BHLH104       BHLH112   BHLH122     BHLH13     BHLH3        BHLH34 #>   1 -10.52269 -3.402824e+36 -19.89342  -3.667753 -3.628781 -4.516783e+00 #>    motif #>            BHLH49        BHLH72        BHLH74     BHLH78    BHLHA15 #>   1 -3.402824e+36 -1.862228e+01 -1.471023e+01  -4.115019  -9.627863 #>    motif #>     BHLHE22.MA0818.2 BHLHE22.MA1635.1   BHLHE23    BHLHE40   BHLHE41      BIM1 #>   1        -10.24938       -15.765808 -16.34010  -9.578566 -15.23698 -13.78925 #>    motif #>          BIM2       BIM3       BNC2      BPC1          BPC5      BPC6 #>   1 -17.22584  -6.652287 -14.188409 -42.36580 -3.402824e+36 -46.69246 #>    motif #>               BPE      BRN2       BSX    BZIP11        BZIP16     BZIP18 #>   1 -1.366407e+01 -17.59022 -4.376565 -18.67068 -1.640068e+01 -12.502490 #>    motif #>             BZIP2        BZIP28     BZIP3    BZIP30        BZIP42        BZIP43 #>   1 -1.747504e+01 -1.337684e+01 -16.84238 -8.501899 -3.402824e+36 -3.402824e+36 #>    motif #>            BZIP44    BZIP48        BZIP52    BZIP53    BZIP60        BZIP63 #>   1 -1.749575e+01 -17.40641 -1.833507e+01 -18.41099 -5.462143 -9.645506e+00 #>    motif #>        BZIP68        BZIP69          BZR1          BZR2 Bach1::Mafk    Bcl11B #>   1 -14.72925 -3.402824e+36 -3.077620e+01 -3.402824e+36   -23.86364 -14.50937 #>    motif #>          Bgb::run    Bhlha15 Brachyury       Bsx       C15      CAD1 #>   1 -3.402824e+36 -14.038680 -26.21668 -21.90835 -3.873323 -19.35765 #>    motif #>            CAMTA1     CAMTA2     CAMTA3          CAT8      CBF1       CCA1 #>   1 -1.518161e+01  -6.776046  -6.345574 -2.337177e+00 -15.74668 -11.834469 #>    motif #>           CDC5      CDF2       CDF3      CDF5       CDX1       CDX2 #>   1 -11.356796 -6.115183  -8.103854 -38.95544  -8.140721 -10.460379 #>    motif #>              CDX4     CEBPA     CEBPB     CEBPD     CEBPE CEBPG.MA0838.1 #>   1 -1.147774e+01 -14.82595 -18.42045 -14.12146 -16.40906     -11.614287 #>    motif #>     CEBPG.MA1636.1          CEP3       CG11085       CG11294       CG11617 #>   1      -17.87008 -9.816674e+00 -3.402824e+36 -3.402824e+36 -3.402824e+36 #>    motif #>     CG15696-RA   CG18599   CG32105       CG32532      CG34031 CG4328-RA #>   1  -4.401922 -6.884039 -4.271791 -5.717603e+00 -4.538068771 -3.854453 #>    motif #>        CG9876          CHA4      CIN5      CLOCK     CREB1     CREB3   CREB3L1 #>   1 -6.001515 -3.285074e+00 -16.73804  -6.934048 -11.27508 -13.80243 -16.44603 #>    motif #>     CREB3L4.MA1474.1 CREB3L4.MA1475.1      CREM          CRF2       CRF4 #>   1        -8.985413        -12.16127 -16.93057 -3.678745e+00  -9.885069 #>    motif #>          CRZ1          CST6 CTCF.MA0139.1 CTCF.MA0531.1 CTCF.MA1929.1 #>   1 -5.698931 -8.342805e+00     -21.46387     -13.44263     -42.03094 #>    motif #>     CTCF.MA1930.1      CTCFL          CUP2      CUP9       CUX1       CUX2 #>   1     -47.77535 -11.771942 -3.402824e+36 -7.204524 -12.336679 -13.306656 #>    motif #>         Cebpg        Cf2     Clamp     Creb1   Creb3l2     Creb5        Crx #>   1 -21.52028  -9.075593 -11.36401 -29.85871  -3.49329 -21.32012 -10.304745 #>    motif #>                 D         DAL80         DAL81         DAL82       DBP #>   1 -1.140416e+01 -3.402824e+36 -3.402824e+36 -7.902308e+00 -18.59636 #>    motif #>             DEAR3       DF1          DIV1      DLX1      DLX6         DMRT3 #>   1 -2.526572e+01 -15.59365 -2.368146e+01 -4.565915 -5.119065 -3.402824e+36 #>    motif #>        DMRTA1     DMRTA2     DMRTC2    DOF1.5     DOF1.6    DOF1.7    DOF1.8 #>   1 -15.37922 -13.133039 -16.796289 -25.40978  -8.779823 -28.12937 -7.010240 #>    motif #>            DOF2.2    DOF2.4    DOF2.5        DOF3.2    DOF3.4        DOF3.5 #>   1 -5.624985e+00 -3.002327 -4.101783 -2.238237e+01 -19.88997 -5.995808e+00 #>    motif #>        DOF3.6        DOF4.2        DOF4.3    DOF4.5    DOF5.1    DOF5.3 #>   1 -27.59700 -2.586433e+01 -2.864450e+01 -13.57223 -19.92141 -3.008140 #>    motif #>        DOF5.4    DOF5.6    DOF5.7    DOF5.8      DOT6     DPBF3       DPRX #>   1 -10.14690 -4.177178 -3.299456 -40.10612 -20.91099 -16.73389  -9.634436 #>    motif #>         DREB1A    DREB1B    DREB1C        DREB1D     DREB1E     DREB1F #>   1 -11.987836 -15.03252 -16.51859 -3.402824e+36  -6.704600  -7.684851 #>    motif #>            DREB1G        DREB2A    DREB2C    DREB2D        DREB2E    DREB2F #>   1 -3.402824e+36 -2.506250e+01 -8.219305 -17.09799 -2.026705e+01 -14.39395 #>    motif #>        DREB2G      DRGX          DUX4      DUXA          DYT1       Dbx #>   1 -12.68999 -5.622660 -3.402824e+36 -28.53186 -3.402824e+36 -3.609926 #>    motif #>     Ddit3::Cebpa         Deaf1           Dfd       Dll     Dlx-b     Dlx-c #>   1   -12.849012 -1.687400e+00 -4.392498e+00 -3.619423 -25.99552 -25.79400 #>    motif #>           Dlx2      Dlx3      Dlx4       Dlx5     Dmbx1     Dmrt1       Dof2 #>   1 -11.758616 -4.905039 -4.868150 -12.119514 -18.64809 -12.72111 -1.0651644 #>    motif #>              Dof3            Dr          Dref       Dux      E2F1      E2F2 #>   1 -2.100061e+00 -3.402824e+36 -3.402824e+36 -23.08504 -15.52620 -19.53471 #>    motif #>          E2F3      E2F4      E2F6          E2F7      E2F8       E2FA #>   1 -33.74160 -19.89177 -12.52075 -3.402824e+36 -12.50799  -9.621612 #>    motif #>              E2FC      E2FD      E2FE        E5      EBF1      EBF3 #>   1 -3.402824e+36 -34.93313 -34.93313 -4.141211 -15.09973 -12.95569 #>    motif #>             ECM22     ECM23          EDS1           EFM      EGR1      EGR2 #>   1 -5.351554e+00 -10.70852 -7.880343e+00 -3.402824e+36 -13.30601 -12.64190 #>    motif #>          EGR3      EGR4       EHF          EIL3       EIL4      ELF1      ELF2 #>   1 -17.12849 -15.84402 -14.65800 -3.402824e+36 -11.470757 -13.06337 -12.94918 #>    motif #>          ELF3      ELF4      ELK1   ELK1::HOXA1 ELK1::HOXB13 ELK1::SREBF2 #>   1 -13.99586 -15.07129 -10.63201 -1.640051e+01    -20.92106    -21.41805 #>    motif #>          ELK3          ELK4       EMX1       EMX2       EN1       EN2     EOMES #>   1 -14.33972 -1.321619e+01  -6.124336 -10.085550 -4.514054 -4.871418 -16.40484 #>    motif #>            ERF    ERF003    ERF008    ERF010    ERF011        ERF012    ERF013 #>   1  -7.341054 -19.33942 -4.223565 -13.73999 -16.92614 -2.599885e+01 -25.06241 #>    motif #>        ERF014    ERF015        ERF017     ERF018        ERF019    ERF021 #>   1 -18.29206 -13.90514 -1.647714e+01  -7.415724 -2.007680e+01 -16.18519 #>    motif #>     ERF023.MA1259.1 ERF023.MA2012.1        ERF025    ERF027        ERF034 #>   1   -2.214546e+01      -13.744694 -2.414639e+01 -17.29766 -2.499853e+01 #>    motif #>            ERF035    ERF036        ERF037    ERF038    ERF039        ERF043 #>   1 -3.402824e+36 -18.38988 -3.402824e+36 -15.74094 -10.96749 -3.402824e+36 #>    motif #>        ERF054        ERF055    ERF057    ERF069    ERF073    ERF086    ERF087 #>   1 -24.39294 -1.627517e+01 -16.91907 -5.982998 -25.22615 -16.44151 -16.44154 #>    motif #>            ERF091        ERF094    ERF095    ERF096     ERF10    ERF104 #>   1 -2.055983e+01 -3.529487e+00 -16.67312 -6.360668 -25.34180 -23.05714 #>    motif #>        ERF105     ERF109     ERF11     ERF112    ERF115     ERF118    ERF122 #>   1 -16.87026  -3.985015 -10.15127  -9.279914 -14.95257  -9.647732 -15.25696 #>    motif #>          ERF13     ERF15     ERF1B      ERF2       ERF3       ERF4      ERF5 #>   1  -4.306438 -13.70873 -4.039907 -24.28583  -9.436251 -12.396777 -16.25406 #>    motif #>              ERF6      ERF7      ERF8      ERF9 ERF::FIGLA ERF::FOXI1 #>   1 -9.785908e+00 -7.089758 -19.76373 -23.28782  -28.08842  -10.84705 #>    motif #>     ERF::FOXO1 ERF::HOXB13 ERF::NHLH1 ERF::SREBF2          ERT1          ESR1 #>   1  -13.26254   -17.25297  -25.71545   -27.51491 -3.402824e+36 -3.470992e+01 #>    motif #>          ESR2      ESRRA      ESRRB      ESX1       ETS1       ETS2      ETV1 #>   1 -15.65669 -15.416615 -18.763407 -5.627253  -6.727432  -6.898185 -10.88373 #>    motif #>              ETV2 ETV2::DRGX ETV2::FIGLA ETV2::FOXI1 ETV2::HOXB13       ETV3 #>   1 -1.088495e+01  -13.80814   -20.87454   -12.00806    -21.74709  -7.558227 #>    motif #>           ETV4      ETV5 ETV5::DRGX ETV5::FIGLA ETV5::FOXI1 ETV5::FOXO1 #>   1  -7.985979 -10.10907  -13.25131   -20.34420   -9.206867   -7.901941 #>    motif #>     ETV5::HOXA2       ETV6       ETV7      EVX1      EVX2    EWSR1-FLI1 #>   1   -12.99484 -10.824530 -10.901637 -7.698364 -7.720087 -3.402824e+36 #>    motif #>          Ebf2      EcR::usp       Eip74EF      Elba1      Elba2       Elf5 #>   1 -13.19742 -3.402824e+36 -3.402824e+36  -8.794836  -9.005390 -10.886662 #>    motif #>            EmBP-1       Emx     Erf-a       Erg      Esrrg     Ets21C  Etv1/4/5 #>   1 -3.711799e+00 -21.76997 -20.99460 -11.41830  -9.908195  -9.947772 -22.89995 #>    motif #>              FAR1    FERD3L       FEV          FHL1      FHY3      FIGLA #>   1 -2.497874e+01 -21.27016 -12.16894 -4.653372e+00 -13.21388 -10.452035 #>    motif #>          FKH1          FKH2       FLC      FLI1 FLI1::DRGX FLI1::FOXI1 #>   1 -18.60206 -1.377837e-01 -25.15765  -7.93636  -12.95242   -10.64237 #>    motif #>      FOS.MA0476.1 FOS.MA1951.1 FOS::JUN.MA0099.3 FOS::JUN.MA1126.1 FOS::JUNB #>   1 -3.402824e+36    -16.75961        -10.875983         -17.08338 -16.42625 #>    motif #>     FOS::JUND FOSB::JUN FOSB::JUNB.MA1135.1 FOSB::JUNB.MA1136.1     FOSL1 #>   1 -21.28448 -10.80729          -13.409527           -9.258456 -16.55077 #>    motif #>     FOSL1::JUN.MA1128.1 FOSL1::JUN.MA1129.1 FOSL1::JUNB FOSL1::JUND.MA1142.1 #>   1           -15.82765           -8.993800   -13.50126            -8.262667 #>    motif #>     FOSL1::JUND.MA1143.1         FOSL2 FOSL2::JUN.MA1130.1 FOSL2::JUN.MA1131.1 #>   1            -8.179398 -3.402824e+36          -15.053730           -11.75602 #>    motif #>     FOSL2::JUNB.MA1138.1 FOSL2::JUNB.MA1139.1 FOSL2::JUND.MA1144.1 #>   1        -3.402824e+36            -13.62511        -3.402824e+36 #>    motif #>     FOSL2::JUND.MA1145.1      FOXA1      FOXA2      FOXA3      FOXB1      FOXC1 #>   1            -17.44547  -7.632401  -6.167677  -6.299078 -10.809978 -10.650660 #>    motif #>          FOXC2         FOXD1     FOXD2     FOXD3     FOXE1         FOXF2 #>   1 -11.321533 -1.471837e+00 -14.26886 -14.88548 -17.57678 -1.301137e+01 #>    motif #>         FOXG1         FOXH1     FOXI1 FOXJ2::ELF1      FOXK1      FOXK2 #>   1 -1.187386 -1.253669e+01 -0.466068   -12.28335  -9.544596  -5.952846 #>    motif #>         FOXL1      FOXN3 FOXO1::ELF1 FOXO1::ELK1 FOXO1::ELK3 FOXO1::FLI1 #>   1 -1.131294 -0.2193179   -9.979612   -12.22709   -12.42512   -10.74118 #>    motif #>          FOXO4       FOXO6      FOXP1         FOXP2     FOXP3          FUS3 #>   1 -0.8170545  -0.4550209  -6.380517 -5.263039e+00 -1.563221 -5.281796e+00 #>    motif #>       FaEOBII Fli-Erg-a Fli-Erg-b Fli-Erg-c     Fos-b    FoxA-a    FoxA-b #>   1 -9.926804 -22.80639 -24.15949 -22.46963 -26.53378 -23.61708 -25.72125 #>    motif #>          FoxB    FoxD-b      FoxE      FoxF      FoxG    FoxI-a    FoxI-b #>   1 -26.78397 -21.47927 -21.65821 -20.03129 -21.91018 -21.30700 -18.88089 #>    motif #>        FoxI-c      FoxK     FoxL2      FoxM      FoxO      FoxQ      Foxf1 #>   1 -22.71376 -19.67589 -20.09627 -20.51666 -19.10107 -21.30249  -6.367311 #>    motif #>          Foxj2     Foxj3     Foxl2         Foxn1     Foxo1      Foxo3 #>   1  -1.517272 -15.04872 -11.64727 -1.848434e+00 -6.338549  -6.806077 #>    motif #>             Foxq1     GABPA          GAF1          GAL4          GAT1      GAT3 #>   1 -8.709925e+00 -11.55260 -2.583381e+01 -1.204847e+01 -3.402824e+36 -7.035007 #>    motif #>          GAT4    GATA-a      GATA1 GATA1/2/3        GATA10        GATA11 #>   1 -12.58979 -23.34238  -9.288520 -22.34176 -3.402824e+36 -3.402824e+36 #>    motif #>        GATA12    GATA14    GATA15     GATA19   GATA1::TAL1      GATA2 #>   1 -6.119178 -22.13559 -6.946666 -13.352750 -3.402824e+36 -12.098718 #>    motif #>            GATA20 GATA4.MA0482.2 GATA4.MA1755.1         GATA5 GATA6.MA1104.2 #>   1 -3.402824e+36     -13.643740      -8.504429 -1.134897e+01     -14.434419 #>    motif #>     GATA6.MA1396.1     GATA8         GATA9      GATAd      GBF2       GBF3 #>   1  -3.402824e+36 -7.440394 -3.402824e+36 -11.257839 -10.57956  -8.989793 #>    motif #>           GBX1      GBX2       GCM1       GCM2       GCN4       GCR1       GCR2 #>   1  -8.746660 -8.528598 -11.399450  -8.860428 -13.387282  -5.949919  -3.220646 #>    motif #>          GFI1          GIS1      GLI3     GLIS1     GLIS2     GLIS3 #>   1 -11.51671 -6.170310e+00 -29.00104 -48.88243 -21.53138 -29.02061 #>    motif #>              GLN3 GLYMA-06G314400 GLYMA-07G038400 GLYMA-08G357600 #>   1 -1.474907e+00       -9.544420       -8.159781       -15.74000 #>    motif #>     GLYMA-13G317000     GMEB2      GRF4       GRF6          GRF9     GRHL1 #>   1       -9.364049 -8.617226 -11.07409  -7.534652 -1.585849e+01 -12.16063 #>    motif #>         GRHL2        GSC      GSC2      GSM1      GSX1      GSX2       GT-1 #>   1 -11.10481  -7.908979 -7.847025 -25.29798 -7.296620 -5.001452 -12.028630 #>    motif #>          GT-2         GT-3a      GT-4       GTL1          GZF3       Gam1 #>   1 -22.93721 -3.192577e+01 -20.66030 -14.351099 -3.402824e+36  -9.012636 #>    motif #>          Gata3      Gfi1B      Gli1      Gli2 Glyma19g26560.1     Gmeb1 #>   1 -13.014707  -7.782824 -15.80951 -14.96859       -9.212173 -19.76820 #>    motif #>               Gsc       Gsx      H2.0          HAC1          HAL9      HAND2 #>   1 -1.299283e+00 -21.35812 -3.980995 -2.690230e+00 -9.842020e-01  -9.698073 #>    motif #>              HAP1        HAP2       HAP3      HAP5          HAT1          HAT2 #>   1 -3.402824e+36 -0.96453029  -5.924641 -11.62080 -3.402824e+36 -3.402824e+36 #>    motif #>          HAT22       HAT5          HBI1      HCM1          HDG1     HDG11 #>   1 -16.731203 -29.048624 -8.619199e+00 -3.081020 -3.402824e+36 -6.103615 #>    motif #>              HDG7      HES1       HES2       HES5       HES6      HES7 #>   1 -9.803741e+00  -8.38826  -8.501904  -7.038731  -7.321908 -21.12517 #>    motif #>          HESX1       HEY1       HEY2          HGTX      HHEX      HHO2 #>   1  -9.057646  -9.317868  -6.691791 -4.487387e+00 -4.968109 -15.50919 #>    motif #>          HHO3      HHO5      HHO6      HIC2      HIF1A     HINFP       HLF #>   1 -16.27821 -17.85699 -17.01806 -5.546326  -8.810391 -12.66843 -18.20207 #>    motif #>         HMBOX1         HMRA1     HMRA2      HNF1A      HNF1B HNF4A.MA0114.4 #>   1  -6.781432 -3.402824e+36 -5.241820 -15.194896 -11.981529      -15.13804 #>    motif #>     HNF4A.MA1494.1     HNF4G     HOXA1    HOXA10     HOXA2     HOXA4      HOXA5 #>   1      -29.30393 -15.19333 -4.877725 -8.276581 -6.205074 -4.349550  -3.763904 #>    motif #>         HOXA6     HOXA7     HOXA9    HOXB13     HOXB2 HOXB2::ELK1     HOXB3 #>   1 -7.594296 -3.998333 -8.071778 -14.30404 -4.334030   -14.30796 -7.466953 #>    motif #>         HOXB4     HOXB5     HOXB6     HOXB7     HOXB8      HOXB9    HOXC10 #>   1 -5.333864 -4.816635 -3.958428 -8.400269 -3.014657 -12.758080 -7.671029 #>    motif #>         HOXC11     HOXC12     HOXC13     HOXC4     HOXC8      HOXC9     HOXD10 #>   1 -10.711548  -8.151940 -12.552990 -4.829298 -4.470881 -17.771393 -10.783721 #>    motif #>         HOXD11     HOXD12 HOXD12::ELK1      HOXD3     HOXD4     HOXD8     HOXD9 #>   1  -7.510136 -11.002571    -23.84784  -6.956145 -5.014619 -2.720517 -7.481102 #>    motif #>              HRS1 HSF1.MA0319.1 HSF1.MA0486.2      HSF2      HSF4    HSFA1B #>   1 -2.344844e+01     -4.976816     -22.98793 -20.07326 -17.00694 -12.89655 #>    motif #>        HSFA1E    HSFA4A        HSFA6A    HSFA6B    HSFB2A    HSFB2B     HSFB3 #>   1 -24.21243 -26.04922 -3.402824e+36 -13.33146 -17.28001 -20.11280 -17.43087 #>    motif #>          HSFB4      HSFC1       HY5           HYH Hand1::Tcf3     Hes-b #>   1 -16.037149 -13.936693 -16.74578 -9.202162e+00  -10.361115 -23.79119 #>    motif #>         Hes-c       Hex       Hey      Hic1    Hmbox1           Hmx      Hmx1 #>   1 -24.66974 -22.10903 -23.32745 -7.581340 -22.40396 -3.402824e+36 -20.13696 #>    motif #>          Hmx2      Hmx3      Hnf1     Hnf1A      Hox1      Hox3      Hox4 #>   1 -21.10388 -20.46374 -22.30579 -12.90625 -21.86226 -21.83639 -22.03695 #>    motif #>          Hox5     Hoxa11     Hoxa13     Hoxd13        Hsf  Hsf1-2-4      IDD4 #>   1 -21.59490 -11.003125 -10.302750  -9.898768 -13.344760 -25.98308 -22.24236 #>    motif #>          IDD5      IDD6      IDD7      IKZF1          IME1       INO2 #>   1 -22.92118 -27.38014 -25.51736 -10.152231 -2.017174e+00  -6.293616 #>    motif #>              INO4         INSM1          IRF2      IRF3      IRF4      IRF5 #>   1 -7.189123e+00 -3.402824e+36 -3.402824e+36 -34.18163 -33.41906 -18.62588 #>    motif #>           IRF6      IRF7          IRF8      IRF9      ISL2       ISX #>   1 -11.779174 -21.89334 -4.932427e+01 -54.19248 -4.724082 -6.920784 #>    motif #>              IXR1     Ikzf3     Irf-b      Irf1       Isl1       Isx #>   1 -3.402824e+36 -12.79983 -29.75760 -17.34273  -8.758414 -22.53116 #>    motif #>     JDP2.MA0655.1 JDP2.MA0656.1       JKD      JUB1           JUN #>   1     -12.03687     -17.75074 -26.14601 -14.14591 -1.782378e+01 #>    motif #>     JUN::JUNB.MA1132.1 JUN::JUNB.MA1133.1 JUNB.MA0490.2 JUNB.MA1140.2 #>   1          -8.683872          -11.78677     -15.68443     -15.44970 #>    motif #>     JUND.MA0491.2 JUND.MA0492.1        Jun      KAN1          KAN2      KAN4 #>   1     -15.94010 -3.402824e+36 -14.288252 -5.165019 -3.402824e+36 -9.923348 #>    motif #>           KLF1      KLF10      KLF11      KLF12     KLF13      KLF14     KLF15 #>   1  -8.756730  -7.812243 -11.455017  -5.760502 -37.31065  -8.189537 -10.68926 #>    motif #>          KLF16     KLF17       KLF2      KLF3      KLF4          KLF5 #>   1 -12.518575 -18.59390 -10.135197 -12.99740 -11.49560 -9.739896e+00 #>    motif #>           KLF6       KLF7      KLF9       KUA1     Klf15 Klf3/8/12 Klf5-like #>   1 -10.334482  -8.533323 -17.70618 -11.600252 -27.41357 -24.18154 -22.97519 #>    motif #>     Klf6-7-like            Kr     LBD13     LBD18      LBX1      LBX2 #>   1   -24.42539 -1.999988e+01 -12.84636 -13.13680 -7.717709 -7.171081 #>    motif #>              LEC2       LEP          LEU3       LFY       LHX2      LHX5 #>   1 -7.485844e+00 -23.16135 -3.402824e+36 -29.37539 -10.277499 -6.792355 #>    motif #>          LHX6      LHX9           LHY         LIN54      LMX1A         LMX1B #>   1 -8.419597 -7.585532 -3.402824e+36 -3.402824e+36  -9.735991 -3.402824e+36 #>    motif #>           LOB          LRL2      LYS14      Lef1      Lhx1          Lhx3 #>   1 -15.57047 -1.800530e+01  -9.653056 -12.39771 -19.98918 -3.402824e+36 #>    motif #>        Lhx3/4      Lhx4      Lhx8          Lim1      Lim3     Lmx-b      M1BP #>   1 -22.03165 -5.829485 -4.085091 -3.402824e+36 -4.190415 -22.33020 -24.27265 #>    motif #>              MAC1       MAF MAF::NFE2      MAFA      MAFF MAFG::NFE2L1 #>   1 -4.943133e+00 -15.85663 -24.19970 -15.89292 -14.35804    -24.47496 #>    motif #>          MAFK MATALPHA2        MAX      MAX::MYC        MAZ      MBP1 #>   1 -17.49642 -5.804213  -7.561135 -7.299506e+00  -8.531997 -4.040510 #>    motif #>     MBP1::SWI6      MCM1     MEF2A     MEF2B     MEF2C     MEF2D MEIS1.MA0498.2 #>   1  -3.458257 -11.04271 -17.80644 -25.12049 -19.22758 -24.25454      -3.210938 #>    motif #>     MEIS1.MA1639.1 MEIS2.MA0774.1 MEIS2.MA1640.1     MEIS3     MEOX1     MEOX2 #>   1     -15.914338      -5.378546     -18.117134 -6.461925 -8.510832 -8.092119 #>    motif #>             MET28         MET31     MET32          MET4       MGA      MGA1 #>   1 -3.402824e+36 -3.402824e+36 -4.687531 -3.402824e+36 -9.062092 -24.18602 #>    motif #>     MGA::EVX1       MGP      MIG1      MIG2      MIG3      MITF     MIXL1 #>   1 -16.32642 -30.16879 -2.623741 -3.228703 -2.853734 -21.20195 -7.888165 #>    motif #>           MLX     MLXIPL         MNB1A        MNT      MNX1          MOT2 #>   1 -12.44034  -9.210896  1.823216e-01  -7.514157 -5.668585 -3.402824e+36 #>    motif #>              MOT3   MSANTD3           MSC          MSN2          MSN4      MSX1 #>   1 -1.791759e+00 -7.941223 -1.436436e+01 -1.262915e+00 -5.329089e+00 -5.384473 #>    motif #>          MSX2      MTF1       MXI1        MYB          MYB1     MYB10    MYB101 #>   1 -4.943410 -21.74307  -4.836213 -12.941710 -3.402824e+36 -21.60730 -20.18360 #>    motif #>            MYB105    MYB107    MYB108    MYB111        MYB113        MYB116 #>   1 -3.402824e+36 -16.68189 -21.56036 -5.844339 -2.489750e+01 -2.982862e+01 #>    motif #>            MYB118    MYB119    MYB121     MYB124     MYB13         MYB15 #>   1 -3.402824e+36 -18.24452 -20.70390  -8.736530 -21.12180 -3.402824e+36 #>    motif #>         MYB17         MYB23     MYB24         MYB27          MYB3     MYB30 #>   1 -19.57607 -3.402824e+36 -7.478487 -3.402824e+36 -3.402824e+36 -19.85430 #>    motif #>         MYB33     MYB39    MYB3R1        MYB3R4        MYB3R5      MYB4 #>   1 -19.37575 -20.32270 -16.25492 -3.402824e+36 -3.305846e+01 -5.525604 #>    motif #>         MYB40     MYB41         MYB43     MYB44     MYB46     MYB49     MYB51 #>   1 -21.90666 -18.41934 -1.836548e+01 -16.04740 -6.853274 -19.15603 -35.28608 #>    motif #>             MYB52     MYB55     MYB56         MYB57     MYB58     MYB59 #>   1 -3.402824e+36 -6.711162 -24.20733 -3.402824e+36 -21.74281 -8.017334 #>    motif #>         MYB60         MYB61         MYB62     MYB63     MYB65     MYB67 #>   1 -30.37813 -3.402824e+36 -3.402824e+36 -17.19646 -18.21637 -30.71732 #>    motif #>         MYB70     MYB73     MYB74         MYB77     MYB80      MYB81      MYB83 #>   1 -13.51490 -15.93371 -19.69120 -3.402824e+36 -18.42824 -14.879815 -10.532816 #>    motif #>         MYB88         MYB92     MYB93     MYB94     MYB96     MYB98      MYB99 #>   1 -13.25648 -3.402824e+36 -18.21475 -28.03770 -23.37677 -11.82558 -15.188300 #>    motif #>         MYBL1     MYBL2        MYC      MYC2      MYC3       MYC4      MYCN #>   1 -19.22208 -22.02649  -8.914326 -2.476265 -2.877625  -3.645682 -10.43242 #>    motif #>           MYF5       MYF6      MYOD1       MYOG      MYR2      MZF1   Macho-1 #>   1 -14.068990 -13.773000 -14.831996 -13.994984 -17.62880 -13.50171 -7.364301 #>    motif #>               Mad       Mafb      Mafg       Max         Mecom      Meox #>   1 -3.402824e+36  -8.207866 -17.75628 -20.48318 -3.402824e+36 -21.78695 #>    motif #>          Mitf         Mlxip       Mnx     Msgn1       Msx      Msx3    NAC002 #>   1 -21.66577 -3.402824e+36 -21.85595 -18.47197 -22.35746 -5.753428 -13.57217 #>    motif #>         NAC004        NAC005     NAC007    NAC010        NAC011    NAC013 #>   1  -6.334089 -4.087855e+01  -8.495747 -31.41634 -3.402824e+36 -29.68057 #>    motif #>         NAC016     NAC017        NAC018     NAC019    NAC020        NAC025 #>   1  -7.184709  -6.999727 -1.169129e+01  -8.202594 -30.59249 -9.862716e+00 #>    motif #>         NAC028    NAC029    NAC031    NAC035     NAC037    NAC038     NAC043 #>   1  -6.856018 -13.93561 -29.83840 -14.62451  -7.398044 -31.27729 -11.173124 #>    motif #>        NAC045    NAC046    NAC047     NAC050     NAC053        NAC054    NAC055 #>   1 -11.41847 -5.161872 -18.42863  -9.206662  -8.084249 -2.043728e+01 -4.910721 #>    motif #>         NAC057    NAC058     NAC062    NAC071    NAC073    NAC075     NAC076 #>   1  -5.186389 -30.27111 -11.730645 -15.97720 -16.09446 -34.35611  -9.538756 #>    motif #>         NAC078     NAC079        NAC083    NAC087     NAC096        NAC098 #>   1  -8.452131  -9.579435 -3.402824e+36 -23.10210  -5.022084 -1.822612e+01 #>    motif #>        NAC101     NAC103    NAC105      NAC68      NAC69      NAC92   NCU00019 #>   1 -10.04145  -7.220416 -10.83386  -7.262888  -9.252555 -10.412526  -7.684910 #>    motif #>          NCU02182     NDT80    NEUROD1   NEUROG1 NEUROG2.MA0669.1 #>   1 -4.931533e+00 -27.42592 -12.519167 -10.39629       -13.425287 #>    motif #>     NEUROG2.MA1642.1    NFATC3     NFATC4      NFE2          NFIA      NFIB #>   1       -11.861051 -4.875493  -5.358599 -19.58687 -3.402824e+36 -26.72724 #>    motif #>     NFIC.MA0161.2 NFIC.MA1527.1    NFIC::TLX1     NFIL3 NFIX.MA0671.1 #>   1    -10.811659 -3.402824e+36 -3.402824e+36 -14.36961     -6.173223 #>    motif #>     NFIX.MA1528.1     NFKB1     NFKB2       NFYA       NFYB       NFYC #>   1 -1.803469e+01 -24.24744 -17.07538  -4.634924  -8.161779  -5.136937 #>    motif #>          NFkb      NHLH1     NHLH2         NHP10      NID1      NK7.1    NKX2-2 #>   1 -24.39690 -10.838574 -29.29067 -4.164822e+00 -8.530136 -4.0396495 -11.14535 #>    motif #>         NKX2-3    NKX2-4     NKX2-5    NKX2-8    NKX6-1    NKX6-2    NKX6-3 #>   1  -9.060308 -7.330281  -9.550379 -6.249979 -5.389304 -4.789777 -5.712279 #>    motif #>          NLP7      NOTO     NR1D1     NR1D2   NR1H2::RXRA NR1H4::RXRA     NR1I2 #>   1 -15.98293 -9.747689 -23.74908 -26.55422 -3.402824e+36   -16.37284 -21.99795 #>    motif #>          NR1I3      NR2C1 NR2C2.MA0504.1 NR2C2.MA1536.1 NR2F1.MA0017.2 #>   1 -10.730152  -7.521148      -19.10961      -5.651121  -2.506348e+01 #>    motif #>     NR2F1.MA1537.1 NR2F1.MA1538.1      NR2F2     NR2F6     NR3C1     NR3C2 #>   1      -22.37799      -17.32870 -11.879556 -22.14680 -28.32576 -28.57478 #>    motif #>          NR4A1      NR4A2 NR4A2::RXRA     NR5A1     NR6A1          NRG1 #>   1 -12.250212  -9.546248   -17.11670 -21.49148 -21.52071 -1.329445e+01 #>    motif #>            NRL          NSI1      NTL8       NTL9       NUC Neurod2.MA0668.2 #>   1  -9.662823 -3.402824e+36 -13.36681  -9.324633 -28.14828        -14.94946 #>    motif #>     Neurod2.MA1993.1      Nfat5     Nfatc1    Nfatc2    Nfe2l2      Nk-1 #>   1       -14.528043  -8.210477  -7.907480 -13.92871 -22.25307 -21.68107 #>    motif #>          Nk-3    Nkx2-1      Nkx3     Nkx3-1    Nkx3-2     Nobox      Noto #>   1 -22.15039 -14.35623 -21.84809  -5.784150 -12.21885 -5.024065 -21.77448 #>    motif #>          Npas2      Npas4      Nr1H2      Nr1H4 Nr1h3::Rxra         Nr2F6 #>   1  -7.043114 -10.302233 -10.673079 -10.041635   -24.16195 -3.402824e+36 #>    motif #>          Nr2e1         Nr2e3     Nr2f6     Nr5A2      Nrf1       O11        O2 #>   1 -10.008837 -1.100504e+00 -19.15193 -16.22216 -15.34787 -12.33303 -16.49295 #>    motif #>              OAF1 OJ1058_F05.8  OJ1581_H09.2     OLIG1      OLIG2      OLIG3 #>   1 -5.933348e+00    -6.549612 -1.008552e+01 -11.23694  -9.070843  -7.464202 #>    motif #>       ONECUT1       ONECUT2   ONECUT3          OPI1       OSR1       OSR2 #>   1 -21.64794 -1.506922e+01 -22.15631 -7.595888e+00 -13.207382 -12.727395 #>    motif #>          OTX1       OTX2         OVOL1     OVOL2          OdsH      Olig2 #>   1 -4.890702 -13.061386 -3.402824e+36 -19.49596 -3.402824e+36 -13.742515 #>    motif #>             Optix Os05g0497200  OsI_08196    OsRR22       Otp       Otx #>   1 -3.295837e+00    -10.16709  -8.706380 -11.68597 -23.41098 -23.46894 #>    motif #>     P0510F09.23     PATZ1      PAX1      PAX2 PAX3.MA0780.1 PAX3.MA1546.1 #>   1   -9.366850 -13.53039 -33.29188 -24.96124    -13.163176     -21.73347 #>    motif #>          PAX4      PAX5      PAX6          PAX9        PBF          PBX1 #>   1 -5.658946 -12.92412 -15.04942 -5.366620e+01  0.2231437 -1.403277e+01 #>    motif #>           PBX2      PBX3      PDR1          PDR3          PDR8      PDX1 #>   1 -15.728834 -18.07364 -17.64987 -3.402824e+36 -3.402824e+36 -5.024767 #>    motif #>          PEND      PHD1      PHDP      PHL1     PHL11         PHL12 #>   1 -7.499902 -5.845453 -6.391211 -25.03311 -19.07698 -2.315197e+01 #>    motif #>              PHL2      PHL4          PHL7          PHO2       PHO4     PHOX2A #>   1 -7.323467e+00 -25.69742 -1.947780e+01 -2.487272e+00  -2.908986 -11.984934 #>    motif #>        PHOX2B PHYPADRAFT_140773 PHYPADRAFT_143875 PHYPADRAFT_153324 #>   1 -18.36723         -6.970869         -7.240202         -5.387233 #>    motif #>     PHYPADRAFT_173530 PHYPADRAFT_182268 PHYPADRAFT_28324 PHYPADRAFT_38837 #>   1     -3.402824e+36     -3.402824e+36    -3.402824e+36        -6.928135 #>    motif #>     PHYPADRAFT_48267 PHYPADRAFT_64121 PHYPADRAFT_72483        PI          PIF1 #>   1        -5.073270        -15.68109        -7.015226 -12.84891 -1.250120e+01 #>    motif #>              PIF3          PIF4          PIF5     PITX1         PITX2     PITX3 #>   1 -8.217566e+00 -3.749781e+00 -3.402824e+36 -6.670082 -8.971416e+00 -7.376931 #>    motif #>        PKNOX1    PKNOX2         PLAG1        PLAGL2      PLT1 POPTR_0002s00440g #>   1 -14.75887 -25.63583 -3.402824e+36 -3.402824e+36 -27.22212         -3.818554 #>    motif #>        POU1F1    POU2F1 POU2F1::SOX2    POU2F2    POU2F3    POU3F1    POU3F2 #>   1 -25.10117 -11.57667    -27.53752 -21.95391 -14.15129 -11.55046 -12.89876 #>    motif #>        POU3F3     POU3F4    POU4F1    POU4F2    POU4F3     POU5F1   POU5F1B #>   1 -12.94688  -9.564241 -16.38739 -25.21683 -19.11786  -9.037395 -7.703292 #>    motif #>     POU6F1.MA0628.1 POU6F1.MA1549.1     POU6F2 PPARA::RXRA     PPARD     PPARG #>   1       -7.543439       -9.313423  -8.570119   -20.34757 -25.96244 -31.05145 #>    motif #>          PRDM1     PRDM9      PROP1      PROX1     PRRX1     PRRX2 #>   1 -11.367077 -32.40522 -11.850212  -9.485425 -5.329358 -9.613100 #>    motif #>              PUT3      Pax7       Pdp1    Plagl1 Pou5f1::Sox2 Pparg::Rxra #>   1 -2.572598e+00 -16.26159 -13.073130 -12.79675    -16.94328   -13.67333 #>    motif #>             Pph13    Prdm14    Prdm15     Prdm4     Prdm5      Prop #>   1 -8.034955e+00 -11.98382 -16.04523 -22.62078 -11.82369 -22.55964 #>    motif #>     Ptf1A.MA1619.1 Ptf1A.MA1620.1      Ptf1a          Ptx1   RAMOSA1      RAP1 #>   1     -13.898552     -12.750457 -13.004359 -5.991465e+00 -16.36237 -18.34392 #>    motif #>        RAP2-1   RAP2-10       RAP2-11   RAP2-12    RAP2-3     RAP2-4    RAP2-6 #>   1 -17.97917 -14.52042 -1.766877e+01 -24.28116 -3.472337  -7.764800 -17.67094 #>    motif #>        RAP2-7        RAP2-9 RARA.MA0729.1 RARA.MA0730.1 RARA::RXRA RARA::RXRG #>   1 -4.056921 -2.836815e+01 -3.402824e+36     -28.04233  -19.75431  -22.42781 #>    motif #>          RARB      RARG RAV1.MA0582.1 RAV1.MA0583.1          RAV2       RAX #>   1 -18.22649 -18.24800    -12.688891    -11.887340 -3.402824e+36 -8.861676 #>    motif #>          RAX2          RAX3       RBPJ          RDR1          RDS1 #>   1 -4.947624 -3.402824e+36 -10.731165 -3.402824e+36 -1.006037e+00 #>    motif #>              RDS2      REB1       REF6          REI1        REL          RELA #>   1 -3.022572e+00 -18.95553  -9.467296 -3.653996e+00  -8.851718 -3.402824e+36 #>    motif #>           RELB      REST RFX1.MA0365.1 RFX1.MA0509.3      RFX2      RFX3 #>   1  -8.215479 -31.33685 -3.402824e+36     -46.20408 -30.30395 -33.67599 #>    motif #>          RFX4      RFX5      RFX7          RGM1      RGT1    RHOXF1 #>   1 -32.07232 -28.20683 -7.974102 -3.856625e-01 -11.37061 -5.889419 #>    motif #>            RIM101       RIN          RLM1       RME1 RORA.MA0071.1 #>   1 -3.402824e+36 -15.00383 -3.402824e+36  -6.839666 -3.402824e+36 #>    motif #>     RORA.MA0072.1       RORB      RORC          ROX1          RPH1 #>   1 -3.402824e+36 -11.170568 -12.40124 -9.614450e+00 -3.402824e+36 #>    motif #>              RPN4         RREB1          RSC3         RSC30      RTG3 #>   1 -3.402824e+36 -3.402824e+36 -6.436402e+00 -6.629000e+00 -21.73076 #>    motif #>          RUNX2      RUNX3          RVE1          RVE4          RVE5 #>   1 -10.622701 -12.917811 -3.402824e+36 -3.402824e+36 -3.402824e+36 #>    motif #>              RVE6          RVE7         RVE7L          RVE8     RXRA::VDR #>   1 -3.402824e+36 -3.402824e+36 -3.402824e+36 -3.402824e+36 -3.402824e+36 #>    motif #>     RXRB.MA0855.1 RXRB.MA1555.1 RXRG.MA0856.1 RXRG.MA1556.1 Rarb.MA0857.1 #>   1     -30.66261     -17.39403     -30.94138     -20.42216     -43.69353 #>    motif #>     Rarb.MA0858.1 Rarg.MA0859.1 Rarg.MA0860.1       Rax     Rbpjl       Rel #>   1     -41.27509     -41.29897     -47.90405 -21.87934 -15.37979 -21.62889 #>    motif #>          Rfx6    Rhox11     Runx1            Rx      Rxra     SATB1     SCRT1 #>   1 -15.37650 -17.80419 -9.101326 -3.402824e+36 -28.57026 -15.80266 -17.49709 #>    motif #>         SCRT2          SEP1       SEP3      SFL1      SFP1      SGR5      SHOX #>   1 -17.80440 -1.824201e+01  -6.804296 -23.66115 -26.61537 -21.52504 -5.314338 #>    motif #>              SIP4       SIX1      SIX2      SIZF2          SKN7      SKO1 #>   1 -2.985882e+00  -9.217055 -13.17303 -11.579115 -1.771339e+00 -20.19122 #>    motif #>          SMAD2     SMAD3      SMAD5        SMB           SMZ      SNAI1 #>   1 -10.058455 -19.20471 -13.846664  -8.420567 -3.402824e+36  -9.070413 #>    motif #>         SNAI2     SNAI3          SNT2      SOC1     SOHLH2       SOK2 #>   1 -15.06826 -10.78399 -3.402824e+36 -13.29341  -8.041791  -8.265055 #>    motif #>              SOL1      SOX10      SOX12      SOX13      SOX14     SOX15 #>   1 -3.402824e+36  -9.604980 -13.051947 -12.107099 -11.746221 -9.617316 #>    motif #>         SOX18       SOX2     SOX21       SOX4      SOX8      SOX9        SP1 #>   1 -5.494143 -11.302159 -33.02958 -10.465219 -9.008202 -8.287009  -7.625558 #>    motif #>            SP2       SP3        SP4        SP5        SP8       SP9     SPDEF #>   1  -4.773263 -15.24514  -7.740177  -8.291956 -11.554317 -11.32662 -11.01281 #>    motif #>          SPIB      SPIC      SPL1      SPL10         SPL11     SPL12 #>   1 -15.64558 -13.81092 -14.65754 -10.642753 -3.402824e+36 -6.921699 #>    motif #>            SPL13A         SPL14         SPL15      SPL3      SPL4          SPL5 #>   1 -3.402824e+36 -3.402824e+36 -2.506232e+01 -13.00794 -7.077577 -3.402824e+36 #>    motif #>          SPL7          SPL8      SPL9        SPT     SPT15       SPT2     SPT23 #>   1 -6.631455 -3.402824e+36 -12.05052  -5.665847 -30.90392 -10.475973 -7.306494 #>    motif #>          SRD1 SREBF1.MA0595.1 SREBF1.MA0829.2 SREBF2.MA0596.1 SREBF2.MA0828.2 #>   1 -5.647063   -3.402824e+36       -14.28207   -3.402824e+36       -24.90863 #>    motif #>           SRF      SRM1       SRY     STAT1 STAT1::STAT2      STAT3      STB3 #>   1 -19.32726 -18.49081 -5.668969 -16.18538    -14.69327 -11.755916 -24.64473 #>    motif #>              STB4          STB5     STE12       STP1      STP2          STP3 #>   1 -3.402824e+36 -6.297903e+00 -5.314898  -3.867554 -25.05758 -3.402824e+36 #>    motif #>              STP4       SUM1      SUT1      SUT2       SVP          SWI4 #>   1 -3.402824e+36 -11.302723 -2.675653 -24.19771 -24.32039 -3.402824e+36 #>    motif #>              SWI5           Scr     Shox2      Six3    Six3/6 Six4.MA0204.1 #>   1 -3.402824e+36 -3.402824e+36 -5.882638 -20.78533 -23.61024 -3.402824e+36 #>    motif #>     Six4.MA2001.1         Smad4     Snail          Sox1      Sox11     Sox17 #>   1     -8.977763 -3.402824e+36 -22.31590 -2.737867e+01  -9.035236 -14.02818 #>    motif #>           Sox3      Sox5          Sox6     SoxB1     SoxB2      SoxC      SoxF #>   1 -11.881380 -13.77938 -3.402824e+36 -23.85289 -23.50617 -22.32290 -23.32720 #>    motif #>          Spi1       Spz1     StBRC1      Stat2     Stat4     Stat5a #>   1 -17.92719 -15.417185  -9.506227 -14.209599 -17.90510 -11.364324 #>    motif #>     Stat5a::Stat5b    Stat5b     Stat6   Stat92E         Su(H)    TAL1::TCF3 #>   1      -8.637358 -14.96971 -13.29763 -17.84490 -3.402824e+36 -9.403488e+00 #>    motif #>               TB1      TBF1       TBP       TBR1       TBS1       TBX1 #>   1 -3.402824e+36 -20.86097 -12.13229 -12.834044  -4.581888 -11.513881 #>    motif #>          TBX15      TBX18     TBX19       TBX2      TBX20      TBX21       TBX3 #>   1 -10.577939 -12.576384 -25.32887 -11.353531 -14.028370 -14.164058 -14.958831 #>    motif #>          TBX4      TBX5      TBXT      TCF12     TCF21       TCF3      TCF4 #>   1 -7.254645 -6.251960 -20.72290  -9.122859 -10.15281  -8.716936 -12.39022 #>    motif #>           TCF7    TCF7L1    TCF7L2      TCFL5          TCP1         TCP13 #>   1  -9.227036 -14.17235 -14.62664  -7.826163 -3.402824e+36 -3.402824e+36 #>    motif #>             TCP14     TCP15         TCP16     TCP17      TCP19       TCP2 #>   1 -3.402824e+36 -26.13896 -1.025039e+01 -15.73308  -9.742431  -9.325287 #>    motif #>         TCP20     TCP21     TCP22      TCP23         TCP24          TCP3 #>   1 -26.02958 -22.44858 -20.69472  -9.407413 -2.427308e+01 -3.402824e+36 #>    motif #>           TCP4       TCP5       TCP7      TCP8      TCP9          TCX2 #>   1  -9.292414 -12.035571 -19.243248 -7.416414 -37.07574 -3.402824e+36 #>    motif #>          TCX3          TCX6          TDA9          TEA1      TEAD1      TEAD2 #>   1 -20.82517 -3.402824e+36 -3.402824e+36 -5.760353e+00 -14.969744 -14.049520 #>    motif #>          TEAD3      TEAD4          TEC1       TEF          TEM1 TFAP2A.MA0003.4 #>   1 -14.489580 -12.581752 -1.409522e+01 -17.27733 -3.402824e+36       -13.03181 #>    motif #>     TFAP2A.MA0810.1 TFAP2A.MA0872.1 TFAP2B.MA0811.1 TFAP2B.MA0812.1 #>   1       -9.752337   -1.136911e+01       -10.46038      -10.204363 #>    motif #>     TFAP2B.MA0813.1 TFAP2C.MA0524.2 TFAP2C.MA0814.2 TFAP2C.MA0815.1 #>   1   -1.291035e+01       -10.24478      -12.105779   -1.308276e+01 #>    motif #>            TFAP2E TFAP4.MA0691.1 TFAP4.MA1570.1 TFAP4::ETV1   TFAP4::FLI1 #>   1 -3.402824e+36     -17.715092  -1.009087e+01   -20.18882 -3.402824e+36 #>    motif #>          TFCP2     TFDP1      TFE3       TFEB      TFEC TFLG2-Zm00001d042777 #>   1 -11.697064 -11.24155 -13.18441  -8.455732 -10.57938            -15.41768 #>    motif #>              TGA1     TGA10     TGA1A      TGA2      TGA3       TGA4      TGA5 #>   1 -3.402824e+36 -23.99641 -4.192052 -18.83023 -26.68567 -14.322135 -17.05773 #>    motif #>          TGA6      TGA7       TGA9     TGIF1     TGIF2   TGIF2LX   TGIF2LY #>   1 -16.22953 -18.38395 -14.357747 -28.09931 -17.51382 -13.93289 -13.12142 #>    motif #>         THAP1          THI2      THRA THRB.MA1574.1 THRB.MA1575.1 THRB.MA1576.1 #>   1  -8.42830 -3.402824e+36 -31.76930     -18.50503     -27.39195 -3.153880e+01 #>    motif #>              TINY          TLX2      TOD6          TOS8      TP53          TP63 #>   1 -2.186948e+01 -1.002992e+01 -21.69419 -6.017746e+00 -26.19339 -3.402824e+36 #>    motif #>          TP73       TRB1          TRB2     TREE1      TRP1      TRP2      TRP5 #>   1 -25.01199 -13.251259 -3.402824e+36 -7.817894 -47.20182 -44.70152 -6.311864 #>    motif #>          TRPS1      TSAR1      TSAR2          TSO1     TWIST1          TYE7 #>   1 -13.255047  -7.025170  -6.132691 -3.402824e+36 -12.880190 -6.177252e+00 #>    motif #>        Tbox-a    Tbox-b Tbx15/18/22    Tbx2/3       Tbx6      Tcf12 #>   1 -26.34730 -26.54165   -27.14396 -24.53790 -12.943460 -13.650033 #>    motif #>             Tcf21 Tcf3-4-12   Tfcp2l1    Thap11       Tlx        Trl     Twist2 #>   1 -2.575359e+01 -22.97263 -16.51330 -20.71114 -22.01480 -10.708935 -13.959377 #>    motif #>              UGA3      UME6      UNCX         UNE10      UPC2          URC2 #>   1 -5.357715e+00 -15.91651 -5.193350 -3.402824e+36 -7.082588 -3.402824e+36 #>    motif #>          USF1      USF2      USV1           Ubx    Uncx-b       Usf      VAX1 #>   1 -14.43412 -16.65577 -25.73057 -5.103573e+00 -21.95272 -22.27149 -5.211549 #>    motif #>          VAX2     VENTX      VEZF1       VIP1      VSX1      VSX2        Vdr #>   1 -4.907730 -8.764030 -11.406584 -16.926815 -5.566508 -5.596797 -11.065751 #>    motif #>              Vsx1          Vsx2      WIN1         WRKY1    WRKY11    WRKY12 #>   1 -6.382756e+00 -3.402824e+36 -7.442577 -3.402824e+36 -21.04051 -6.341718 #>    motif #>            WRKY14    WRKY15        WRKY17     WRKY18         WRKY2     WRKY20 #>   1 -3.402824e+36 -19.00751 -1.954186e+01 -12.434710 -3.402824e+36 -22.746382 #>    motif #>        WRKY21        WRKY22     WRKY23        WRKY24    WRKY25        WRKY26 #>   1 -33.77153 -3.402824e+36  -8.710965 -2.451731e+01 -19.68147 -3.402824e+36 #>    motif #>            WRKY27     WRKY28     WRKY29         WRKY3    WRKY30    WRKY31 #>   1 -1.906190e+01 -11.352295 -15.433754 -3.402824e+36 -17.10798 -22.32897 #>    motif #>            WRKY33    WRKY38        WRKY40        WRKY42    WRKY43    WRKY45 #>   1 -3.402824e+36 -6.248603 -3.402824e+36 -2.601288e+01 -7.482242 -18.31324 #>    motif #>            WRKY46    WRKY47    WRKY48    WRKY50    WRKY53        WRKY55 #>   1 -3.402824e+36 -18.98248 -8.154733 -22.21666 -7.297213 -3.402824e+36 #>    motif #>        WRKY57        WRKY59         WRKY6        WRKY60     WRKY62 #>   1 -8.328400 -1.671316e+01 -3.402824e+36 -3.402824e+36  -8.342283 #>    motif #>            WRKY63     WRKY65     WRKY7        WRKY70        WRKY71 #>   1 -3.402824e+36 -19.470455 -21.01242 -3.402824e+36 -3.402824e+36 #>    motif #>            WRKY75     WRKY8       Wt1 XBP1.MA0414.1 XBP1.MA0844.1      YAB4 #>   1 -3.402824e+36 -20.54871 -12.17680 -3.402824e+36     -14.32698 -20.09376 #>    motif #>          YAP1          YAP3       YAP5      YAP6       YAP7       YER130C #>   1 -28.36900 -3.402824e+36 -2.6344671 -23.04108 -16.386328 -7.460796e+00 #>    motif #>           YER184C   YGR067C          YHP1       YKL222C       YLL054C #>   1 -6.978685e+00 -15.08510 -3.402824e+36 -6.874275e+00 -9.617757e-01 #>    motif #>           YLR278C       YNR063W          YOX1       YPR013C   YPR015C #>   1 -5.213595e+00 -3.402824e+36 -3.402824e+36 -6.829314e+00 -28.12137 #>    motif #>           YPR022C    YPR196W      YRM1       YRR1     YY1-2        YY2 #>   1 -3.402824e+36  -6.218502 -7.291002  -9.482203 -26.83319  -8.826026 #>    motif #>            Yy1          ZAP1      ZAT10       ZAT6     ZBED1     ZBED2 #>   1  -7.739655 -3.402824e+36 -10.477966 -13.308326 -26.26655 -15.06364 #>    motif #>         ZBTB12     ZBTB14     ZBTB18    ZBTB26    ZBTB32    ZBTB33     ZBTB6 #>   1 -10.191599  -8.823833 -17.107004 -14.57516 -18.92038 -17.97308 -11.81042 #>    motif #>        ZBTB7A    ZBTB7B     ZBTB7C      ZEB1     ZFP14     ZFP42     ZFP57 #>   1 -12.98799 -17.76383 -11.920160 -10.52854 -11.88788 -24.93093 -16.12028 #>    motif #>           ZHD1         ZHD10       ZHD3       ZHD5      ZHD6       ZHD9 #>   1 -14.347123 -3.402824e+36 -18.796764 -11.551031 -21.28669 -18.105177 #>    motif #>          ZIC1      ZIC4      ZIC5      ZIM3    ZKSCAN1   ZKSCAN3   ZKSCAN5 #>   1 -23.59877 -18.46326 -25.90623 -19.70362 -14.039089 -25.60475 -15.27404 #>    motif #>              ZMS1    ZNF135    ZNF136    ZNF140    ZNF143    ZNF148     ZNF16 #>   1 -6.267514e+00 -17.72494 -18.67777 -33.03807 -38.26606 -10.79217 -33.81011 #>    motif #>        ZNF189    ZNF211    ZNF214      ZNF24    ZNF257     ZNF263    ZNF274 #>   1 -12.78706 -21.37901 -18.87683 -18.695593 -13.91263 -11.262577 -21.33387 #>    motif #>        ZNF281    ZNF282     ZNF317    ZNF320    ZNF324    ZNF331     ZNF341 #>   1 -13.44319 -24.42413 -12.287700 -36.50378 -26.48227 -11.94880 -11.621281 #>    motif #>        ZNF343   ZNF354A       ZNF354C    ZNF382    ZNF384    ZNF410     ZNF416 #>   1 -27.49774 -24.86190 -3.402824e+36 -38.74012 -16.19022 -37.85911  -9.429785 #>    motif #>        ZNF417    ZNF418    ZNF449    ZNF454    ZNF460    ZNF528    ZNF530 #>   1 -21.73846 -19.10353 -14.70041 -23.44891 -18.71075 -20.77357 -23.09749 #>    motif #>         ZNF549    ZNF574    ZNF582    ZNF610     ZNF652     ZNF667    ZNF669 #>   1  -8.958082 -19.54531 -30.51387 -12.73816 -13.072098 -12.501935 -17.52631 #>    motif #>        ZNF675    ZNF680    ZNF682    ZNF684     ZNF692    ZNF701    ZNF707 #>   1 -26.59113 -20.76781 -17.60460 -24.55058  -9.745271 -22.71947 -17.26189 #>    motif #>        ZNF708    ZNF740    ZNF75D     ZNF76    ZNF768    ZNF784      ZNF8 #>   1 -14.26237 -15.81204 -10.14637 -30.59101 -20.07011 -13.36066 -31.92978 #>    motif #>        ZNF816     ZNF85     ZNF93   ZSCAN29   ZSCAN31    ZSCAN4     Zfp335 #>   1 -19.77176 -15.82596 -18.70312 -12.86941 -36.45190 -22.65198  -9.594729 #>    motif #>           Zfx Zic1::Zic2      Zic2      Zic3 Zm00001d002364 Zm00001d005692 #>   1 -16.78004 -13.218730 -15.82635 -14.50929  -3.402824e+36     -13.866471 #>    motif #>     Zm00001d005892 Zm00001d015407 Zm00001d018571 Zm00001d020267 Zm00001d020595 #>   1      -11.32133      -29.90231      -14.14394      -12.79124  -3.185653e+01 #>    motif #>     Zm00001d024324 Zm00001d027846 Zm00001d031796 Zm00001d034298 Zm00001d035604 #>   1      -12.44691     -12.229652      -12.50035     -10.051803      -14.45657 #>    motif #>     Zm00001d038683 Zm00001d044409 Zm00001d044785 Zm00001d049364 Zm00001d052229 #>   1      -12.98910     -14.051810     -10.817840      -17.39710  -3.402824e+36 #>    motif #>            Znf423     abd-A       abi4          achi            al #>   1 -3.402824e+36 -4.123888 -10.652579 -2.184518e+00 -3.402824e+36 #>    motif #>                ap        ara      atf-7       bHLH130   bHLH145    bHLH18 #>   1 -3.402824e+36 -0.4102341  -9.489356 -1.480075e+01 -12.18569 -22.26095 #>    motif #>            bHLH77        bHLH80     bZIP14       bZIP910       bZIP911 #>   1 -1.609811e+01 -3.402824e+36  -9.476688 -3.402824e+36 -3.402824e+36 #>    motif #>               bap        bcd     blmp-1 br.MA0010.1 br.MA0011.1 br.MA0012.1 #>   1 -3.402824e+36 -3.1863527  -7.402425   -9.293356   -4.559730   -7.781590 #>    motif #>     br.MA0013.1           brk        bsh           btd       btn           cad #>   1  -10.093549 -3.402824e+36 -3.7001734 -7.974455e+00 -4.296387 -1.003206e+01 #>    motif #>            caup    cebp-1 ceh-10::ttx-3    ceh-22    ceh-28    ceh-38    ceh-48 #>   1 -0.63138258 -12.26996 -2.763636e+01 -10.41215 -20.39548 -25.20221 -6.987749 #>    motif #>          ces-2         che-1    cnc::maf-S     cre-1        ct        daf-12 #>   1 -13.146842 -3.402824e+36 -3.402824e+36 -3.756752 -3.244177 -2.148950e+01 #>    motif #>         daf-16   dl.MA0022.1   dl.MA0023.1   dmrt99B        dpy-27     dsc-1 #>   1  -7.574858 -1.005536e+01 -3.402824e+36 -21.15429 -3.402824e+36 -8.110563 #>    motif #>            dsx           dve     efl-1      elt-2         elt-3     elt-6 #>   1 -10.435671 -6.576514e+00 -18.83217 -16.375103 -3.402824e+36 -6.135457 #>    motif #>           ems            en     eor-1       eve           exd          exex #>   1 -4.767796 -5.717603e+00 -15.19972 -4.365926 -3.402824e+36 -3.402824e+36 #>    motif #>               fkh         fkh-2     fkh-9     fos-1           ftz       gcm #>   1 -3.402824e+36 -1.799520e+00 -4.195504 -9.954561 -3.402824e+36 -12.63446 #>    motif #>          gcm2       grh            gt          h         hb           hbn #>   1 -6.432148 -14.15602 -3.402824e+36  -7.603054 -10.086954 -3.402824e+36 #>    motif #>               hkb         hlh-1    hlh-30           hth           ind #>   1 -3.402824e+36 -1.915272e+01 -12.04925 -1.292768e+00 -3.490647e+00 #>    motif #>               inv        kn           kni           lab large-Maf        lbe #>   1 -3.402824e+36 -20.66531 -3.402824e+36 -3.402824e+36 -21.00263 -2.3300052 #>    motif #>            lbl     lim-4     lim-7    lin-14    lin-54           lms #>   1 -2.7784414 -6.555071 -9.345457 -1.259713 -21.21972 -5.182323e+00 #>    motif #>             mab-3     mab-5        mirr         mix-a     msl-1     msn-1 #>   1 -3.402824e+36 -6.947004 -0.45266515 -3.402824e+36 -16.90897 -5.564811 #>    motif #>       myb.Ph3       nhr-6         nit-4           nub         nuc-1 #>   1 -7.596044 -11.1312170 -1.065752e+01 -1.294172e+01 -4.645478e+00 #>    motif #>                oc           odd        onecut           opa       otp #>   1 -2.944439e+00 -3.402824e+36 -3.336659e+00 -1.604665e+01 -5.549989 #>    motif #>               ovo     pal-1           pan            pb         pha-4 #>   1 -3.402824e+36 -6.491975 -3.402824e+36 -3.402824e+36 -3.402824e+36 #>    motif #>            pho           pnr     pqm-1           prd          repo #>   1  -9.629251 -3.402824e+36 -12.41069 -3.402824e+36 -3.402824e+36 #>    motif #>                ro       rst2   schlank         sd     skn-1      slbo #>   1 -5.822964e+00  -7.278584 -8.125552 -11.492016 -17.66188 -3.463764 #>    motif #>           slou       slp1      sma-4 small-Maf       sna    snpc-4 #>   1 -5.2942958 -10.775672  -9.725101 -20.94432 -16.09878 -11.83622 #>    motif #>                so      squamosa    su(Hw)        sv           tin           tll #>   1 -3.402824e+36 -1.240568e+01 -28.82801 -28.84913 -3.402824e+36 -3.402824e+36 #>    motif #>               ttk        tup        twi        unc-30         unc-4     unc-62 #>   1 -5.002159e+00 -3.8422952  -9.080534 -6.134202e+00 -3.402824e+36 -10.407587 #>    motif #>         unc-86          unpg           usp     vab-7        vfl           vis #>   1 -12.941288 -5.157006e+00 -3.402824e+36 -6.413253 -13.155876 -2.079442e+00 #>    motif #>               vnd        vvl          wc-1         z           zen      zen2 #>   1 -3.402824e+36 -2.6426837 -3.402824e+36 -6.339358 -3.402824e+36 -4.546001 #>    motif #>             zfh-2     zip-8 #>   1 -3.402824e+36 -13.91257 #>  [ reached getOption(\"max.print\") -- omitted 5 rows ]"},{"path":"/reference/gextract_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pwm of intervals from a motif database — gextract_pwm","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"Extract pwm intervals motif database","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"gextract_pwm(   intervals,   motifs = NULL,   dataset = all_motif_datasets(),   spat = NULL,   spat_min = 0,   spat_max = NULL,   bidirect = TRUE,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/gextract_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals misha intervals set motifs names specific motifs extract dataset dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. bidirect motif bi-directional. TRUE, reverse-complement motif used well. parallel logical, whether use parallel processing","code":""},{"path":"/reference/gextract_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"intervals set additional columns per motif, containing pwm interval motif","code":""},{"path":"/reference/gextract_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pwm of intervals from a motif database — gextract_pwm","text":"","code":"if (FALSE) { library(misha) gdb.init_examples() pwms <- gextract_pwm(\"annotations\") pwms[, 1:20] }"},{"path":"/reference/match_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Match every cluster with motif from database — match_pwm.clusters","title":"Match every cluster with motif from database — match_pwm.clusters","text":"Match every cluster motif database","code":""},{"path":"/reference/match_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match every cluster with motif from database — match_pwm.clusters","text":"","code":"match_pwm.clusters(   sequences,   clusters,   dataset = all_motif_datasets(),   motifs = NULL,   parallel = getOption(\"prego.parallel\", TRUE),   min_D = 0.4,   only_match = FALSE,   ... )"},{"path":"/reference/match_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match every cluster with motif from database — match_pwm.clusters","text":"sequences vector sequences clusters vector cluster assignments dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs JASPAR_motifs, all_motif_datasets(). motifs names specific motifs extract dataset parallel logical, whether use parallel processing min_D minimum distance consider match only_match TRUE, return best match cluster ... Arguments passed compute_pwm pssm PSSM matrix data frame. columns matrix data frame named nucleotides ('', 'C', 'G' 'T'). spat data frame spatial model (returned $spat slot regression). contain column called 'bin' column called 'spat_factor'. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence.","code":""},{"path":"/reference/match_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match every cluster with motif from database — match_pwm.clusters","text":"matrix KS D statistics cluster (columns) every motif (rows) least one cluster D >= min_D. only_match TRUE, named vector name best motif match cluster returned (regardless min_D).","code":""},{"path":"/reference/match_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match every cluster with motif from database — match_pwm.clusters","text":"","code":"D_mat <- match_pwm.clusters(cluster_sequences_example, clusters_example) dim(D_mat) #> [1] 134   5 D_mat[1:5, 1:5] #>                 #> motif                c111       c100       c29        c6        c5 #>   HOMER.Cdx2    0.7540602 0.19627533 0.2020273 0.2570036 0.2844548 #>   HOMER.EGL_5   0.4974026 0.09071462 0.1020756 0.2681117 0.3309550 #>   HOMER.ELT_3   0.2319752 0.34937245 0.3110235 0.4566898 0.4407444 #>   HOMER.GATA3_2 0.2680819 0.43694432 0.3615099 0.5554388 0.5195196 #>   HOMER.Gata1   0.3588412 0.44478934 0.3348357 0.5664606 0.5751288  # return only the best match match_pwm.clusters(cluster_sequences_example, clusters_example, only_match = TRUE) #>                    c111                    c100                     c29  #>           \"JASPAR.CDX1\"           \"HOMER.HOXA2\" \"JOLMA.HNF1B_di_full_2\"  #>                      c6                      c5  #>          \"JASPAR.GATA5\"           \"HOMER.Gata1\""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See dplyr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value dplyr placeholder. rhs function call using dplyr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_pssm_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"Plot LOGO pssm result regression","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"plot_pssm_logo(pssm, title = \"Sequence model\", subtitle = ggplot2::waiver())"},{"path":"/reference/plot_pssm_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"pssm 'pssm' field regression result title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of the pssm result from the regression — plot_pssm_logo","text":"","code":"res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_pssm_logo(res$pssm) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/plot_pssm_logo_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot LOGO of pssm from dataset (e.g. ","title":"Plot LOGO of pssm from dataset (e.g. ","text":"Plot LOGO pssm dataset (e.g. \"HOMER\" \"JASPAR\")","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(   motif,   dataset = all_motif_datasets(),   title = motif,   subtitle = ggplot2::waiver() )"},{"path":"/reference/plot_pssm_logo_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot LOGO of pssm from dataset (e.g. ","text":"motif motif name (e.g. \"GATA4\") dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets() title title plot subtitle subtitle plot","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot LOGO of pssm from dataset (e.g. ","text":"ggplot object","code":""},{"path":"/reference/plot_pssm_logo_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot LOGO of pssm from dataset (e.g. ","text":"","code":"plot_pssm_logo_dataset(\"JASPAR.Brachyury\") #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   plot_pssm_logo_dataset(\"GATA5\", JASPAR_motifs) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/plot_regression_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"return scatter plot response variable averages vs regression model's prediction","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"plot_regression_prediction(pred, response, point_size = 0.5)"},{"path":"/reference/plot_regression_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"pred 'pred' field regression result response 'response' field regression result (response variable) point_size size points plot (default: 0.5)","code":""},{"path":"/reference/plot_regression_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot response variable averages vs the regression model's prediction — plot_regression_prediction","text":"","code":"res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_prediction(res$pred, res$response)"},{"path":"/reference/plot_regression_prediction_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the comulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","title":"Plot the comulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"Plot comulative regression model's prediction stratified response variable","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the comulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"plot_regression_prediction_binary(pred, response)"},{"path":"/reference/plot_regression_prediction_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the comulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"pred 'pred' field regression result response 'response' field regression result (response variable). binary (0/1).","code":""},{"path":"/reference/plot_regression_prediction_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the comulative of the regression model's prediction stratified by the response variable — plot_regression_prediction_binary","text":"","code":"res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], score_metric = \"ks\") #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"ks\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TAATCATT\" #> ✔ KS test D: 0.6552, p-value: 0 plot_regression_prediction_binary(res_binary$pred, res_binary$response)"},{"path":"/reference/plot_regression_qc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the regression results — plot_regression_qc","title":"Plot the regression results — plot_regression_qc","text":"Plot QC regression results","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the regression results — plot_regression_qc","text":"","code":"plot_regression_qc(   reg,   response = NULL,   title = glue(\"Motif regression results (consensus: {reg$consensus})\"),   subtitle = NULL,       caption = glue(\"# of 1: {sum(response == 1)}, # of 0: {sum(response == 0)}, seed: {reg$seed_motif}\") )"},{"path":"/reference/plot_regression_qc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the regression results — plot_regression_qc","text":"reg output regress_pwm response response variable title title plot (optional) subtitle subtitle plot (optional) caption caption plot (optional)","code":""},{"path":"/reference/plot_regression_qc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the regression results — plot_regression_qc","text":"patchwork object","code":""},{"path":"/reference/plot_regression_qc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the regression results — plot_regression_qc","text":"","code":"res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/plot_spat_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial model of the regression result — plot_spat_model","title":"Plot spatial model of the regression result — plot_spat_model","text":"Plot spatial model regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"plot_spat_model(spat)"},{"path":"/reference/plot_spat_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial model of the regression result — plot_spat_model","text":"spat 'spat' field regression result","code":""},{"path":"/reference/plot_spat_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial model of the regression result — plot_spat_model","text":"","code":"res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 plot_spat_model(res$spat)"},{"path":"/reference/prego-package.html","id":null,"dir":"Reference","previous_headings":"","what":"prego: PWM Regression Optimizer — prego-package","title":"prego: PWM Regression Optimizer — prego-package","text":"PREGO implements regression algorithms finding motifs DNA. contains algorithms described : \"Extensive low-affinity transcriptional interactions yeast genome\" doi:10.1101/gr.5113606 .","code":""},{"path":"/reference/prego-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prego: PWM Regression Optimizer — prego-package","text":"Maintainer: Aviezer Lifshitz aviezer.lifshitz@weizmann.ac.il Authors: Amos Tanay amos.tanay@weizmann.ac.il","code":""},{"path":"/reference/pssm_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PSSM difference — pssm_diff","title":"Compute PSSM difference — pssm_diff","text":"Compute PSSM difference","code":""},{"path":"/reference/pssm_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PSSM difference — pssm_diff","text":"","code":"pssm_diff(pssm1, pssm2)"},{"path":"/reference/pssm_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PSSM difference — pssm_diff","text":"pssm1 first PSSM matrix data frame pssm2 second PSSM matrix data frame","code":""},{"path":"/reference/pssm_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PSSM difference — pssm_diff","text":"KL divergence two PSSMs","code":""},{"path":"/reference/pssm_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PSSM difference — pssm_diff","text":"","code":"res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 pssm_diff(res1$pssm, JASPAR_motifs[JASPAR_motifs$motif == \"HNF1A\", ]) #> [1] 0.4198401"},{"path":"/reference/pssm_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match PSSM to a directory of motifs — pssm_match","title":"Match PSSM to a directory of motifs — pssm_match","text":"Match PSSM directory motifs","code":""},{"path":"/reference/pssm_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"pssm_match(   pssm,   motifs,   best = FALSE,   parallel = getOption(\"prego.parallel\", TRUE) )"},{"path":"/reference/pssm_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match PSSM to a directory of motifs — pssm_match","text":"pssm PSSM matrix data frame motifs data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name best return best match parallel use parallel processing. Set number cores using set_parallel.","code":""},{"path":"/reference/pssm_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match PSSM to a directory of motifs — pssm_match","text":"best TRUE, string best match. Otherwise, data frame row per motif column named 'dist' distance pssm. data frame sorted increasing distance.","code":""},{"path":"/reference/pssm_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match PSSM to a directory of motifs — pssm_match","text":"","code":"res1 <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 head(pssm_match(res1$pssm, JASPAR_motifs)) #>    motif      dist #> 1   Hox1 0.3511553 #> 2 Lhx3/4 0.3538776 #> 3    Rax 0.3565490 #> 4 Uncx-b 0.3568905 #> 5   Nkx3 0.3583501 #> 6   Noto 0.3709595 pssm_match(res1$pssm, JASPAR_motifs, best = TRUE) #> [1] \"Hox1\""},{"path":"/reference/regress_pwm.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on clusters — regress_pwm.clusters","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"Run PWM regression clusters","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"regress_pwm.clusters(   sequences,   clusters,   use_sample = FALSE,   match_with_db = TRUE,   sample_frac = NULL,   sample_ratio = 1,   final_metric = \"ks\",   parallel = getOption(\"prego.parallel\", TRUE),   ... )"},{"path":"/reference/regress_pwm.clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) clusters vector cluster assignments sequence use_sample whether use sampled optimization (default: FALSE). match_with_db match resulting PWMs motif databases using pssm_match. add column named 'db_match' stats data frame, together 'pred_mat_db' database motif predictions, 'db_dataset' similiar 'motif_dataset' database motifs. Note closest match returned, even similar enough absolute terms. sample_frac vector two numbers, specifying fraction sequences use sampling sequences cluster (first number) cluster (second number). NULL - sample_ratio sample_frac NULL, number sequences cluster equal sample_ratio times number sequences cluster. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. parallel whether run optimization parallel. use set_parallel set number cores use. ... Arguments passed regress_pwm, regress_pwm.sample response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see thre slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities include_response include response resulting list (default: TRUE) verbose show verbose messages. seed random seed consensus_single_thresh,consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. kmer_length number non-gap characters motifs screened is_train boolean vector determine subset sequences use screening sample_idxs indices sequences use. NULL, indices sampled using sample_frac.","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"list following elements: models: list models cluster cluster_mat: indicator matrix cluster assignments pred_mat: matrix predicted pwm sequence (rows) cluster (columns) motif_dataset: data frame PSSMs cluster spat_dataset: data frame spatial model cluster stats: data frame statistics cluster","code":""},{"path":"/reference/regress_pwm.clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on clusters — regress_pwm.clusters","text":"","code":"res <- regress_pwm.clusters(cluster_sequences_example, clusters_example) #> ℹ Running regression for 5 clusters #> ℹ Matching with motif databases head(res$pred_mat) #>                           c100      c111       c29        c5        c6 #> chr1_5108540_5108840 -17.28819 -15.88604 -16.43380 -16.61165 -16.84203 #> chr1_7313460_7313760 -14.69661 -17.02461 -16.51139 -16.67072 -17.51148 #> chr1_7778180_7778480 -15.75232 -15.11354 -16.80705 -16.65310 -16.69591 #> chr1_9381040_9381340 -16.03874 -15.04809 -15.20886 -16.47437 -16.01101 #> chr1_9921360_9921660 -14.85159 -17.90363 -15.35405 -16.13744 -16.07321 #> chr1_9931940_9932240 -16.32993 -17.16320 -14.44998 -16.72751 -16.53625 res$stats #> # A tibble: 5 x 7 #>   cluster consensus      ks_D        r2      seed_motif              db_match #> 1    c100   AT***TC 0.7024075 0.3852463 ***ATCCATCA**** JASPAR.MEIS1.MA1639.1 #> 2    c111   Y*RTAAA 0.8479663 0.4978355 ***CAATTAAC****   JOLMA.CDX1_mono_DBD #> 3     c29 T*A***W*T 0.8507039 0.5581745 ***TAATCATT****            HOMER.Hnf1 #> 4      c5      GATA 0.5887910 0.2227806 ***CTGATAAG****      JASPAR.GATA1/2/3 #> 5      c6      TATC 0.6160721 0.2783910 ***TCTTATCT****          JASPAR.GATAd #>   db_match_dist #> 1      0.244724 #> 2      0.152716 #> 3      0.340463 #> 4      0.198050 #> 5      0.219126  plot_regression_qc(res$models[[1]], title = names(res$models)[1]) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/regress_pwm.cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validate a PWMregression model — regress_pwm.cv","title":"Cross-validate a PWMregression model — regress_pwm.cv","text":"Perform cross-validation PWM regression model. can either provide explicit folds, use nfolds argument set number folds. response binary (0 1) categories vector given, folds stratified response/categories.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validate a PWMregression model — regress_pwm.cv","text":"","code":"regress_pwm.cv(   sequences,   response,   nfolds = NULL,   metric = NULL,   folds = NULL,   categories = NULL,   use_sample = TRUE,   seed = 60427,   parallel = getOption(\"prego.parallel\", FALSE),   add_full_model = TRUE,   ... )"},{"path":"/reference/regress_pwm.cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validate a PWMregression model — regress_pwm.cv","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences nfolds number folds cross-validation. Can NULL folds provided. metric metric use cross-validation. One 'ks' 'r2'. NULL - 'ks' set binary response 'r2' continuous response. folds vector fold numbers sequence (optional) categories vector categories sequence (optional) use_sample whether use sampled optimization . seed random seed parallel whether run cross-validation parallel. add_full_model whether add full model (without cross-validation) results.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validate a PWMregression model — regress_pwm.cv","text":"list following elements: cv_models: list models, one fold. cv_pred: vector predictions sequence. score: score model cross-validated predictions. cv_scores: vector scores fold. folds: vector fold number sequence. full_model: full model (without cross-validation), add_full_model TRUE.","code":""},{"path":"/reference/regress_pwm.cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validate a PWMregression model — regress_pwm.cv","text":"","code":"res <- regress_pwm.cv(cluster_sequences_example, cluster_mat_example[, 1], nfolds = 5, use_sample = TRUE, sample_frac = c(0.1, 1)) #> ℹ Stratified sampling #> ℹ Response is binary: setting metric to \"ks\" #> ℹ Using sampled optimization #> ✔ Cross-validation score: 0.761035703554679 #> ℹ Performing sampled optimization #> ℹ Sampling 0.1 and 1 of the dataset #> ℹ Stratified sampling #> ℹ sampled 187 zeros and 492 ones #>  #> ── Generate candidate kmers  #>  #> ── Regress each candidate kmer on sampled data  #> ℹ Running regression on 12 candidate kmers #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> → regressing with seed: \"AAT*ATT\" #> → \"AAT*ATT\", score (r2): 0.591132168596821 #> → regressing with seed: \"GTTAAT\" #> → \"GTTAAT\", score (r2): 0.604879432766023 #> → regressing with seed: \"CTTATC\" #> → \"CTTATC\", score (r2): 0.340270238865439 #> → regressing with seed: \"TAAT*AT\" #> → \"TAAT*AT\", score (r2): 0.605634808074741 #> → regressing with seed: \"CTTATCT\" #> → \"CTTATCT\", score (r2): 0.388715363408895 #> → regressing with seed: \"TCTTATC\" #> → \"TCTTATC\", score (r2): 0.336555500560427 #> → regressing with seed: \"AAT*ATTA\" #> → \"AAT*ATTA\", score (r2): 0.607909926960762 #> → regressing with seed: \"TAAT*ATT\" #> → \"TAAT*ATT\", score (r2): 0.608690777008848 #> → regressing with seed: \"TAATCATT\" #> → \"TAATCATT\", score (r2): 0.604883777958721 #> → regressing with seed: \"AAGATAAC\" #> → \"AAGATAAC\", score (r2): 0.391166315606388 #> → regressing with seed: \"AAT*ATTAA\" #> → \"AAT*ATTAA\", score (r2): 0.612328728097362 #> → regressing with seed: \"TTAAT*ATT\" #> → \"TTAAT*ATT\", score (r2): 0.612328820509699 #> ℹ Best motif: \"***TTAAT*ATT***\", score (r2): 0.612328820509699 #> ✔ Finished running regression. Consensus: \"T*A\" #> ✔ KS test D: 0.818, p-value: 0 res$score #>         D  #> 0.7610357  res$cv_scores #>   fold1.D   fold2.D   fold3.D   fold4.D   fold5.D  #> 0.7486631 0.8039216 0.8321388 0.7767139 0.7171308   plot(res$cv_pred, res$full_model$pred, xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1)  plot_regression_prediction_binary(res$cv_pred, cluster_mat_example[, 1])  plot_regression_prediction_binary(res$full_model$pred, cluster_mat_example[, 1])   # without sampling res <- regress_pwm.cv(cluster_sequences_example, cluster_mat_example[, 1], nfolds = 5, use_sample = FALSE) #> ℹ Stratified sampling #> ℹ Response is binary: setting metric to \"ks\" #> ✔ Cross-validation score: 0.831531608031667 #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 res$score #>         D  #> 0.8315316  res$cv_scores #>   fold1.D   fold2.D   fold3.D   fold4.D   fold5.D  #> 0.8024361 0.8345217 0.8846364 0.8416589 0.8319746  plot(res$cv_pred, res$full_model$pred, xlab = \"CV predictions\", ylab = \"Full model predictions\", cex = 0.1)"},{"path":"/reference/regress_pwm.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a PWM regression — regress_pwm","title":"Perform a PWM regression — regress_pwm","text":"Perform PWM regression","code":""},{"path":"/reference/regress_pwm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a PWM regression — regress_pwm","text":"","code":"regress_pwm(   sequences,   response,   motif = NULL,   motif_length = 15,   score_metric = \"r2\",   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   spat_bin = 50,   spat_model = NULL,   improve_epsilon = 0.0001,   min_nuc_prob = 0.001,   unif_prior = 0.05,   is_train = NULL,   include_response = TRUE,   seed = 60427,   verbose = FALSE,   kmer_length = 8,   motif_num = 1,   consensus_single_thresh = 0.6,   consensus_double_thresh = 0.85,   match_with_db = FALSE,   motif_dataset = all_motif_datasets(),   ... )"},{"path":"/reference/regress_pwm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a PWM regression — regress_pwm","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences motif Initial motif start regression . Can either string kmer character \"*\" indicates wildcard data frame pre-computed PSSM (see thre slot pssm return value function). NULL - K-mer screen performed order find best kmer initialization. motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). spat_model previously computed spatial model (see spat) return value function. can used motif previously computed PSSM. improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities is_train boolean vector determine subset sequences use screening include_response include response resulting list (default: TRUE) seed random seed verbose show verbose messages. kmer_length number non-gap characters motifs screened consensus_single_thresh, consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. ... Arguments passed screen_kmers min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple tesing severly). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE)","code":""},{"path":"/reference/regress_pwm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a PWM regression — regress_pwm","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample).","code":""},{"path":"/reference/regress_pwm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a PWM regression — regress_pwm","text":"","code":"res <- regress_pwm(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 2138 kmers in 1000 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TTTACAAC****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.01, 0.0054, 0.0373, 0.0002, and 0.0087 res$pssm #>    pos            A            C            G            T #> 1    0 0.2095587850 0.1994811445 0.4830077589 0.1079523116 #> 2    1 0.1915405840 0.1868688613 0.3343640864 0.2872264385 #> 3    2 0.2101173997 0.1766019762 0.4432460964 0.1700345427 #> 4    3 0.1508440375 0.2343198955 0.0968408510 0.5179951787 #> 5    4 0.0008706285 0.2127699703 0.0008706285 0.7854887247 #> 6    5 0.0994162336 0.0010572918 0.0010095837 0.8985168934 #> 7    6 0.8009245396 0.0008999961 0.1971910000 0.0009845063 #> 8    7 0.0006821602 0.6252906919 0.0006821602 0.3733449876 #> 9    8 0.5259284377 0.0006187394 0.4273795187 0.0460732840 #> 10   9 0.8413030505 0.0011087267 0.1248238087 0.0327644646 #> 11  10 0.0484228246 0.6682083011 0.1590529233 0.1243159994 #> 12  11 0.1276983917 0.3283757865 0.0485897139 0.4953361154 #> 13  12 0.1383337379 0.2413944304 0.2644408643 0.3558309674 #> 14  13 0.1295451671 0.4627699852 0.2882918715 0.1193930283 #> 15  14 0.1975761950 0.2230612934 0.1874464601 0.3919161260 res$spat #>   bin spat_factor #> 1   0  0.06274135 #> 2  50  0.11854498 #> 3 100  0.08841380 #> 4 150  0.19018117 #> 5 200  0.24080996 #> 6 250  0.14966135 #> 7 300  0.14966135 head(res$pred) #> [1] -19.17809 -17.81525 -15.05438 -20.49352 -18.27786 -18.84269  plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # intialize with a pre-computed PSSM res1 <- regress_pwm(sequences_example, response_mat_example, motif = res$pssm) #> ℹ Number of response variables: 5 #> ℹ Initializing regression with pre-computed PSSM, consensus: \"TTACRAC\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.0105, 0.0056, 0.0363, 0.0001, and 0.01  # intialize with a pre-computed PSSM and spatial model res2 <- regress_pwm(sequences_example, response_mat_example, motif = res$pssm, spat_model = res$spat) #> ℹ Number of response variables: 5 #> ℹ Initializing regression with pre-computed PSSM, consensus: \"TTACRAC\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"TTACRAC\" #> ✔ R^2: 0.0096, 0.0052, 0.0368, 0.0003, and 0.0085  # binary response res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1]) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.   # match with db res_binary <- regress_pwm(cluster_sequences_example, cluster_mat_example[, 1], match_with_db = TRUE) #> ℹ Number of response variables: 1 #> ℹ Screening for kmers in order to initialize regression #> ℹ Number of response variables: 1 #> ℹ Screening kmers of length 8, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 198 kmers in 2359 sequences. #> ℹ Motif is shorter than 15, extending with wildcards #> ℹ Initializing regression with the following motif: \"***TAATCATT****\" #> ℹ Running regression #> • Motif length: 15 #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: 300 #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ✔ Finished running regression. Consensus: \"T*A***W*T\" #> ℹ Best match in the database: \"HOMER.Hnf1\", KL: 0.34 #> ✔ \"HOMER.Hnf1\" KS test D: 0.8139, p-value: 0 #> ✔ KS test D: 0.8507, p-value: 0 plot_regression_qc(res_binary) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/regress_pwm.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Run PWM regression on a sample of the data — regress_pwm.sample","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"optimization performed sampled dataset size sample_frac (explicit sampled indices sample_idxs) different candidates kmers regressed order find best seed according final_metric.","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"regress_pwm.sample(   sequences,   response,   motif_length = 15,   score_metric = \"r2\",   bidirect = TRUE,   spat_min = 0,   spat_max = NULL,   spat_bin = 50,   improve_epsilon = 0.0001,   min_nuc_prob = 0.001,   unif_prior = 0.05,   is_train = NULL,   include_response = TRUE,   seed = 60427,   verbose = FALSE,   kmer_length = 6:8,   min_gap = 0,   max_gap = 1,   min_kmer_cor = 0.1,   consensus_single_thresh = 0.6,   consensus_double_thresh = 0.85,   sample_frac = NULL,   sample_idxs = NULL,   sample_ratio = 1,   final_metric = \"r2\",   parallel = getOption(\"prego.parallel\", FALSE),   match_with_db = FALSE,   motif_dataset = all_motif_datasets(),   ... )"},{"path":"/reference/regress_pwm.sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences motif_length Length seed motif. motif shorter , extended wildcards (stars). Note motif longer , truncated. score_metric metric use optimizing PWM. One \"r2\" \"ks\". using \"ks\" response variable single vector 0 1. bidirect motif bi-directional. TRUE, reverse-complement motif used well. spat_min start spatial model beginning sequence (bp) spat_max end spatial model beginning sequence (bp). NULL - spatial model end end sequence. spat_bin size spatial bin (bp). improve_epsilon minimum improve objective function continue optimization min_nuc_prob minimum nucleotide probability every iteration unif_prior uniform prior nucleotide probabilities is_train boolean vector determine subset sequences use screening include_response include response resulting list (default: TRUE) seed random seed verbose verbosity optimization. kmer_length vector kmer lengths screen order find best seed motif. consensus_single_thresh, consensus_double_thresh thresholds consensus sequence calculation (single double nucleotides) sample_frac fraction dataset sample. response categorical (0 1), sampling stratified category, .e. sample_frac can vector length 2 fraction 0 1 responses sample respectively. NULL - default 0.1 continuous variables, binary variables - number 0 responses equal sample_ratio times number 1 responses. sample_idxs indices sequences use. NULL, indices sampled using sample_frac. sample_ratio ratio '1' category '0' category sampled dataset. Relevant sample_frac NULL. final_metric metric use order choose best motif. One 'ks' 'r2'. Note unlike score_metric used regression , metric used choosing best motif runs sampled dataset. parallel whether run optimization parallel. use set_parallel set number cores use. match_with_db match resulting PWMs motif databases using pssm_match. Note closest match returned, even similar enough absolute terms. motif_dataset data frame PSSMs ('', 'C', 'G' 'T' columns), additional column 'motif' containing motif name, example HOMER_motifs, JASPAR_motifs all_motif_datasets(). default all_motif_datasets() used. ... Arguments passed screen_kmers min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported min_gap,max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple tesing severly). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE)","code":""},{"path":"/reference/regress_pwm.sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"list following elements: pssm: data frame pssm matrix inferred motif, rows positions columns nucleotides. spat: data frame inferred spatial model, spatial factor bin. pred: vector predicted pwm sequence. consensus: Consensus sequence based PSSM. response: response matrix. include_response FALSE, response matrix included list. r2: \\(r^2\\) prediction respect response variable. ks: response binary, Kolmogorov-Smirnov test results predictions response 1 vs predictions response 0. seed_motif: seed motif started regression. kmers: k-mers screened order find best seed motif (motif NULL). sample_idxs: indices sequences used regression (regress_pwm.sample).","code":""},{"path":"/reference/regress_pwm.sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run PWM regression on a sample of the data — regress_pwm.sample","text":"","code":"res <- regress_pwm.sample(cluster_sequences_example, cluster_mat_example[, 1], final_metric = \"ks\") #> ℹ Performing sampled optimization #> ℹ Sampling 0.26 and 1 of the dataset #> ℹ Stratified sampling #> ℹ sampled 492 zeros and 492 ones #>  #> ── Generate candidate kmers  #>  #> ── Regress each candidate kmer on sampled data  #> ℹ Running regression on 12 candidate kmers #> • Bidirectional: TRUE #> • Spat min: 0 #> • Spat max: #> • Spat bin: 50 #> • Improve epsilon: 0.0001 #> • Min nuc prob: 0.001 #> • Uniform prior: 0.05 #> • Score metric: \"r2\" #> • Seed: 60427 #> ℹ Best motif: \"***TAAT*ATT****\", score (ks): 0.839430894308943 #> ✔ Finished running regression. Consensus: \"T*A***W*Y\" #> ✔ KS test D: 0.8317, p-value: 0 res$pssm #>    pos           A           C            G           T #> 1    0 0.250626564 0.197994992 0.3007518649 0.250626564 #> 2    1 0.172827423 0.126956835 0.4582388699 0.241976887 #> 3    2 0.001020463 0.224947587 0.1401386410 0.633893311 #> 4    3 0.183996066 0.145866245 0.1611137390 0.509023905 #> 5    4 0.750249088 0.000829170 0.2480926216 0.000829170 #> 6    5 0.493347496 0.277119190 0.2284980565 0.001035169 #> 7    6 0.205613986 0.260621846 0.0010101653 0.532754004 #> 8    7 0.243313923 0.269434452 0.3032339811 0.184017703 #> 9    8 0.454548210 0.120878413 0.0008699328 0.423703402 #> 10   9 0.272164911 0.001022725 0.3231071830 0.403705150 #> 11  10 0.032962959 0.355953276 0.0507135391 0.560370207 #> 12  11 0.246685192 0.227644801 0.2974082530 0.228261679 #> 13  12 0.266773373 0.268996507 0.2223111391 0.241918981 #> 14  13 0.209610566 0.308415264 0.2409870923 0.240987092 #> 15  14 0.245290428 0.254709572 0.2649136484 0.235086337 res$spat #>   bin spat_factor #> 1   0  0.05538948 #> 2  50  0.16784865 #> 3 100  0.19019334 #> 4 150  0.18985935 #> 5 200  0.14691675 #> 6 250  0.08195649 #> 7 300  0.16784865 head(res$pred) #> [1] -16.36732 -16.49921 -16.82357 -15.62233 -15.53948 -15.02455  plot_regression_qc(res) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead. #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"/reference/screen_kmers.html","id":null,"dir":"Reference","previous_headings":"","what":"Screen for kmers — screen_kmers","title":"Screen for kmers — screen_kmers","text":"Screen kmers","code":""},{"path":"/reference/screen_kmers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screen for kmers — screen_kmers","text":"","code":"screen_kmers(   sequences,   response,   kmer_length = 6,   min_cor = 0.08,   min_n = 50,   is_train = NULL,   min_gap = 0,   max_gap = 0,   from_range = 0,   to_range = NULL,   return_mat = FALSE,   seed = 60427,   verbose = FALSE )"},{"path":"/reference/screen_kmers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screen for kmers — screen_kmers","text":"sequences vector DNA sequences ('', 'T', 'C' 'G'. go toupper) response matrix response variables - number rows equal number sequences kmer_length number non-gap characters motifs screened min_cor patterns maximum correlation one response variable larger min_cor reported min_n patterns average number occurrences sequences larger min_n reported is_train boolean vector determine subset sequences use screening min_gap, max_gap length gap considered pattern. one gap, length min_gap:max_gap, used, located anywhere motif. Note greatly expand search space (increase multiple tesing severly). from_range Sequences considered position from_range (default 0) to_range Sequences considered position to_range (default NULL - using length sequences) return_mat Return matrix patterns correlation response variables instead data frame. (default: FALSE) seed random seed verbose show verbose messages","code":""},{"path":"/reference/screen_kmers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screen for kmers — screen_kmers","text":"data frame following columns, together column response variable correlation kmers response variable: kmer: kmer pattern, \"*\" indicates wildcard, max_r2: maximum R^2 one response variables, avg_n: average number times kmer appears sequences, avg_var: variance number times kmer appears sequences, return_mat TRUE, matrix correlations response variables (rows kmers) returned instead data frame. kmer found, empty data frame returned.","code":""},{"path":"/reference/screen_kmers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screen for kmers — screen_kmers","text":"","code":"kmers <- screen_kmers(sequences_example, response_mat_example) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>     kmer     max_r2 avg_n    avg_var          c1          c2         c3 #> 1 AGATAA 0.04998882 0.140 0.15240000 -0.01025383 -0.03046725 -0.2235818 #> 2 TTATCT 0.02975253 0.128 0.13761599  0.03136108  0.04927359 -0.1724892 #> 3 CTTATC 0.02680831 0.080 0.07960001  0.02861430  0.01967959 -0.1637324 #> 4 GGGGAG 0.02300140 0.243 0.28195098  0.04611732  0.02960520  0.1516621 #> 5 GGGCGG 0.02280306 0.062 0.06015600  0.06576437  0.02662074  0.1510068 #> 6 TAACTG 0.02215597 0.071 0.06995900 -0.01145993 -0.02249238 -0.1488488 #>             c4          c5 #> 1  0.004382457 -0.03498838 #> 2  0.035843253  0.02917432 #> 3  0.059437271  0.03772539 #> 4  0.044013925  0.03089626 #> 5  0.104473867  0.12732512 #> 6 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, return_mat = TRUE) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 575 kmers in 1000 sequences. head(kmers) #>                 c1          c2         c3           c4          c5 #> AGATAA -0.01025383 -0.03046725 -0.2235818  0.004382457 -0.03498838 #> TTATCT  0.03136108  0.04927359 -0.1724892  0.035843253  0.02917432 #> CTTATC  0.02861430  0.01967959 -0.1637324  0.059437271  0.03772539 #> GGGGAG  0.04611732  0.02960520  0.1516621  0.044013925  0.03089626 #> GGGCGG  0.06576437  0.02662074  0.1510068  0.104473867  0.12732512 #> TAACTG -0.01145993 -0.02249238 -0.1488488 -0.037136175 -0.01858661  kmers <- screen_kmers(sequences_example, response_mat_example, max_gap = 3) #> ℹ Number of response variables: 5 #> ℹ Screening kmers of length 6, from position 0 to position 300 #> ℹ Gaps of length 0:3 are allowed #> ℹ minimal correlation: 0.08, minimal number of occurrences: 50 #> ✔ Found 4884 kmers in 1000 sequences. head(kmers) #>       kmer     max_r2 avg_n    avg_var           c1           c2         c3 #> 1   AGATAA 0.05012437 0.139 0.15167901 -0.011159671 -0.033565160 -0.2238847 #> 2  AGA*AAG 0.03404951 0.220 0.23760001  0.062884174  0.063842162 -0.1845251 #> 3   TTATCT 0.02915060 0.127 0.13487099  0.036021627  0.051995803 -0.1707355 #> 4 ACAT**CT 0.02848161 0.090 0.09190000 -0.002383306 -0.023468828 -0.1687650 #> 5  AG*TAAG 0.02829135 0.118 0.12007600  0.034630746 -0.005794165 -0.1682003 #> 6   CTTATC 0.02680831 0.080 0.07960001  0.028614303  0.019679585 -0.1637324 #>            c4          c5 #> 1 0.001539792 -0.03616555 #> 2 0.025056362  0.02373981 #> 3 0.032191906  0.02568413 #> 4 0.019714575 -0.02059141 #> 5 0.046150818  0.02593128 #> 6 0.059437271  0.03772539"},{"path":"/reference/set_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parallel threads — set_parallel","title":"Set parallel threads — set_parallel","text":"Set number parallel threads use. prego uses R function doMC::registerDoMC register parallelization. default, prego uses 80% number available cores. options saved 'prego.parallel' (use parallelization, logical) 'prego.parallel.nc' (number cores use, integer).","code":""},{"path":"/reference/set_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parallel threads — set_parallel","text":"","code":"set_parallel(thread_num = max(1, round(parallel::detectCores() * 0.8)))"},{"path":"/reference/set_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parallel threads — set_parallel","text":"thread_num number threads. use '1' non parallel behavior","code":""},{"path":"/reference/set_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parallel threads — set_parallel","text":"None","code":""},{"path":"/reference/set_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set parallel threads — set_parallel","text":"","code":"# \\donttest{ set_parallel(8) #> ℹ Parallelization enabled. Using 8 threads. # }"}]
